ARM GAS  /tmp/ccMx2OYU.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"timers.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	prvGetNextExpireTime:
  23              	.LFB16:
  24              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
ARM GAS  /tmp/ccMx2OYU.s 			page 2


  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
ARM GAS  /tmp/ccMx2OYU.s 			page 3


  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = {0};
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = {0};
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
ARM GAS  /tmp/ccMx2OYU.s 			page 4


 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
ARM GAS  /tmp/ccMx2OYU.s 			page 5


 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
ARM GAS  /tmp/ccMx2OYU.s 			page 6


 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
ARM GAS  /tmp/ccMx2OYU.s 			page 7


 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
ARM GAS  /tmp/ccMx2OYU.s 			page 8


 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
ARM GAS  /tmp/ccMx2OYU.s 			page 9


 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  /tmp/ccMx2OYU.s 			page 10


 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
ARM GAS  /tmp/ccMx2OYU.s 			page 11


 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  25              		.loc 1 599 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
ARM GAS  /tmp/ccMx2OYU.s 			page 12


  30              	.LVL0:
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  31              		.loc 1 609 0
  32 0000 064B     		ldr	r3, .L4
  33 0002 1A68     		ldr	r2, [r3]
  34 0004 1368     		ldr	r3, [r2]
  35 0006 B3FA83F3 		clz	r3, r3
  36 000a 5B09     		lsrs	r3, r3, #5
  37 000c 0360     		str	r3, [r0]
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  38              		.loc 1 610 0
  39 000e 13B9     		cbnz	r3, .L3
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  40              		.loc 1 612 0
  41 0010 D368     		ldr	r3, [r2, #12]
  42 0012 1868     		ldr	r0, [r3]
  43              	.LVL1:
  44 0014 7047     		bx	lr
  45              	.LVL2:
  46              	.L3:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  47              		.loc 1 617 0
  48 0016 0020     		movs	r0, #0
  49              	.LVL3:
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  50              		.loc 1 621 0
  51 0018 7047     		bx	lr
  52              	.L5:
  53 001a 00BF     		.align	2
  54              	.L4:
  55 001c 00000000 		.word	.LANCHOR0
  56              		.cfi_endproc
  57              	.LFE16:
  59              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  60              		.align	1
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu softvfp
  66              	prvInsertTimerInActiveList:
ARM GAS  /tmp/ccMx2OYU.s 			page 13


  67              	.LFB18:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  68              		.loc 1 648 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL4:
  73 0000 08B5     		push	{r3, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 3, -8
  77              		.cfi_offset 14, -4
  78              	.LVL5:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  79              		.loc 1 651 0
  80 0002 4160     		str	r1, [r0, #4]
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  81              		.loc 1 652 0
  82 0004 0061     		str	r0, [r0, #16]
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  83              		.loc 1 654 0
  84 0006 9142     		cmp	r1, r2
  85 0008 0CD8     		bhi	.L7
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  86              		.loc 1 658 0
ARM GAS  /tmp/ccMx2OYU.s 			page 14


  87 000a D21A     		subs	r2, r2, r3
  88              	.LVL6:
  89 000c 8369     		ldr	r3, [r0, #24]
  90              	.LVL7:
  91 000e 9A42     		cmp	r2, r3
  92 0010 01D3     		bcc	.L13
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
  93              		.loc 1 662 0
  94 0012 0120     		movs	r0, #1
  95              	.LVL8:
  96 0014 08BD     		pop	{r3, pc}
  97              	.LVL9:
  98              	.L13:
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  99              		.loc 1 666 0
 100 0016 011D     		adds	r1, r0, #4
 101              	.LVL10:
 102 0018 094B     		ldr	r3, .L14
 103 001a 1868     		ldr	r0, [r3]
 104              	.LVL11:
 105 001c FFF7FEFF 		bl	vListInsert
 106              	.LVL12:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 107              		.loc 1 649 0
 108 0020 0020     		movs	r0, #0
 109 0022 08BD     		pop	{r3, pc}
 110              	.LVL13:
 111              	.L7:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 112              		.loc 1 671 0
 113 0024 9A42     		cmp	r2, r3
 114 0026 01D2     		bcs	.L9
 115              		.loc 1 671 0 is_stmt 0 discriminator 1
 116 0028 9942     		cmp	r1, r3
 117 002a 06D2     		bcs	.L11
 118              	.L9:
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 119              		.loc 1 680 0 is_stmt 1
 120 002c 011D     		adds	r1, r0, #4
ARM GAS  /tmp/ccMx2OYU.s 			page 15


 121              	.LVL14:
 122 002e 054B     		ldr	r3, .L14+4
 123              	.LVL15:
 124 0030 1868     		ldr	r0, [r3]
 125              	.LVL16:
 126 0032 FFF7FEFF 		bl	vListInsert
 127              	.LVL17:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128              		.loc 1 649 0
 129 0036 0020     		movs	r0, #0
 130 0038 08BD     		pop	{r3, pc}
 131              	.LVL18:
 132              	.L11:
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 133              		.loc 1 676 0
 134 003a 0120     		movs	r0, #1
 135              	.LVL19:
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 136              		.loc 1 685 0
 137 003c 08BD     		pop	{r3, pc}
 138              	.LVL20:
 139              	.L15:
 140 003e 00BF     		.align	2
 141              	.L14:
 142 0040 00000000 		.word	.LANCHOR1
 143 0044 00000000 		.word	.LANCHOR0
 144              		.cfi_endproc
 145              	.LFE18:
 147              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 148              		.align	1
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 152              		.fpu softvfp
 154              	prvCheckForValidListAndQueue:
 155              	.LFB21:
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
ARM GAS  /tmp/ccMx2OYU.s 			page 16


 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
ARM GAS  /tmp/ccMx2OYU.s 			page 17


 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
ARM GAS  /tmp/ccMx2OYU.s 			page 18


 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
ARM GAS  /tmp/ccMx2OYU.s 			page 19


 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 156              		.loc 1 895 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 30B5     		push	{r4, r5, lr}
 161              	.LCFI1:
 162              		.cfi_def_cfa_offset 12
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 24
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 169              		.loc 1 899 0
 170 0004 FFF7FEFF 		bl	vPortEnterCritical
 171              	.LVL21:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 172              		.loc 1 901 0
 173 0008 114B     		ldr	r3, .L20
 174 000a 1B68     		ldr	r3, [r3]
 175 000c 1BB1     		cbz	r3, .L19
 176              	.L17:
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
ARM GAS  /tmp/ccMx2OYU.s 			page 20


 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 177              		.loc 1 941 0
 178 000e FFF7FEFF 		bl	vPortExitCritical
 179              	.LVL22:
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 180              		.loc 1 942 0
 181 0012 03B0     		add	sp, sp, #12
 182              	.LCFI3:
 183              		.cfi_remember_state
 184              		.cfi_def_cfa_offset 12
 185              		@ sp needed
 186 0014 30BD     		pop	{r4, r5, pc}
 187              	.L19:
 188              	.LCFI4:
 189              		.cfi_restore_state
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 190              		.loc 1 903 0
 191 0016 0F4D     		ldr	r5, .L20+4
 192 0018 2846     		mov	r0, r5
 193 001a FFF7FEFF 		bl	vListInitialise
 194              	.LVL23:
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 195              		.loc 1 904 0
 196 001e 0E4C     		ldr	r4, .L20+8
 197 0020 2046     		mov	r0, r4
 198 0022 FFF7FEFF 		bl	vListInitialise
ARM GAS  /tmp/ccMx2OYU.s 			page 21


 199              	.LVL24:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 200              		.loc 1 905 0
 201 0026 0D4B     		ldr	r3, .L20+12
 202 0028 1D60     		str	r5, [r3]
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 203              		.loc 1 906 0
 204 002a 0D4B     		ldr	r3, .L20+16
 205 002c 1C60     		str	r4, [r3]
 206              	.LBB41:
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 207              		.loc 1 915 0
 208 002e 0023     		movs	r3, #0
 209 0030 0093     		str	r3, [sp]
 210 0032 0C4B     		ldr	r3, .L20+20
 211 0034 0C4A     		ldr	r2, .L20+24
 212 0036 1021     		movs	r1, #16
 213 0038 0A20     		movs	r0, #10
 214 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 215              	.LVL25:
 216 003e 044B     		ldr	r3, .L20
 217 0040 1860     		str	r0, [r3]
 218              	.LBE41:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 219              		.loc 1 925 0
 220 0042 0028     		cmp	r0, #0
 221 0044 E3D0     		beq	.L17
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 222              		.loc 1 927 0
 223 0046 0949     		ldr	r1, .L20+28
 224 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 225              	.LVL26:
 226 004c DFE7     		b	.L17
 227              	.L21:
 228 004e 00BF     		.align	2
 229              	.L20:
 230 0050 00000000 		.word	.LANCHOR2
 231 0054 00000000 		.word	.LANCHOR3
 232 0058 00000000 		.word	.LANCHOR4
 233 005c 00000000 		.word	.LANCHOR0
 234 0060 00000000 		.word	.LANCHOR1
 235 0064 00000000 		.word	.LANCHOR5
 236 0068 00000000 		.word	.LANCHOR6
 237 006c 00000000 		.word	.LC0
 238              		.cfi_endproc
 239              	.LFE21:
 241              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 242              		.align	1
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu softvfp
 248              	prvInitialiseNewTimer:
 249              	.LFB7:
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 250              		.loc 1 358 0
 251              		.cfi_startproc
ARM GAS  /tmp/ccMx2OYU.s 			page 22


 252              		@ args = 8, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              	.LVL27:
 255 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 256              	.LCFI5:
 257              		.cfi_def_cfa_offset 24
 258              		.cfi_offset 4, -24
 259              		.cfi_offset 5, -20
 260              		.cfi_offset 6, -16
 261              		.cfi_offset 7, -12
 262              		.cfi_offset 8, -8
 263              		.cfi_offset 14, -4
 264 0004 079C     		ldr	r4, [sp, #28]
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 265              		.loc 1 360 0
 266 0006 41B9     		cbnz	r1, .L23
 267              	.LBB42:
 268              	.LBB43:
 269              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
ARM GAS  /tmp/ccMx2OYU.s 			page 23


  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccMx2OYU.s 			page 24


  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
ARM GAS  /tmp/ccMx2OYU.s 			page 25


 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h **** 	__asm volatile
 270              		.loc 2 195 0
 271              		.syntax unified
 272              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 273 0008 4FF05003 			mov r3, #80												
 274 000c 83F31188 		msr basepri, r3											
 275 0010 BFF36F8F 		isb														
 276 0014 BFF34F8F 		dsb														
 277              	
 278              	@ 0 "" 2
 279              	.LVL28:
 280              		.thumb
 281              		.syntax unified
 282              	.L24:
 283 0018 FEE7     		b	.L24
ARM GAS  /tmp/ccMx2OYU.s 			page 26


 284              	.LVL29:
 285              	.L23:
 286 001a 0F46     		mov	r7, r1
 287              	.LBE43:
 288              	.LBE42:
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 289              		.loc 1 362 0
 290 001c 74B1     		cbz	r4, .L22
 291 001e 1D46     		mov	r5, r3
 292 0020 1646     		mov	r6, r2
 293 0022 8046     		mov	r8, r0
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 294              		.loc 1 366 0
 295 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 296              	.LVL30:
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 297              		.loc 1 370 0
 298 0028 C4F80080 		str	r8, [r4]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 299              		.loc 1 371 0
 300 002c A761     		str	r7, [r4, #24]
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 301              		.loc 1 372 0
 302 002e E661     		str	r6, [r4, #28]
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 303              		.loc 1 373 0
 304 0030 2562     		str	r5, [r4, #32]
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 305              		.loc 1 374 0
 306 0032 069B     		ldr	r3, [sp, #24]
 307 0034 6362     		str	r3, [r4, #36]
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 308              		.loc 1 375 0
 309 0036 201D     		adds	r0, r4, #4
 310 0038 FFF7FEFF 		bl	vListInitialiseItem
 311              	.LVL31:
 312              	.L22:
 313 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 314              		.cfi_endproc
 315              	.LFE7:
 317              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 318              		.align	1
 319              		.global	xTimerCreateTimerTask
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu softvfp
 325              	xTimerCreateTimerTask:
 326              	.LFB4:
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 327              		.loc 1 224 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 16
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 10B5     		push	{r4, lr}
 332              	.LCFI6:
 333              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccMx2OYU.s 			page 27


 334              		.cfi_offset 4, -8
 335              		.cfi_offset 14, -4
 336 0002 88B0     		sub	sp, sp, #32
 337              	.LCFI7:
 338              		.cfi_def_cfa_offset 40
 339              	.LVL32:
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 340              		.loc 1 231 0
 341 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 342              	.LVL33:
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 343              		.loc 1 233 0
 344 0008 154B     		ldr	r3, .L36
 345 000a 1B68     		ldr	r3, [r3]
 346 000c 1BB3     		cbz	r3, .L32
 347              	.LBB44:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 348              		.loc 1 237 0
 349 000e 0024     		movs	r4, #0
 350 0010 0594     		str	r4, [sp, #20]
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 351              		.loc 1 238 0
 352 0012 0694     		str	r4, [sp, #24]
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 353              		.loc 1 241 0
 354 0014 07AA     		add	r2, sp, #28
 355 0016 06A9     		add	r1, sp, #24
 356 0018 05A8     		add	r0, sp, #20
 357 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 358              	.LVL34:
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 359              		.loc 1 242 0
 360 001e 059B     		ldr	r3, [sp, #20]
 361 0020 0293     		str	r3, [sp, #8]
 362 0022 069B     		ldr	r3, [sp, #24]
 363 0024 0193     		str	r3, [sp, #4]
 364 0026 0223     		movs	r3, #2
 365 0028 0093     		str	r3, [sp]
 366 002a 2346     		mov	r3, r4
 367 002c 079A     		ldr	r2, [sp, #28]
 368 002e 0D49     		ldr	r1, .L36+4
 369 0030 0D48     		ldr	r0, .L36+8
 370 0032 FFF7FEFF 		bl	xTaskCreateStatic
 371              	.LVL35:
 372 0036 0D4B     		ldr	r3, .L36+12
 373 0038 1860     		str	r0, [r3]
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 374              		.loc 1 250 0
 375 003a 50B1     		cbz	r0, .L35
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 376              		.loc 1 252 0
 377 003c 0120     		movs	r0, #1
 378              	.LVL36:
 379              	.L28:
 380              	.LBE44:
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 381              		.loc 1 271 0
ARM GAS  /tmp/ccMx2OYU.s 			page 28


 382 003e 60B9     		cbnz	r0, .L27
 383              	.LBB45:
 384              	.LBB46:
 385              		.loc 2 195 0
 386              		.syntax unified
 387              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 388 0040 4FF05003 			mov r3, #80												
 389 0044 83F31188 		msr basepri, r3											
 390 0048 BFF36F8F 		isb														
 391 004c BFF34F8F 		dsb														
 392              	
 393              	@ 0 "" 2
 394              	.LVL37:
 395              		.thumb
 396              		.syntax unified
 397              	.L31:
 398 0050 FEE7     		b	.L31
 399              	.LVL38:
 400              	.L35:
 401              	.LBE46:
 402              	.LBE45:
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 403              		.loc 1 225 0
 404 0052 2046     		mov	r0, r4
 405 0054 F3E7     		b	.L28
 406              	.L32:
 407 0056 0020     		movs	r0, #0
 408 0058 F1E7     		b	.L28
 409              	.LVL39:
 410              	.L27:
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 411              		.loc 1 273 0
 412 005a 08B0     		add	sp, sp, #32
 413              	.LCFI8:
 414              		.cfi_def_cfa_offset 8
 415              		@ sp needed
 416 005c 10BD     		pop	{r4, pc}
 417              	.L37:
 418 005e 00BF     		.align	2
 419              	.L36:
 420 0060 00000000 		.word	.LANCHOR2
 421 0064 00000000 		.word	.LC1
 422 0068 00000000 		.word	prvTimerTask
 423 006c 00000000 		.word	.LANCHOR7
 424              		.cfi_endproc
 425              	.LFE4:
 427              		.section	.text.xTimerCreate,"ax",%progbits
 428              		.align	1
 429              		.global	xTimerCreate
 430              		.syntax unified
 431              		.thumb
 432              		.thumb_func
 433              		.fpu softvfp
 435              	xTimerCreate:
 436              	.LFB5:
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 437              		.loc 1 283 0
ARM GAS  /tmp/ccMx2OYU.s 			page 29


 438              		.cfi_startproc
 439              		@ args = 4, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              	.LVL40:
 442 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 443              	.LCFI9:
 444              		.cfi_def_cfa_offset 24
 445              		.cfi_offset 4, -24
 446              		.cfi_offset 5, -20
 447              		.cfi_offset 6, -16
 448              		.cfi_offset 7, -12
 449              		.cfi_offset 8, -8
 450              		.cfi_offset 14, -4
 451 0004 82B0     		sub	sp, sp, #8
 452              	.LCFI10:
 453              		.cfi_def_cfa_offset 32
 454 0006 0546     		mov	r5, r0
 455 0008 0E46     		mov	r6, r1
 456 000a 1746     		mov	r7, r2
 457 000c 9846     		mov	r8, r3
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 458              		.loc 1 286 0
 459 000e 3020     		movs	r0, #48
 460              	.LVL41:
 461 0010 FFF7FEFF 		bl	pvPortMalloc
 462              	.LVL42:
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 463              		.loc 1 288 0
 464 0014 0446     		mov	r4, r0
 465 0016 58B1     		cbz	r0, .L39
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 466              		.loc 1 290 0
 467 0018 0190     		str	r0, [sp, #4]
 468 001a 089B     		ldr	r3, [sp, #32]
 469 001c 0093     		str	r3, [sp]
 470 001e 4346     		mov	r3, r8
 471 0020 3A46     		mov	r2, r7
 472 0022 3146     		mov	r1, r6
 473 0024 2846     		mov	r0, r5
 474              	.LVL43:
 475 0026 FFF7FEFF 		bl	prvInitialiseNewTimer
 476              	.LVL44:
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 477              		.loc 1 297 0
 478 002a 0023     		movs	r3, #0
 479 002c 84F82C30 		strb	r3, [r4, #44]
 480              	.L39:
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 481              		.loc 1 303 0
 482 0030 2046     		mov	r0, r4
 483 0032 02B0     		add	sp, sp, #8
 484              	.LCFI11:
 485              		.cfi_def_cfa_offset 24
 486              		@ sp needed
 487 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 488              		.cfi_endproc
 489              	.LFE5:
ARM GAS  /tmp/ccMx2OYU.s 			page 30


 491              		.section	.text.xTimerCreateStatic,"ax",%progbits
 492              		.align	1
 493              		.global	xTimerCreateStatic
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 497              		.fpu softvfp
 499              	xTimerCreateStatic:
 500              	.LFB6:
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 501              		.loc 1 316 0
 502              		.cfi_startproc
 503              		@ args = 8, pretend = 0, frame = 8
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              	.LVL45:
 506 0000 30B5     		push	{r4, r5, lr}
 507              	.LCFI12:
 508              		.cfi_def_cfa_offset 12
 509              		.cfi_offset 4, -12
 510              		.cfi_offset 5, -8
 511              		.cfi_offset 14, -4
 512 0002 85B0     		sub	sp, sp, #20
 513              	.LCFI13:
 514              		.cfi_def_cfa_offset 32
 515 0004 099C     		ldr	r4, [sp, #36]
 516              	.LBB47:
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 517              		.loc 1 324 0
 518 0006 3025     		movs	r5, #48
 519 0008 0395     		str	r5, [sp, #12]
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 520              		.loc 1 325 0
 521 000a 039D     		ldr	r5, [sp, #12]
 522 000c 302D     		cmp	r5, #48
 523 000e 08D0     		beq	.L42
 524              	.LBB48:
 525              	.LBB49:
 526              		.loc 2 195 0
 527              		.syntax unified
 528              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 529 0010 4FF05003 			mov r3, #80												
 530 0014 83F31188 		msr basepri, r3											
 531 0018 BFF36F8F 		isb														
 532 001c BFF34F8F 		dsb														
 533              	
 534              	@ 0 "" 2
 535              	.LVL46:
 536              		.thumb
 537              		.syntax unified
 538              	.L43:
 539 0020 FEE7     		b	.L43
 540              	.LVL47:
 541              	.L42:
 542              	.LBE49:
 543              	.LBE48:
 544              	.LBE47:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
ARM GAS  /tmp/ccMx2OYU.s 			page 31


 545              		.loc 1 330 0
 546 0022 44B9     		cbnz	r4, .L44
 547              	.LBB50:
 548              	.LBB51:
 549              		.loc 2 195 0
 550              		.syntax unified
 551              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 552 0024 4FF05003 			mov r3, #80												
 553 0028 83F31188 		msr basepri, r3											
 554 002c BFF36F8F 		isb														
 555 0030 BFF34F8F 		dsb														
 556              	
 557              	@ 0 "" 2
 558              	.LVL48:
 559              		.thumb
 560              		.syntax unified
 561              	.L45:
 562 0034 FEE7     		b	.L45
 563              	.LVL49:
 564              	.L44:
 565              	.LBE51:
 566              	.LBE50:
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 567              		.loc 1 335 0
 568 0036 0194     		str	r4, [sp, #4]
 569 0038 089D     		ldr	r5, [sp, #32]
 570 003a 0095     		str	r5, [sp]
 571 003c FFF7FEFF 		bl	prvInitialiseNewTimer
 572              	.LVL50:
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 573              		.loc 1 341 0
 574 0040 0123     		movs	r3, #1
 575 0042 84F82C30 		strb	r3, [r4, #44]
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576              		.loc 1 347 0
 577 0046 2046     		mov	r0, r4
 578 0048 05B0     		add	sp, sp, #20
 579              	.LCFI14:
 580              		.cfi_def_cfa_offset 12
 581              		@ sp needed
 582 004a 30BD     		pop	{r4, r5, pc}
 583              		.cfi_endproc
 584              	.LFE6:
 586              		.section	.text.xTimerGenericCommand,"ax",%progbits
 587              		.align	1
 588              		.global	xTimerGenericCommand
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 592              		.fpu softvfp
 594              	xTimerGenericCommand:
 595              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 596              		.loc 1 382 0
 597              		.cfi_startproc
 598              		@ args = 4, pretend = 0, frame = 16
 599              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccMx2OYU.s 			page 32


 600              	.LVL51:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 601              		.loc 1 386 0
 602 0000 C0B1     		cbz	r0, .L56
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 603              		.loc 1 382 0
 604 0002 30B5     		push	{r4, r5, lr}
 605              	.LCFI15:
 606              		.cfi_def_cfa_offset 12
 607              		.cfi_offset 4, -12
 608              		.cfi_offset 5, -8
 609              		.cfi_offset 14, -4
 610 0004 85B0     		sub	sp, sp, #20
 611              	.LCFI16:
 612              		.cfi_def_cfa_offset 32
 613 0006 1546     		mov	r5, r2
 614 0008 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 615              		.loc 1 390 0
 616 000a 174A     		ldr	r2, .L58
 617              	.LVL52:
 618 000c 1068     		ldr	r0, [r2]
 619              	.LVL53:
 620 000e 40B3     		cbz	r0, .L53
 621 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 622              		.loc 1 393 0
 623 0012 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 624              		.loc 1 394 0
 625 0014 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 626              		.loc 1 395 0
 627 0016 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 628              		.loc 1 397 0
 629 0018 0529     		cmp	r1, #5
 630 001a 1CDC     		bgt	.L51
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 631              		.loc 1 399 0
 632 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 633              	.LVL54:
 634 0020 0228     		cmp	r0, #2
 635 0022 10D0     		beq	.L57
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 636              		.loc 1 405 0
 637 0024 0023     		movs	r3, #0
 638 0026 1A46     		mov	r2, r3
 639 0028 6946     		mov	r1, sp
 640 002a 0F48     		ldr	r0, .L58
 641 002c 0068     		ldr	r0, [r0]
 642 002e FFF7FEFF 		bl	xQueueGenericSend
 643              	.LVL55:
 644 0032 14E0     		b	.L47
 645              	.LVL56:
 646              	.L56:
 647              	.LCFI17:
ARM GAS  /tmp/ccMx2OYU.s 			page 33


 648              		.cfi_def_cfa_offset 0
 649              		.cfi_restore 4
 650              		.cfi_restore 5
 651              		.cfi_restore 14
 652              	.LBB52:
 653              	.LBB53:
 654              		.loc 2 195 0
 655              		.syntax unified
 656              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 657 0034 4FF05003 			mov r3, #80												
 658 0038 83F31188 		msr basepri, r3											
 659 003c BFF36F8F 		isb														
 660 0040 BFF34F8F 		dsb														
 661              	
 662              	@ 0 "" 2
 663              	.LVL57:
 664              		.thumb
 665              		.syntax unified
 666              	.L49:
 667 0044 FEE7     		b	.L49
 668              	.LVL58:
 669              	.L57:
 670              	.LCFI18:
 671              		.cfi_def_cfa_offset 32
 672              		.cfi_offset 4, -12
 673              		.cfi_offset 5, -8
 674              		.cfi_offset 14, -4
 675              	.LBE53:
 676              	.LBE52:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 677              		.loc 1 401 0
 678 0046 0023     		movs	r3, #0
 679 0048 089A     		ldr	r2, [sp, #32]
 680 004a 6946     		mov	r1, sp
 681 004c 0648     		ldr	r0, .L58
 682 004e 0068     		ldr	r0, [r0]
 683 0050 FFF7FEFF 		bl	xQueueGenericSend
 684              	.LVL59:
 685 0054 03E0     		b	.L47
 686              	.LVL60:
 687              	.L51:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 688              		.loc 1 410 0
 689 0056 0023     		movs	r3, #0
 690 0058 6946     		mov	r1, sp
 691              	.LVL61:
 692 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 693              	.LVL62:
 694              	.L47:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 695              		.loc 1 421 0
 696 005e 05B0     		add	sp, sp, #20
 697              	.LCFI19:
 698              		.cfi_remember_state
 699              		.cfi_def_cfa_offset 12
 700              		@ sp needed
 701 0060 30BD     		pop	{r4, r5, pc}
ARM GAS  /tmp/ccMx2OYU.s 			page 34


 702              	.LVL63:
 703              	.L53:
 704              	.LCFI20:
 705              		.cfi_restore_state
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 706              		.loc 1 383 0
 707 0062 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 708              		.loc 1 420 0
 709 0064 FBE7     		b	.L47
 710              	.L59:
 711 0066 00BF     		.align	2
 712              	.L58:
 713 0068 00000000 		.word	.LANCHOR2
 714              		.cfi_endproc
 715              	.LFE8:
 717              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 718              		.align	1
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 722              		.fpu softvfp
 724              	prvSwitchTimerLists:
 725              	.LFB20:
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 726              		.loc 1 836 0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
 730 0000 70B5     		push	{r4, r5, r6, lr}
 731              	.LCFI21:
 732              		.cfi_def_cfa_offset 16
 733              		.cfi_offset 4, -16
 734              		.cfi_offset 5, -12
 735              		.cfi_offset 6, -8
 736              		.cfi_offset 14, -4
 737 0002 82B0     		sub	sp, sp, #8
 738              	.LCFI22:
 739              		.cfi_def_cfa_offset 24
 740              	.L62:
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 741              		.loc 1 846 0
 742 0004 1A4B     		ldr	r3, .L69
 743 0006 1B68     		ldr	r3, [r3]
 744 0008 1A68     		ldr	r2, [r3]
 745 000a 52B3     		cbz	r2, .L68
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 746              		.loc 1 848 0
 747 000c DB68     		ldr	r3, [r3, #12]
 748 000e 1E68     		ldr	r6, [r3]
 749              	.LVL64:
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 750              		.loc 1 851 0
 751 0010 DC68     		ldr	r4, [r3, #12]
 752              	.LVL65:
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 753              		.loc 1 852 0
ARM GAS  /tmp/ccMx2OYU.s 			page 35


 754 0012 251D     		adds	r5, r4, #4
 755 0014 2846     		mov	r0, r5
 756 0016 FFF7FEFF 		bl	uxListRemove
 757              	.LVL66:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 758              		.loc 1 858 0
 759 001a 636A     		ldr	r3, [r4, #36]
 760 001c 2046     		mov	r0, r4
 761 001e 9847     		blx	r3
 762              	.LVL67:
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 763              		.loc 1 860 0
 764 0020 E369     		ldr	r3, [r4, #28]
 765 0022 012B     		cmp	r3, #1
 766 0024 EED1     		bne	.L62
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 767              		.loc 1 868 0
 768 0026 A369     		ldr	r3, [r4, #24]
 769 0028 3344     		add	r3, r3, r6
 770              	.LVL68:
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 771              		.loc 1 869 0
 772 002a 9E42     		cmp	r6, r3
 773 002c 07D2     		bcs	.L63
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 774              		.loc 1 871 0
 775 002e 6360     		str	r3, [r4, #4]
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 776              		.loc 1 872 0
 777 0030 2461     		str	r4, [r4, #16]
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 778              		.loc 1 873 0
 779 0032 2946     		mov	r1, r5
 780 0034 0E4B     		ldr	r3, .L69
 781              	.LVL69:
 782 0036 1868     		ldr	r0, [r3]
 783 0038 FFF7FEFF 		bl	vListInsert
 784              	.LVL70:
 785 003c E2E7     		b	.L62
 786              	.LVL71:
 787              	.L63:
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 788              		.loc 1 877 0
 789 003e 0021     		movs	r1, #0
 790 0040 0091     		str	r1, [sp]
 791 0042 0B46     		mov	r3, r1
 792              	.LVL72:
 793 0044 3246     		mov	r2, r6
 794 0046 2046     		mov	r0, r4
 795 0048 FFF7FEFF 		bl	xTimerGenericCommand
 796              	.LVL73:
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 797              		.loc 1 878 0
 798 004c 0028     		cmp	r0, #0
 799 004e D9D1     		bne	.L62
 800              	.LBB54:
 801              	.LBB55:
ARM GAS  /tmp/ccMx2OYU.s 			page 36


 802              		.loc 2 195 0
 803              		.syntax unified
 804              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 805 0050 4FF05003 			mov r3, #80												
 806 0054 83F31188 		msr basepri, r3											
 807 0058 BFF36F8F 		isb														
 808 005c BFF34F8F 		dsb														
 809              	
 810              	@ 0 "" 2
 811              	.LVL74:
 812              		.thumb
 813              		.syntax unified
 814              	.L65:
 815 0060 FEE7     		b	.L65
 816              	.LVL75:
 817              	.L68:
 818              	.LBE55:
 819              	.LBE54:
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 820              		.loc 1 889 0
 821 0062 044A     		ldr	r2, .L69+4
 822 0064 1068     		ldr	r0, [r2]
 823 0066 0249     		ldr	r1, .L69
 824 0068 0860     		str	r0, [r1]
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 825              		.loc 1 890 0
 826 006a 1360     		str	r3, [r2]
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 827              		.loc 1 891 0
 828 006c 02B0     		add	sp, sp, #8
 829              	.LCFI23:
 830              		.cfi_def_cfa_offset 16
 831              		@ sp needed
 832 006e 70BD     		pop	{r4, r5, r6, pc}
 833              	.L70:
 834              		.align	2
 835              	.L69:
 836 0070 00000000 		.word	.LANCHOR0
 837 0074 00000000 		.word	.LANCHOR1
 838              		.cfi_endproc
 839              	.LFE20:
 841              		.section	.text.prvSampleTimeNow,"ax",%progbits
 842              		.align	1
 843              		.syntax unified
 844              		.thumb
 845              		.thumb_func
 846              		.fpu softvfp
 848              	prvSampleTimeNow:
 849              	.LFB17:
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 850              		.loc 1 625 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              	.LVL76:
 855 0000 38B5     		push	{r3, r4, r5, lr}
 856              	.LCFI24:
ARM GAS  /tmp/ccMx2OYU.s 			page 37


 857              		.cfi_def_cfa_offset 16
 858              		.cfi_offset 3, -16
 859              		.cfi_offset 4, -12
 860              		.cfi_offset 5, -8
 861              		.cfi_offset 14, -4
 862 0002 0546     		mov	r5, r0
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 863              		.loc 1 629 0
 864 0004 FFF7FEFF 		bl	xTaskGetTickCount
 865              	.LVL77:
 866 0008 0446     		mov	r4, r0
 867              	.LVL78:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 868              		.loc 1 631 0
 869 000a 074B     		ldr	r3, .L76
 870 000c 1B68     		ldr	r3, [r3]
 871 000e 9842     		cmp	r0, r3
 872 0010 05D3     		bcc	.L75
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 873              		.loc 1 638 0
 874 0012 0023     		movs	r3, #0
 875 0014 2B60     		str	r3, [r5]
 876              	.LVL79:
 877              	.L73:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 878              		.loc 1 641 0
 879 0016 044B     		ldr	r3, .L76
 880 0018 1C60     		str	r4, [r3]
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 881              		.loc 1 644 0
 882 001a 2046     		mov	r0, r4
 883 001c 38BD     		pop	{r3, r4, r5, pc}
 884              	.LVL80:
 885              	.L75:
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 886              		.loc 1 633 0
 887 001e FFF7FEFF 		bl	prvSwitchTimerLists
 888              	.LVL81:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 889              		.loc 1 634 0
 890 0022 0123     		movs	r3, #1
 891 0024 2B60     		str	r3, [r5]
 892 0026 F6E7     		b	.L73
 893              	.L77:
 894              		.align	2
 895              	.L76:
 896 0028 00000000 		.word	.LANCHOR8
 897              		.cfi_endproc
 898              	.LFE17:
 900              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 901              		.align	1
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 905              		.fpu softvfp
 907              	prvProcessExpiredTimer:
 908              	.LFB13:
ARM GAS  /tmp/ccMx2OYU.s 			page 38


 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 909              		.loc 1 463 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 0, uses_anonymous_args = 0
 913              	.LVL82:
 914 0000 70B5     		push	{r4, r5, r6, lr}
 915              	.LCFI25:
 916              		.cfi_def_cfa_offset 16
 917              		.cfi_offset 4, -16
 918              		.cfi_offset 5, -12
 919              		.cfi_offset 6, -8
 920              		.cfi_offset 14, -4
 921 0002 82B0     		sub	sp, sp, #8
 922              	.LCFI26:
 923              		.cfi_def_cfa_offset 24
 924 0004 0546     		mov	r5, r0
 925 0006 0E46     		mov	r6, r1
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 926              		.loc 1 465 0
 927 0008 144B     		ldr	r3, .L83
 928 000a 1B68     		ldr	r3, [r3]
 929 000c DB68     		ldr	r3, [r3, #12]
 930 000e DC68     		ldr	r4, [r3, #12]
 931              	.LVL83:
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 932              		.loc 1 469 0
 933 0010 201D     		adds	r0, r4, #4
 934              	.LVL84:
 935 0012 FFF7FEFF 		bl	uxListRemove
 936              	.LVL85:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 937              		.loc 1 474 0
 938 0016 E369     		ldr	r3, [r4, #28]
 939 0018 012B     		cmp	r3, #1
 940 001a 04D0     		beq	.L82
 941              	.L79:
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 942              		.loc 1 498 0
 943 001c 636A     		ldr	r3, [r4, #36]
 944 001e 2046     		mov	r0, r4
 945 0020 9847     		blx	r3
 946              	.LVL86:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 947              		.loc 1 499 0
 948 0022 02B0     		add	sp, sp, #8
 949              	.LCFI27:
 950              		.cfi_remember_state
 951              		.cfi_def_cfa_offset 16
 952              		@ sp needed
 953 0024 70BD     		pop	{r4, r5, r6, pc}
 954              	.LVL87:
 955              	.L82:
 956              	.LCFI28:
 957              		.cfi_restore_state
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 958              		.loc 1 479 0
ARM GAS  /tmp/ccMx2OYU.s 			page 39


 959 0026 A169     		ldr	r1, [r4, #24]
 960 0028 2B46     		mov	r3, r5
 961 002a 3246     		mov	r2, r6
 962 002c 2944     		add	r1, r1, r5
 963 002e 2046     		mov	r0, r4
 964 0030 FFF7FEFF 		bl	prvInsertTimerInActiveList
 965              	.LVL88:
 966 0034 0028     		cmp	r0, #0
 967 0036 F1D0     		beq	.L79
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 968              		.loc 1 483 0
 969 0038 0021     		movs	r1, #0
 970 003a 0091     		str	r1, [sp]
 971 003c 0B46     		mov	r3, r1
 972 003e 2A46     		mov	r2, r5
 973 0040 2046     		mov	r0, r4
 974 0042 FFF7FEFF 		bl	xTimerGenericCommand
 975              	.LVL89:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 976              		.loc 1 484 0
 977 0046 0028     		cmp	r0, #0
 978 0048 E8D1     		bne	.L79
 979              	.LBB56:
 980              	.LBB57:
 981              		.loc 2 195 0
 982              		.syntax unified
 983              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 984 004a 4FF05003 			mov r3, #80												
 985 004e 83F31188 		msr basepri, r3											
 986 0052 BFF36F8F 		isb														
 987 0056 BFF34F8F 		dsb														
 988              	
 989              	@ 0 "" 2
 990              	.LVL90:
 991              		.thumb
 992              		.syntax unified
 993              	.L80:
 994 005a FEE7     		b	.L80
 995              	.L84:
 996              		.align	2
 997              	.L83:
 998 005c 00000000 		.word	.LANCHOR0
 999              	.LBE57:
 1000              	.LBE56:
 1001              		.cfi_endproc
 1002              	.LFE13:
 1004              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1005              		.align	1
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1009              		.fpu softvfp
 1011              	prvProcessTimerOrBlockTask:
 1012              	.LFB15:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 1013              		.loc 1 539 0
 1014              		.cfi_startproc
ARM GAS  /tmp/ccMx2OYU.s 			page 40


 1015              		@ args = 0, pretend = 0, frame = 8
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
 1017              	.LVL91:
 1018 0000 70B5     		push	{r4, r5, r6, lr}
 1019              	.LCFI29:
 1020              		.cfi_def_cfa_offset 16
 1021              		.cfi_offset 4, -16
 1022              		.cfi_offset 5, -12
 1023              		.cfi_offset 6, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              	.LCFI30:
 1027              		.cfi_def_cfa_offset 24
 1028 0004 0646     		mov	r6, r0
 1029 0006 0C46     		mov	r4, r1
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1030              		.loc 1 543 0
 1031 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1032              	.LVL92:
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1033              		.loc 1 550 0
 1034 000c 01A8     		add	r0, sp, #4
 1035 000e FFF7FEFF 		bl	prvSampleTimeNow
 1036              	.LVL93:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1037              		.loc 1 551 0
 1038 0012 019B     		ldr	r3, [sp, #4]
 1039 0014 23BB     		cbnz	r3, .L86
 1040 0016 0546     		mov	r5, r0
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1041              		.loc 1 554 0
 1042 0018 0CB9     		cbnz	r4, .L87
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1043              		.loc 1 554 0 is_stmt 0 discriminator 1
 1044 001a B042     		cmp	r0, r6
 1045 001c 19D2     		bcs	.L91
 1046              	.L87:
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1047              		.loc 1 567 0 is_stmt 1
 1048 001e 2CB1     		cbz	r4, .L89
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1049              		.loc 1 571 0
 1050 0020 114B     		ldr	r3, .L92
 1051 0022 1B68     		ldr	r3, [r3]
 1052 0024 1C68     		ldr	r4, [r3]
 1053              	.LVL94:
 1054 0026 B4FA84F4 		clz	r4, r4
 1055 002a 6409     		lsrs	r4, r4, #5
 1056              	.LVL95:
 1057              	.L89:
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1058              		.loc 1 574 0
 1059 002c 2246     		mov	r2, r4
 1060 002e 711B     		subs	r1, r6, r5
 1061 0030 0E4B     		ldr	r3, .L92+4
 1062 0032 1868     		ldr	r0, [r3]
 1063              	.LVL96:
ARM GAS  /tmp/ccMx2OYU.s 			page 41


 1064 0034 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1065              	.LVL97:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1066              		.loc 1 576 0
 1067 0038 FFF7FEFF 		bl	xTaskResumeAll
 1068              	.LVL98:
 1069 003c 38B9     		cbnz	r0, .L85
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1070              		.loc 1 582 0
 1071 003e 4FF08052 		mov	r2, #268435456
 1072 0042 0B4B     		ldr	r3, .L92+8
 1073 0044 1A60     		str	r2, [r3]
 1074              		.syntax unified
 1075              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1076 0046 BFF34F8F 		dsb
 1077              	@ 0 "" 2
 1078              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1079 004a BFF36F8F 		isb
 1080              	@ 0 "" 2
 1081              	.LVL99:
 1082              		.thumb
 1083              		.syntax unified
 1084              	.L85:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1085              		.loc 1 595 0
 1086 004e 02B0     		add	sp, sp, #8
 1087              	.LCFI31:
 1088              		.cfi_remember_state
 1089              		.cfi_def_cfa_offset 16
 1090              		@ sp needed
 1091 0050 70BD     		pop	{r4, r5, r6, pc}
 1092              	.LVL100:
 1093              	.L91:
 1094              	.LCFI32:
 1095              		.cfi_restore_state
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1096              		.loc 1 556 0
 1097 0052 FFF7FEFF 		bl	xTaskResumeAll
 1098              	.LVL101:
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1099              		.loc 1 557 0
 1100 0056 2946     		mov	r1, r5
 1101 0058 3046     		mov	r0, r6
 1102 005a FFF7FEFF 		bl	prvProcessExpiredTimer
 1103              	.LVL102:
 1104 005e F6E7     		b	.L85
 1105              	.LVL103:
 1106              	.L86:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1107              		.loc 1 592 0
 1108 0060 FFF7FEFF 		bl	xTaskResumeAll
 1109              	.LVL104:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1110              		.loc 1 595 0
 1111 0064 F3E7     		b	.L85
 1112              	.L93:
 1113 0066 00BF     		.align	2
ARM GAS  /tmp/ccMx2OYU.s 			page 42


 1114              	.L92:
 1115 0068 00000000 		.word	.LANCHOR1
 1116 006c 00000000 		.word	.LANCHOR2
 1117 0070 04ED00E0 		.word	-536810236
 1118              		.cfi_endproc
 1119              	.LFE15:
 1121              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1122              		.align	1
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
 1126              		.fpu softvfp
 1128              	prvProcessReceivedCommands:
 1129              	.LFB19:
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1130              		.loc 1 689 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 24
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
 1134 0000 30B5     		push	{r4, r5, lr}
 1135              	.LCFI33:
 1136              		.cfi_def_cfa_offset 12
 1137              		.cfi_offset 4, -12
 1138              		.cfi_offset 5, -8
 1139              		.cfi_offset 14, -4
 1140 0002 89B0     		sub	sp, sp, #36
 1141              	.LCFI34:
 1142              		.cfi_def_cfa_offset 48
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1143              		.loc 1 695 0
 1144 0004 02E0     		b	.L97
 1145              	.L96:
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1146              		.loc 1 721 0
 1147 0006 049B     		ldr	r3, [sp, #16]
 1148 0008 002B     		cmp	r3, #0
 1149 000a 0FDA     		bge	.L109
 1150              	.L97:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1151              		.loc 1 695 0
 1152 000c 0022     		movs	r2, #0
 1153 000e 04A9     		add	r1, sp, #16
 1154 0010 394B     		ldr	r3, .L112
 1155 0012 1868     		ldr	r0, [r3]
 1156 0014 FFF7FEFF 		bl	xQueueReceive
 1157              	.LVL105:
 1158 0018 0028     		cmp	r0, #0
 1159 001a 6AD0     		beq	.L110
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1160              		.loc 1 701 0
 1161 001c 049B     		ldr	r3, [sp, #16]
 1162 001e 002B     		cmp	r3, #0
 1163 0020 F1DA     		bge	.L96
 1164              	.LVL106:
 1165              	.LBB58:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1166              		.loc 1 710 0
ARM GAS  /tmp/ccMx2OYU.s 			page 43


 1167 0022 0799     		ldr	r1, [sp, #28]
 1168 0024 0698     		ldr	r0, [sp, #24]
 1169 0026 059B     		ldr	r3, [sp, #20]
 1170 0028 9847     		blx	r3
 1171              	.LVL107:
 1172              	.LBE58:
 1173 002a ECE7     		b	.L96
 1174              	.LVL108:
 1175              	.L109:
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1176              		.loc 1 725 0
 1177 002c 069C     		ldr	r4, [sp, #24]
 1178              	.LVL109:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1179              		.loc 1 727 0
 1180 002e 6369     		ldr	r3, [r4, #20]
 1181 0030 13B1     		cbz	r3, .L98
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1182              		.loc 1 730 0
 1183 0032 201D     		adds	r0, r4, #4
 1184 0034 FFF7FEFF 		bl	uxListRemove
 1185              	.LVL110:
 1186              	.L98:
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1187              		.loc 1 745 0
 1188 0038 03A8     		add	r0, sp, #12
 1189 003a FFF7FEFF 		bl	prvSampleTimeNow
 1190              	.LVL111:
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1191              		.loc 1 747 0
 1192 003e 049B     		ldr	r3, [sp, #16]
 1193 0040 092B     		cmp	r3, #9
 1194 0042 E3D8     		bhi	.L97
 1195 0044 01A2     		adr	r2, .L101
 1196 0046 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1197 004a 00BF     		.p2align 2
 1198              	.L101:
 1199 004c 75000000 		.word	.L100+1
 1200 0050 75000000 		.word	.L100+1
 1201 0054 75000000 		.word	.L100+1
 1202 0058 0D000000 		.word	.L97+1
 1203 005c BD000000 		.word	.L102+1
 1204 0060 E3000000 		.word	.L103+1
 1205 0064 75000000 		.word	.L100+1
 1206 0068 75000000 		.word	.L100+1
 1207 006c 0D000000 		.word	.L97+1
 1208 0070 BD000000 		.word	.L102+1
 1209              		.p2align 1
 1210              	.L100:
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1211              		.loc 1 755 0
 1212 0074 0599     		ldr	r1, [sp, #20]
 1213 0076 A569     		ldr	r5, [r4, #24]
 1214 0078 0B46     		mov	r3, r1
 1215 007a 0246     		mov	r2, r0
 1216 007c 2944     		add	r1, r1, r5
 1217 007e 2046     		mov	r0, r4
ARM GAS  /tmp/ccMx2OYU.s 			page 44


 1218              	.LVL112:
 1219 0080 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1220              	.LVL113:
 1221 0084 0028     		cmp	r0, #0
 1222 0086 C1D0     		beq	.L97
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1223              		.loc 1 759 0
 1224 0088 636A     		ldr	r3, [r4, #36]
 1225 008a 2046     		mov	r0, r4
 1226 008c 9847     		blx	r3
 1227              	.LVL114:
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1228              		.loc 1 762 0
 1229 008e E369     		ldr	r3, [r4, #28]
 1230 0090 012B     		cmp	r3, #1
 1231 0092 BBD1     		bne	.L97
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1232              		.loc 1 764 0
 1233 0094 A269     		ldr	r2, [r4, #24]
 1234 0096 0021     		movs	r1, #0
 1235 0098 0091     		str	r1, [sp]
 1236 009a 0B46     		mov	r3, r1
 1237 009c 0598     		ldr	r0, [sp, #20]
 1238 009e 0244     		add	r2, r2, r0
 1239 00a0 2046     		mov	r0, r4
 1240 00a2 FFF7FEFF 		bl	xTimerGenericCommand
 1241              	.LVL115:
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1242              		.loc 1 765 0
 1243 00a6 0028     		cmp	r0, #0
 1244 00a8 B0D1     		bne	.L97
 1245              	.LBB59:
 1246              	.LBB60:
 1247              		.loc 2 195 0
 1248              		.syntax unified
 1249              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1250 00aa 4FF05003 			mov r3, #80												
 1251 00ae 83F31188 		msr basepri, r3											
 1252 00b2 BFF36F8F 		isb														
 1253 00b6 BFF34F8F 		dsb														
 1254              	
 1255              	@ 0 "" 2
 1256              	.LVL116:
 1257              		.thumb
 1258              		.syntax unified
 1259              	.L104:
 1260 00ba FEE7     		b	.L104
 1261              	.LVL117:
 1262              	.L102:
 1263              	.LBE60:
 1264              	.LBE59:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1265              		.loc 1 787 0
 1266 00bc 0599     		ldr	r1, [sp, #20]
 1267 00be A161     		str	r1, [r4, #24]
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1268              		.loc 1 788 0
ARM GAS  /tmp/ccMx2OYU.s 			page 45


 1269 00c0 31B1     		cbz	r1, .L111
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1270              		.loc 1 796 0
 1271 00c2 0346     		mov	r3, r0
 1272 00c4 0246     		mov	r2, r0
 1273 00c6 0144     		add	r1, r1, r0
 1274 00c8 2046     		mov	r0, r4
 1275              	.LVL118:
 1276 00ca FFF7FEFF 		bl	prvInsertTimerInActiveList
 1277              	.LVL119:
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1278              		.loc 1 797 0
 1279 00ce 9DE7     		b	.L97
 1280              	.LVL120:
 1281              	.L111:
 1282              	.LBB61:
 1283              	.LBB62:
 1284              		.loc 2 195 0
 1285              		.syntax unified
 1286              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1287 00d0 4FF05003 			mov r3, #80												
 1288 00d4 83F31188 		msr basepri, r3											
 1289 00d8 BFF36F8F 		isb														
 1290 00dc BFF34F8F 		dsb														
 1291              	
 1292              	@ 0 "" 2
 1293              	.LVL121:
 1294              		.thumb
 1295              		.syntax unified
 1296              	.L106:
 1297 00e0 FEE7     		b	.L106
 1298              	.L103:
 1299              	.LBE62:
 1300              	.LBE61:
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1301              		.loc 1 814 0
 1302 00e2 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 1303 00e6 002B     		cmp	r3, #0
 1304 00e8 90D1     		bne	.L97
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1305              		.loc 1 816 0
 1306 00ea 2046     		mov	r0, r4
 1307              	.LVL122:
 1308 00ec FFF7FEFF 		bl	vPortFree
 1309              	.LVL123:
 1310 00f0 8CE7     		b	.L97
 1311              	.LVL124:
 1312              	.L110:
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1313              		.loc 1 832 0
 1314 00f2 09B0     		add	sp, sp, #36
 1315              	.LCFI35:
 1316              		.cfi_def_cfa_offset 12
 1317              		@ sp needed
 1318 00f4 30BD     		pop	{r4, r5, pc}
 1319              	.L113:
 1320 00f6 00BF     		.align	2
ARM GAS  /tmp/ccMx2OYU.s 			page 46


 1321              	.L112:
 1322 00f8 00000000 		.word	.LANCHOR2
 1323              		.cfi_endproc
 1324              	.LFE19:
 1326              		.section	.text.prvTimerTask,"ax",%progbits
 1327              		.align	1
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1331              		.fpu softvfp
 1333              	prvTimerTask:
 1334              	.LFB14:
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1335              		.loc 1 503 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 8
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339              	.LVL125:
 1340 0000 00B5     		push	{lr}
 1341              	.LCFI36:
 1342              		.cfi_def_cfa_offset 4
 1343              		.cfi_offset 14, -4
 1344 0002 83B0     		sub	sp, sp, #12
 1345              	.LCFI37:
 1346              		.cfi_def_cfa_offset 16
 1347              	.LVL126:
 1348              	.L115:
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1349              		.loc 1 526 0 discriminator 1
 1350 0004 01A8     		add	r0, sp, #4
 1351 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1352              	.LVL127:
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1353              		.loc 1 530 0 discriminator 1
 1354 000a 0199     		ldr	r1, [sp, #4]
 1355 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1356              	.LVL128:
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1357              		.loc 1 533 0 discriminator 1
 1358 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1359              	.LVL129:
 1360 0014 F6E7     		b	.L115
 1361              		.cfi_endproc
 1362              	.LFE14:
 1364              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1365              		.align	1
 1366              		.global	xTimerGetTimerDaemonTaskHandle
 1367              		.syntax unified
 1368              		.thumb
 1369              		.thumb_func
 1370              		.fpu softvfp
 1372              	xTimerGetTimerDaemonTaskHandle:
 1373              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1374              		.loc 1 425 0
 1375              		.cfi_startproc
 1376              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccMx2OYU.s 			page 47


 1377              		@ frame_needed = 0, uses_anonymous_args = 0
 1378              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1379              		.loc 1 428 0
 1380 0000 064B     		ldr	r3, .L121
 1381 0002 1868     		ldr	r0, [r3]
 1382 0004 00B1     		cbz	r0, .L120
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1383              		.loc 1 430 0
 1384 0006 7047     		bx	lr
 1385              	.L120:
 1386              	.LBB63:
 1387              	.LBB64:
 1388              		.loc 2 195 0
 1389              		.syntax unified
 1390              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1391 0008 4FF05003 			mov r3, #80												
 1392 000c 83F31188 		msr basepri, r3											
 1393 0010 BFF36F8F 		isb														
 1394 0014 BFF34F8F 		dsb														
 1395              	
 1396              	@ 0 "" 2
 1397              	.LVL130:
 1398              		.thumb
 1399              		.syntax unified
 1400              	.L119:
 1401 0018 FEE7     		b	.L119
 1402              	.L122:
 1403 001a 00BF     		.align	2
 1404              	.L121:
 1405 001c 00000000 		.word	.LANCHOR7
 1406              	.LBE64:
 1407              	.LBE63:
 1408              		.cfi_endproc
 1409              	.LFE9:
 1411              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1412              		.align	1
 1413              		.global	xTimerGetPeriod
 1414              		.syntax unified
 1415              		.thumb
 1416              		.thumb_func
 1417              		.fpu softvfp
 1419              	xTimerGetPeriod:
 1420              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1421              		.loc 1 434 0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              		@ link register save eliminated.
 1426              	.LVL131:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1427              		.loc 1 437 0
 1428 0000 08B1     		cbz	r0, .L126
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1429              		.loc 1 439 0
 1430 0002 8069     		ldr	r0, [r0, #24]
ARM GAS  /tmp/ccMx2OYU.s 			page 48


 1431              	.LVL132:
 1432 0004 7047     		bx	lr
 1433              	.LVL133:
 1434              	.L126:
 1435              	.LBB65:
 1436              	.LBB66:
 1437              		.loc 2 195 0
 1438              		.syntax unified
 1439              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1440 0006 4FF05003 			mov r3, #80												
 1441 000a 83F31188 		msr basepri, r3											
 1442 000e BFF36F8F 		isb														
 1443 0012 BFF34F8F 		dsb														
 1444              	
 1445              	@ 0 "" 2
 1446              	.LVL134:
 1447              		.thumb
 1448              		.syntax unified
 1449              	.L125:
 1450 0016 FEE7     		b	.L125
 1451              	.LBE66:
 1452              	.LBE65:
 1453              		.cfi_endproc
 1454              	.LFE10:
 1456              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1457              		.align	1
 1458              		.global	xTimerGetExpiryTime
 1459              		.syntax unified
 1460              		.thumb
 1461              		.thumb_func
 1462              		.fpu softvfp
 1464              	xTimerGetExpiryTime:
 1465              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1466              		.loc 1 443 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470              		@ link register save eliminated.
 1471              	.LVL135:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1472              		.loc 1 447 0
 1473 0000 08B1     		cbz	r0, .L130
 1474              	.LVL136:
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1475              		.loc 1 450 0
 1476 0002 4068     		ldr	r0, [r0, #4]
 1477              	.LVL137:
 1478 0004 7047     		bx	lr
 1479              	.LVL138:
 1480              	.L130:
 1481              	.LBB67:
 1482              	.LBB68:
 1483              		.loc 2 195 0
 1484              		.syntax unified
 1485              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1486 0006 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccMx2OYU.s 			page 49


 1487 000a 83F31188 		msr basepri, r3											
 1488 000e BFF36F8F 		isb														
 1489 0012 BFF34F8F 		dsb														
 1490              	
 1491              	@ 0 "" 2
 1492              	.LVL139:
 1493              		.thumb
 1494              		.syntax unified
 1495              	.L129:
 1496 0016 FEE7     		b	.L129
 1497              	.LBE68:
 1498              	.LBE67:
 1499              		.cfi_endproc
 1500              	.LFE11:
 1502              		.section	.text.pcTimerGetName,"ax",%progbits
 1503              		.align	1
 1504              		.global	pcTimerGetName
 1505              		.syntax unified
 1506              		.thumb
 1507              		.thumb_func
 1508              		.fpu softvfp
 1510              	pcTimerGetName:
 1511              	.LFB12:
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1512              		.loc 1 454 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 1517              	.LVL140:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1518              		.loc 1 457 0
 1519 0000 08B1     		cbz	r0, .L134
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1520              		.loc 1 459 0
 1521 0002 0068     		ldr	r0, [r0]
 1522              	.LVL141:
 1523 0004 7047     		bx	lr
 1524              	.LVL142:
 1525              	.L134:
 1526              	.LBB69:
 1527              	.LBB70:
 1528              		.loc 2 195 0
 1529              		.syntax unified
 1530              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1531 0006 4FF05003 			mov r3, #80												
 1532 000a 83F31188 		msr basepri, r3											
 1533 000e BFF36F8F 		isb														
 1534 0012 BFF34F8F 		dsb														
 1535              	
 1536              	@ 0 "" 2
 1537              	.LVL143:
 1538              		.thumb
 1539              		.syntax unified
 1540              	.L133:
 1541 0016 FEE7     		b	.L133
 1542              	.LBE70:
ARM GAS  /tmp/ccMx2OYU.s 			page 50


 1543              	.LBE69:
 1544              		.cfi_endproc
 1545              	.LFE12:
 1547              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1548              		.align	1
 1549              		.global	xTimerIsTimerActive
 1550              		.syntax unified
 1551              		.thumb
 1552              		.thumb_func
 1553              		.fpu softvfp
 1555              	xTimerIsTimerActive:
 1556              	.LFB22:
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1557              		.loc 1 946 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 0
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              	.LVL144:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1562              		.loc 1 950 0
 1563 0000 40B9     		cbnz	r0, .L136
 1564              	.LBB71:
 1565              	.LBB72:
 1566              		.loc 2 195 0
 1567              		.syntax unified
 1568              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1569 0002 4FF05003 			mov r3, #80												
 1570 0006 83F31188 		msr basepri, r3											
 1571 000a BFF36F8F 		isb														
 1572 000e BFF34F8F 		dsb														
 1573              	
 1574              	@ 0 "" 2
 1575              	.LVL145:
 1576              		.thumb
 1577              		.syntax unified
 1578              	.L137:
 1579 0012 FEE7     		b	.L137
 1580              	.L136:
 1581              	.LBE72:
 1582              	.LBE71:
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1583              		.loc 1 946 0
 1584 0014 10B5     		push	{r4, lr}
 1585              	.LCFI38:
 1586              		.cfi_def_cfa_offset 8
 1587              		.cfi_offset 4, -8
 1588              		.cfi_offset 14, -4
 1589 0016 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
ARM GAS  /tmp/ccMx2OYU.s 			page 51


 1590              		.loc 1 953 0
 1591 0018 FFF7FEFF 		bl	vPortEnterCritical
 1592              	.LVL146:
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1593              		.loc 1 958 0
 1594 001c 6469     		ldr	r4, [r4, #20]
 1595              	.LVL147:
 1596 001e 0034     		adds	r4, r4, #0
 1597 0020 18BF     		it	ne
 1598 0022 0124     		movne	r4, #1
 1599              	.LVL148:
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1600              		.loc 1 960 0
 1601 0024 FFF7FEFF 		bl	vPortExitCritical
 1602              	.LVL149:
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1603              		.loc 1 963 0
 1604 0028 2046     		mov	r0, r4
 1605 002a 10BD     		pop	{r4, pc}
 1606              		.cfi_endproc
 1607              	.LFE22:
 1609              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1610              		.align	1
 1611              		.global	pvTimerGetTimerID
 1612              		.syntax unified
 1613              		.thumb
 1614              		.thumb_func
 1615              		.fpu softvfp
 1617              	pvTimerGetTimerID:
 1618              	.LFB23:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1619              		.loc 1 967 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 0
 1622              		@ frame_needed = 0, uses_anonymous_args = 0
 1623              	.LVL150:
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1624              		.loc 1 971 0
 1625 0000 40B9     		cbnz	r0, .L141
 1626              	.LBB73:
 1627              	.LBB74:
 1628              		.loc 2 195 0
 1629              		.syntax unified
 1630              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
ARM GAS  /tmp/ccMx2OYU.s 			page 52


 1631 0002 4FF05003 			mov r3, #80												
 1632 0006 83F31188 		msr basepri, r3											
 1633 000a BFF36F8F 		isb														
 1634 000e BFF34F8F 		dsb														
 1635              	
 1636              	@ 0 "" 2
 1637              	.LVL151:
 1638              		.thumb
 1639              		.syntax unified
 1640              	.L142:
 1641 0012 FEE7     		b	.L142
 1642              	.L141:
 1643              	.LBE74:
 1644              	.LBE73:
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1645              		.loc 1 967 0
 1646 0014 10B5     		push	{r4, lr}
 1647              	.LCFI39:
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 4, -8
 1650              		.cfi_offset 14, -4
 1651 0016 0446     		mov	r4, r0
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1652              		.loc 1 973 0
 1653 0018 FFF7FEFF 		bl	vPortEnterCritical
 1654              	.LVL152:
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1655              		.loc 1 975 0
 1656 001c 246A     		ldr	r4, [r4, #32]
 1657              	.LVL153:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1658              		.loc 1 977 0
 1659 001e FFF7FEFF 		bl	vPortExitCritical
 1660              	.LVL154:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1661              		.loc 1 980 0
 1662 0022 2046     		mov	r0, r4
 1663 0024 10BD     		pop	{r4, pc}
 1664              		.cfi_endproc
 1665              	.LFE23:
 1667              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1668              		.align	1
 1669              		.global	vTimerSetTimerID
 1670              		.syntax unified
 1671              		.thumb
 1672              		.thumb_func
 1673              		.fpu softvfp
 1675              	vTimerSetTimerID:
 1676              	.LFB24:
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
ARM GAS  /tmp/ccMx2OYU.s 			page 53


 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1677              		.loc 1 984 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 0
 1680              		@ frame_needed = 0, uses_anonymous_args = 0
 1681              	.LVL155:
 1682 0000 38B5     		push	{r3, r4, r5, lr}
 1683              	.LCFI40:
 1684              		.cfi_def_cfa_offset 16
 1685              		.cfi_offset 3, -16
 1686              		.cfi_offset 4, -12
 1687              		.cfi_offset 5, -8
 1688              		.cfi_offset 14, -4
 1689              	.LVL156:
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1690              		.loc 1 987 0
 1691 0002 40B9     		cbnz	r0, .L146
 1692              	.LBB75:
 1693              	.LBB76:
 1694              		.loc 2 195 0
 1695              		.syntax unified
 1696              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1697 0004 4FF05003 			mov r3, #80												
 1698 0008 83F31188 		msr basepri, r3											
 1699 000c BFF36F8F 		isb														
 1700 0010 BFF34F8F 		dsb														
 1701              	
 1702              	@ 0 "" 2
 1703              	.LVL157:
 1704              		.thumb
 1705              		.syntax unified
 1706              	.L147:
 1707 0014 FEE7     		b	.L147
 1708              	.L146:
 1709 0016 0446     		mov	r4, r0
 1710 0018 0D46     		mov	r5, r1
 1711              	.LBE76:
 1712              	.LBE75:
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1713              		.loc 1 989 0
 1714 001a FFF7FEFF 		bl	vPortEnterCritical
 1715              	.LVL158:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1716              		.loc 1 991 0
 1717 001e 2562     		str	r5, [r4, #32]
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1718              		.loc 1 993 0
 1719 0020 FFF7FEFF 		bl	vPortExitCritical
 1720              	.LVL159:
 1721 0024 38BD     		pop	{r3, r4, r5, pc}
 1722              		.cfi_endproc
 1723              	.LFE24:
ARM GAS  /tmp/ccMx2OYU.s 			page 54


 1725              		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1726              		.align	1
 1727              		.global	xTimerPendFunctionCallFromISR
 1728              		.syntax unified
 1729              		.thumb
 1730              		.thumb_func
 1731              		.fpu softvfp
 1733              	xTimerPendFunctionCallFromISR:
 1734              	.LFB25:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1735              		.loc 1 1000 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 16
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              	.LVL160:
 1740 0000 10B5     		push	{r4, lr}
 1741              	.LCFI41:
 1742              		.cfi_def_cfa_offset 8
 1743              		.cfi_offset 4, -8
 1744              		.cfi_offset 14, -4
 1745 0002 84B0     		sub	sp, sp, #16
 1746              	.LCFI42:
 1747              		.cfi_def_cfa_offset 24
 1748 0004 1C46     		mov	r4, r3
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1749              		.loc 1 1006 0
 1750 0006 6FF00103 		mvn	r3, #1
 1751              	.LVL161:
 1752 000a 0093     		str	r3, [sp]
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1753              		.loc 1 1007 0
 1754 000c 0190     		str	r0, [sp, #4]
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1755              		.loc 1 1008 0
 1756 000e 0291     		str	r1, [sp, #8]
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1757              		.loc 1 1009 0
 1758 0010 0392     		str	r2, [sp, #12]
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1759              		.loc 1 1011 0
 1760 0012 0023     		movs	r3, #0
 1761 0014 2246     		mov	r2, r4
 1762              	.LVL162:
 1763 0016 6946     		mov	r1, sp
 1764              	.LVL163:
ARM GAS  /tmp/ccMx2OYU.s 			page 55


 1765 0018 0248     		ldr	r0, .L151
 1766              	.LVL164:
 1767 001a 0068     		ldr	r0, [r0]
 1768 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1769              	.LVL165:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1770              		.loc 1 1016 0
 1771 0020 04B0     		add	sp, sp, #16
 1772              	.LCFI43:
 1773              		.cfi_def_cfa_offset 8
 1774              		@ sp needed
 1775 0022 10BD     		pop	{r4, pc}
 1776              	.LVL166:
 1777              	.L152:
 1778              		.align	2
 1779              	.L151:
 1780 0024 00000000 		.word	.LANCHOR2
 1781              		.cfi_endproc
 1782              	.LFE25:
 1784              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1785              		.align	1
 1786              		.global	xTimerPendFunctionCall
 1787              		.syntax unified
 1788              		.thumb
 1789              		.thumb_func
 1790              		.fpu softvfp
 1792              	xTimerPendFunctionCall:
 1793              	.LFB26:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1794              		.loc 1 1024 0
 1795              		.cfi_startproc
 1796              		@ args = 0, pretend = 0, frame = 16
 1797              		@ frame_needed = 0, uses_anonymous_args = 0
 1798              	.LVL167:
 1799 0000 30B5     		push	{r4, r5, lr}
 1800              	.LCFI44:
 1801              		.cfi_def_cfa_offset 12
 1802              		.cfi_offset 4, -12
 1803              		.cfi_offset 5, -8
 1804              		.cfi_offset 14, -4
 1805 0002 85B0     		sub	sp, sp, #20
 1806              	.LCFI45:
 1807              		.cfi_def_cfa_offset 32
 1808 0004 1446     		mov	r4, r2
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
ARM GAS  /tmp/ccMx2OYU.s 			page 56


1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1809              		.loc 1 1031 0
 1810 0006 0D4A     		ldr	r2, .L157
 1811              	.LVL168:
 1812 0008 1568     		ldr	r5, [r2]
 1813 000a 45B9     		cbnz	r5, .L154
 1814              	.LBB77:
 1815              	.LBB78:
 1816              		.loc 2 195 0
 1817              		.syntax unified
 1818              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h" 1
 1819 000c 4FF05003 			mov r3, #80												
 1820 0010 83F31188 		msr basepri, r3											
 1821 0014 BFF36F8F 		isb														
 1822 0018 BFF34F8F 		dsb														
 1823              	
 1824              	@ 0 "" 2
 1825              	.LVL169:
 1826              		.thumb
 1827              		.syntax unified
 1828              	.L155:
 1829 001c FEE7     		b	.L155
 1830              	.LVL170:
 1831              	.L154:
 1832 001e 1A46     		mov	r2, r3
 1833 0020 0346     		mov	r3, r0
 1834              	.LVL171:
 1835              	.LBE78:
 1836              	.LBE77:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1837              		.loc 1 1035 0
 1838 0022 4FF0FF30 		mov	r0, #-1
 1839              	.LVL172:
 1840 0026 0090     		str	r0, [sp]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1841              		.loc 1 1036 0
 1842 0028 0193     		str	r3, [sp, #4]
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1843              		.loc 1 1037 0
 1844 002a 0291     		str	r1, [sp, #8]
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1845              		.loc 1 1038 0
 1846 002c 0394     		str	r4, [sp, #12]
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1847              		.loc 1 1040 0
 1848 002e 0023     		movs	r3, #0
 1849              	.LVL173:
 1850 0030 6946     		mov	r1, sp
 1851              	.LVL174:
ARM GAS  /tmp/ccMx2OYU.s 			page 57


 1852 0032 2846     		mov	r0, r5
 1853 0034 FFF7FEFF 		bl	xQueueGenericSend
 1854              	.LVL175:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1855              		.loc 1 1045 0
 1856 0038 05B0     		add	sp, sp, #20
 1857              	.LCFI46:
 1858              		.cfi_def_cfa_offset 12
 1859              		@ sp needed
 1860 003a 30BD     		pop	{r4, r5, pc}
 1861              	.LVL176:
 1862              	.L158:
 1863              		.align	2
 1864              	.L157:
 1865 003c 00000000 		.word	.LANCHOR2
 1866              		.cfi_endproc
 1867              	.LFE26:
 1869              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1870              		.align	1
 1871              		.global	uxTimerGetTimerNumber
 1872              		.syntax unified
 1873              		.thumb
 1874              		.thumb_func
 1875              		.fpu softvfp
 1877              	uxTimerGetTimerNumber:
 1878              	.LFB27:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1879              		.loc 1 1053 0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 1883              		@ link register save eliminated.
 1884              	.LVL177:
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1885              		.loc 1 1055 0
 1886 0000 806A     		ldr	r0, [r0, #40]
 1887              	.LVL178:
 1888 0002 7047     		bx	lr
 1889              		.cfi_endproc
 1890              	.LFE27:
 1892              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1893              		.align	1
 1894              		.global	vTimerSetTimerNumber
 1895              		.syntax unified
 1896              		.thumb
ARM GAS  /tmp/ccMx2OYU.s 			page 58


 1897              		.thumb_func
 1898              		.fpu softvfp
 1900              	vTimerSetTimerNumber:
 1901              	.LFB28:
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1902              		.loc 1 1063 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              		@ link register save eliminated.
 1907              	.LVL179:
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1908              		.loc 1 1064 0
 1909 0000 8162     		str	r1, [r0, #40]
 1910 0002 7047     		bx	lr
 1911              		.cfi_endproc
 1912              	.LFE28:
 1914              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1915              		.align	2
 1916              		.set	.LANCHOR0,. + 0
 1919              	pxCurrentTimerList:
 1920 0000 00000000 		.space	4
 1921              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1922              		.align	2
 1923              		.set	.LANCHOR1,. + 0
 1926              	pxOverflowTimerList:
 1927 0000 00000000 		.space	4
 1928              		.section	.bss.ucStaticTimerQueueStorage.5503,"aw",%nobits
 1929              		.align	2
 1930              		.set	.LANCHOR6,. + 0
 1933              	ucStaticTimerQueueStorage.5503:
 1934 0000 00000000 		.space	160
 1934      00000000 
 1934      00000000 
 1934      00000000 
 1934      00000000 
 1935              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1936              		.align	2
 1937              		.set	.LANCHOR3,. + 0
 1940              	xActiveTimerList1:
 1941 0000 00000000 		.space	20
 1941      00000000 
 1941      00000000 
 1941      00000000 
 1941      00000000 
 1942              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1943              		.align	2
 1944              		.set	.LANCHOR4,. + 0
 1947              	xActiveTimerList2:
 1948 0000 00000000 		.space	20
ARM GAS  /tmp/ccMx2OYU.s 			page 59


 1948      00000000 
 1948      00000000 
 1948      00000000 
 1948      00000000 
 1949              		.section	.bss.xLastTime.5452,"aw",%nobits
 1950              		.align	2
 1951              		.set	.LANCHOR8,. + 0
 1954              	xLastTime.5452:
 1955 0000 00000000 		.space	4
 1956              		.section	.bss.xStaticTimerQueue.5502,"aw",%nobits
 1957              		.align	2
 1958              		.set	.LANCHOR5,. + 0
 1961              	xStaticTimerQueue.5502:
 1962 0000 00000000 		.space	80
 1962      00000000 
 1962      00000000 
 1962      00000000 
 1962      00000000 
 1963              		.section	.bss.xTimerQueue,"aw",%nobits
 1964              		.align	2
 1965              		.set	.LANCHOR2,. + 0
 1968              	xTimerQueue:
 1969 0000 00000000 		.space	4
 1970              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1971              		.align	2
 1972              		.set	.LANCHOR7,. + 0
 1975              	xTimerTaskHandle:
 1976 0000 00000000 		.space	4
 1977              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1978              		.align	2
 1979              	.LC0:
 1980 0000 546D7251 		.ascii	"TmrQ\000"
 1980      00
 1981              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1982              		.align	2
 1983              	.LC1:
 1984 0000 546D7220 		.ascii	"Tmr Svc\000"
 1984      53766300 
 1985              		.text
 1986              	.Letext0:
 1987              		.file 3 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 1988              		.file 4 "/usr/include/newlib/machine/_default_types.h"
 1989              		.file 5 "/usr/include/newlib/sys/lock.h"
 1990              		.file 6 "/usr/include/newlib/sys/_types.h"
 1991              		.file 7 "/usr/include/newlib/sys/reent.h"
 1992              		.file 8 "/usr/include/newlib/stdlib.h"
 1993              		.file 9 "/usr/include/newlib/sys/_stdint.h"
 1994              		.file 10 "Inc/FreeRTOSConfig.h"
 1995              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1996              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1997              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1998              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1999              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 2000              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/ccMx2OYU.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 timers.c
     /tmp/ccMx2OYU.s:16     .text.prvGetNextExpireTime:0000000000000000 $t
     /tmp/ccMx2OYU.s:22     .text.prvGetNextExpireTime:0000000000000000 prvGetNextExpireTime
     /tmp/ccMx2OYU.s:55     .text.prvGetNextExpireTime:000000000000001c $d
     /tmp/ccMx2OYU.s:60     .text.prvInsertTimerInActiveList:0000000000000000 $t
     /tmp/ccMx2OYU.s:66     .text.prvInsertTimerInActiveList:0000000000000000 prvInsertTimerInActiveList
     /tmp/ccMx2OYU.s:142    .text.prvInsertTimerInActiveList:0000000000000040 $d
     /tmp/ccMx2OYU.s:148    .text.prvCheckForValidListAndQueue:0000000000000000 $t
     /tmp/ccMx2OYU.s:154    .text.prvCheckForValidListAndQueue:0000000000000000 prvCheckForValidListAndQueue
     /tmp/ccMx2OYU.s:230    .text.prvCheckForValidListAndQueue:0000000000000050 $d
     /tmp/ccMx2OYU.s:242    .text.prvInitialiseNewTimer:0000000000000000 $t
     /tmp/ccMx2OYU.s:248    .text.prvInitialiseNewTimer:0000000000000000 prvInitialiseNewTimer
     /tmp/ccMx2OYU.s:318    .text.xTimerCreateTimerTask:0000000000000000 $t
     /tmp/ccMx2OYU.s:325    .text.xTimerCreateTimerTask:0000000000000000 xTimerCreateTimerTask
     /tmp/ccMx2OYU.s:420    .text.xTimerCreateTimerTask:0000000000000060 $d
     /tmp/ccMx2OYU.s:1333   .text.prvTimerTask:0000000000000000 prvTimerTask
     /tmp/ccMx2OYU.s:428    .text.xTimerCreate:0000000000000000 $t
     /tmp/ccMx2OYU.s:435    .text.xTimerCreate:0000000000000000 xTimerCreate
     /tmp/ccMx2OYU.s:492    .text.xTimerCreateStatic:0000000000000000 $t
     /tmp/ccMx2OYU.s:499    .text.xTimerCreateStatic:0000000000000000 xTimerCreateStatic
     /tmp/ccMx2OYU.s:587    .text.xTimerGenericCommand:0000000000000000 $t
     /tmp/ccMx2OYU.s:594    .text.xTimerGenericCommand:0000000000000000 xTimerGenericCommand
     /tmp/ccMx2OYU.s:713    .text.xTimerGenericCommand:0000000000000068 $d
     /tmp/ccMx2OYU.s:718    .text.prvSwitchTimerLists:0000000000000000 $t
     /tmp/ccMx2OYU.s:724    .text.prvSwitchTimerLists:0000000000000000 prvSwitchTimerLists
     /tmp/ccMx2OYU.s:836    .text.prvSwitchTimerLists:0000000000000070 $d
     /tmp/ccMx2OYU.s:842    .text.prvSampleTimeNow:0000000000000000 $t
     /tmp/ccMx2OYU.s:848    .text.prvSampleTimeNow:0000000000000000 prvSampleTimeNow
     /tmp/ccMx2OYU.s:896    .text.prvSampleTimeNow:0000000000000028 $d
     /tmp/ccMx2OYU.s:901    .text.prvProcessExpiredTimer:0000000000000000 $t
     /tmp/ccMx2OYU.s:907    .text.prvProcessExpiredTimer:0000000000000000 prvProcessExpiredTimer
     /tmp/ccMx2OYU.s:998    .text.prvProcessExpiredTimer:000000000000005c $d
     /tmp/ccMx2OYU.s:1005   .text.prvProcessTimerOrBlockTask:0000000000000000 $t
     /tmp/ccMx2OYU.s:1011   .text.prvProcessTimerOrBlockTask:0000000000000000 prvProcessTimerOrBlockTask
     /tmp/ccMx2OYU.s:1115   .text.prvProcessTimerOrBlockTask:0000000000000068 $d
     /tmp/ccMx2OYU.s:1122   .text.prvProcessReceivedCommands:0000000000000000 $t
     /tmp/ccMx2OYU.s:1128   .text.prvProcessReceivedCommands:0000000000000000 prvProcessReceivedCommands
     /tmp/ccMx2OYU.s:1199   .text.prvProcessReceivedCommands:000000000000004c $d
     /tmp/ccMx2OYU.s:1209   .text.prvProcessReceivedCommands:0000000000000074 $t
     /tmp/ccMx2OYU.s:1322   .text.prvProcessReceivedCommands:00000000000000f8 $d
     /tmp/ccMx2OYU.s:1327   .text.prvTimerTask:0000000000000000 $t
     /tmp/ccMx2OYU.s:1365   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 $t
     /tmp/ccMx2OYU.s:1372   .text.xTimerGetTimerDaemonTaskHandle:0000000000000000 xTimerGetTimerDaemonTaskHandle
     /tmp/ccMx2OYU.s:1405   .text.xTimerGetTimerDaemonTaskHandle:000000000000001c $d
     /tmp/ccMx2OYU.s:1412   .text.xTimerGetPeriod:0000000000000000 $t
     /tmp/ccMx2OYU.s:1419   .text.xTimerGetPeriod:0000000000000000 xTimerGetPeriod
     /tmp/ccMx2OYU.s:1457   .text.xTimerGetExpiryTime:0000000000000000 $t
     /tmp/ccMx2OYU.s:1464   .text.xTimerGetExpiryTime:0000000000000000 xTimerGetExpiryTime
     /tmp/ccMx2OYU.s:1503   .text.pcTimerGetName:0000000000000000 $t
     /tmp/ccMx2OYU.s:1510   .text.pcTimerGetName:0000000000000000 pcTimerGetName
     /tmp/ccMx2OYU.s:1548   .text.xTimerIsTimerActive:0000000000000000 $t
     /tmp/ccMx2OYU.s:1555   .text.xTimerIsTimerActive:0000000000000000 xTimerIsTimerActive
     /tmp/ccMx2OYU.s:1610   .text.pvTimerGetTimerID:0000000000000000 $t
     /tmp/ccMx2OYU.s:1617   .text.pvTimerGetTimerID:0000000000000000 pvTimerGetTimerID
     /tmp/ccMx2OYU.s:1668   .text.vTimerSetTimerID:0000000000000000 $t
     /tmp/ccMx2OYU.s:1675   .text.vTimerSetTimerID:0000000000000000 vTimerSetTimerID
ARM GAS  /tmp/ccMx2OYU.s 			page 61


     /tmp/ccMx2OYU.s:1726   .text.xTimerPendFunctionCallFromISR:0000000000000000 $t
     /tmp/ccMx2OYU.s:1733   .text.xTimerPendFunctionCallFromISR:0000000000000000 xTimerPendFunctionCallFromISR
     /tmp/ccMx2OYU.s:1780   .text.xTimerPendFunctionCallFromISR:0000000000000024 $d
     /tmp/ccMx2OYU.s:1785   .text.xTimerPendFunctionCall:0000000000000000 $t
     /tmp/ccMx2OYU.s:1792   .text.xTimerPendFunctionCall:0000000000000000 xTimerPendFunctionCall
     /tmp/ccMx2OYU.s:1865   .text.xTimerPendFunctionCall:000000000000003c $d
     /tmp/ccMx2OYU.s:1870   .text.uxTimerGetTimerNumber:0000000000000000 $t
     /tmp/ccMx2OYU.s:1877   .text.uxTimerGetTimerNumber:0000000000000000 uxTimerGetTimerNumber
     /tmp/ccMx2OYU.s:1893   .text.vTimerSetTimerNumber:0000000000000000 $t
     /tmp/ccMx2OYU.s:1900   .text.vTimerSetTimerNumber:0000000000000000 vTimerSetTimerNumber
     /tmp/ccMx2OYU.s:1915   .bss.pxCurrentTimerList:0000000000000000 $d
     /tmp/ccMx2OYU.s:1919   .bss.pxCurrentTimerList:0000000000000000 pxCurrentTimerList
     /tmp/ccMx2OYU.s:1922   .bss.pxOverflowTimerList:0000000000000000 $d
     /tmp/ccMx2OYU.s:1926   .bss.pxOverflowTimerList:0000000000000000 pxOverflowTimerList
     /tmp/ccMx2OYU.s:1929   .bss.ucStaticTimerQueueStorage.5503:0000000000000000 $d
     /tmp/ccMx2OYU.s:1933   .bss.ucStaticTimerQueueStorage.5503:0000000000000000 ucStaticTimerQueueStorage.5503
     /tmp/ccMx2OYU.s:1936   .bss.xActiveTimerList1:0000000000000000 $d
     /tmp/ccMx2OYU.s:1940   .bss.xActiveTimerList1:0000000000000000 xActiveTimerList1
     /tmp/ccMx2OYU.s:1943   .bss.xActiveTimerList2:0000000000000000 $d
     /tmp/ccMx2OYU.s:1947   .bss.xActiveTimerList2:0000000000000000 xActiveTimerList2
     /tmp/ccMx2OYU.s:1950   .bss.xLastTime.5452:0000000000000000 $d
     /tmp/ccMx2OYU.s:1954   .bss.xLastTime.5452:0000000000000000 xLastTime.5452
     /tmp/ccMx2OYU.s:1957   .bss.xStaticTimerQueue.5502:0000000000000000 $d
     /tmp/ccMx2OYU.s:1961   .bss.xStaticTimerQueue.5502:0000000000000000 xStaticTimerQueue.5502
     /tmp/ccMx2OYU.s:1964   .bss.xTimerQueue:0000000000000000 $d
     /tmp/ccMx2OYU.s:1968   .bss.xTimerQueue:0000000000000000 xTimerQueue
     /tmp/ccMx2OYU.s:1971   .bss.xTimerTaskHandle:0000000000000000 $d
     /tmp/ccMx2OYU.s:1975   .bss.xTimerTaskHandle:0000000000000000 xTimerTaskHandle
     /tmp/ccMx2OYU.s:1978   .rodata.prvCheckForValidListAndQueue.str1.4:0000000000000000 $d
     /tmp/ccMx2OYU.s:1982   .rodata.xTimerCreateTimerTask.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
