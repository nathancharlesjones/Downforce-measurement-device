ARM GAS  /tmp/cckAXl85.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ff.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.mem_cpy,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	mem_cpy:
  23              	.LFB69:
  24              		.file 1 "Middlewares/Third_Party/FatFs/src/ff.c"
   1:Middlewares/Third_Party/FatFs/src/ff.c **** /*----------------------------------------------------------------------------/
   2:Middlewares/Third_Party/FatFs/src/ff.c **** /  FatFs - FAT file system module  R0.11                 (C)ChaN, 2015
   3:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
   4:Middlewares/Third_Party/FatFs/src/ff.c **** / FatFs module is a free software that opened under license policy of
   5:Middlewares/Third_Party/FatFs/src/ff.c **** / following conditions.
   6:Middlewares/Third_Party/FatFs/src/ff.c **** /
   7:Middlewares/Third_Party/FatFs/src/ff.c **** / Copyright (C) 2015, ChaN, all right reserved.
   8:Middlewares/Third_Party/FatFs/src/ff.c **** /
   9:Middlewares/Third_Party/FatFs/src/ff.c **** / 1. Redistributions of source code must retain the above copyright notice,
  10:Middlewares/Third_Party/FatFs/src/ff.c **** /    this condition and the following disclaimer.
  11:Middlewares/Third_Party/FatFs/src/ff.c **** /
  12:Middlewares/Third_Party/FatFs/src/ff.c **** / This software is provided by the copyright holder and contributors "AS IS"
  13:Middlewares/Third_Party/FatFs/src/ff.c **** / and any warranties related to this software are DISCLAIMED.
  14:Middlewares/Third_Party/FatFs/src/ff.c **** / The copyright owner or contributors be NOT LIABLE for any damages caused
  15:Middlewares/Third_Party/FatFs/src/ff.c **** / by use of this software.
  16:Middlewares/Third_Party/FatFs/src/ff.c **** /-----------------------------------------------------------------------------/
  17:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 26,'06 R0.00  Prototype.
  18:Middlewares/Third_Party/FatFs/src/ff.c **** /
  19:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 29,'06 R0.01  First stable version.
  20:Middlewares/Third_Party/FatFs/src/ff.c **** /
  21:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 01,'06 R0.02  Added FAT12 support.
  22:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Removed unbuffered mode.
  23:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a problem on small (<32M) partition.
  24:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 10,'06 R0.02a Added a configuration option (_FS_MINIMUM).
  25:Middlewares/Third_Party/FatFs/src/ff.c **** /
  26:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 22,'06 R0.03  Added f_rename().
  27:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option _FS_MINIMUM to _FS_MINIMIZE.
  28:Middlewares/Third_Party/FatFs/src/ff.c **** / Dec 11,'06 R0.03a Improved cluster scan algorithm to write files fast.
  29:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() creates incorrect directory on FAT32.
  30:Middlewares/Third_Party/FatFs/src/ff.c **** /
  31:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 04,'07 R0.04  Supported multiple drive system.
  32:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some interfaces for multiple drive system.
  33:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_mountdrv() to f_mount().
  34:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_mkfs().
ARM GAS  /tmp/cckAXl85.s 			page 2


  35:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'07 R0.04a Supported multiple partitions on a physical drive.
  36:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a capability of extending file size to f_lseek().
  37:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added minimization level 3.
  38:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed an endian sensitive code in f_mkfs().
  39:Middlewares/Third_Party/FatFs/src/ff.c **** / May 05,'07 R0.04b Added a configuration option _USE_NTFLAG.
  40:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added FSINFO support.
  41:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed DBCS name can result FR_INVALID_NAME.
  42:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed short seek (<= csize) collapses the file object.
  43:Middlewares/Third_Party/FatFs/src/ff.c **** /
  44:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 25,'07 R0.05  Changed arguments of f_read(), f_write() and f_mkfs().
  45:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() on FAT32 creates incorrect FSINFO.
  46:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkdir() on FAT32 creates incorrect directory.
  47:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 03,'08 R0.05a Added f_truncate() and f_utime().
  48:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed off by one error at FAT sub-type determination.
  49:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed btr in f_read() can be mistruncated.
  50:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed cached sector is not flushed when create and close without write.
  51:Middlewares/Third_Party/FatFs/src/ff.c **** /
  52:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'08 R0.06  Added fputc(), fputs(), fprintf() and fgets().
  53:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved performance of f_lseek() on moving to the same or following cluster.
  54:Middlewares/Third_Party/FatFs/src/ff.c **** /
  55:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 01,'09 R0.07  Merged Tiny-FatFs as a configuration option. (_FS_TINY)
  56:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added long file name feature.
  57:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple code page feature.
  58:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added re-entrancy for multitask operation.
  59:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added auto cluster size selection to f_mkfs().
  60:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added rewind option to f_readdir().
  61:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed result code of critical errors.
  62:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Renamed string functions to avoid name collision.
  63:Middlewares/Third_Party/FatFs/src/ff.c **** / Apr 14,'09 R0.07a Separated out OS dependent code on reentrant cfg.
  64:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added multiple sector size feature.
  65:Middlewares/Third_Party/FatFs/src/ff.c **** / Jun 21,'09 R0.07c Fixed f_unlink() can return FR_OK on error.
  66:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed wrong cache control in f_lseek().
  67:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added relative path feature.
  68:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_chdir() and f_chdrive().
  69:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added proper case conversion to extended character.
  70:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov 03,'09 R0.07e Separated out configuration options from ff.h to ffconf.h.
  71:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() fails to remove a sub-directory on _FS_RPATH.
  72:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed name matching error on the 13 character boundary.
  73:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option, _LFN_UNICODE.
  74:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed f_readdir() to return the SFN with always upper case on non-LFN cfg.
  75:Middlewares/Third_Party/FatFs/src/ff.c **** /
  76:Middlewares/Third_Party/FatFs/src/ff.c **** / May 15,'10 R0.08  Added a memory configuration option. (_USE_LFN = 3)
  77:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added file lock feature. (_FS_SHARE)
  78:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added fast seek feature. (_USE_FASTSEEK)
  79:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed some types on the API, XCHAR->TCHAR.
  80:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed .fname in the FILINFO structure on Unicode cfg.
  81:Middlewares/Third_Party/FatFs/src/ff.c **** /                   String functions support UTF-8 encoding files on Unicode cfg.
  82:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 16,'10 R0.08a Added f_getcwd().
  83:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added sector erase feature. (_USE_ERASE)
  84:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Moved file lock semaphore table from fs object to the bss.
  85:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a wrong directory entry is created on non-LFN cfg when the given name con
  86:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mkfs() creates wrong FAT32 volume.
  87:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'11 R0.08b Fast seek feature is also applied to f_read() and f_write().
  88:Middlewares/Third_Party/FatFs/src/ff.c **** /                   f_lseek() reports required table size on creating CLMP.
  89:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Extended format syntax of f_printf().
  90:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Ignores duplicated directory separators in given path name.
  91:Middlewares/Third_Party/FatFs/src/ff.c **** /
ARM GAS  /tmp/cckAXl85.s 			page 3


  92:Middlewares/Third_Party/FatFs/src/ff.c **** / Sep 06,'11 R0.09  f_mkfs() supports multiple partition to complete the multiple partition feature
  93:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_fdisk().
  94:Middlewares/Third_Party/FatFs/src/ff.c **** / Aug 27,'12 R0.09a Changed f_open() and f_opendir() reject null object pointer to avoid crash.
  95:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed option name _FS_SHARE to _FS_LOCK.
  96:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed assertion failure due to OS/2 EA on FAT12/16 volume.
  97:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 24,'13 R0.09b Added f_setlabel() and f_getlabel().
  98:Middlewares/Third_Party/FatFs/src/ff.c **** /
  99:Middlewares/Third_Party/FatFs/src/ff.c **** / Oct 02,'13 R0.10  Added selection of character encoding on the file. (_STRF_ENCODE)
 100:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added f_closedir().
 101:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced full FAT scan for f_getfree(). (_FS_NOFSINFO)
 102:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added forced mount feature with changes of f_mount().
 103:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved behavior of volume auto detection.
 104:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Improved write throughput of f_puts() and f_printf().
 105:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Changed argument of f_chdrive(), f_mkfs(), disk_read() and disk_write().
 106:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_write() can be truncated when the file size is close to 4GB.
 107:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_open(), f_mkdir() and f_setlabel() can return incorrect error code.
 108:Middlewares/Third_Party/FatFs/src/ff.c **** / Jan 15,'14 R0.10a Added arbitrary strings as drive number in the path name. (_STR_VOLUME_ID)
 109:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Added a configuration option of minimum sector size. (_MIN_SS)
 110:Middlewares/Third_Party/FatFs/src/ff.c **** /                   2nd argument of f_rename() can have a drive number and it will be ignored.
 111:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_mount() with forced mount fails when drive number is >= 1.
 112:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_close() invalidates the file object without volume lock.
 113:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_closedir() returns but the volume lock is left acquired.
 114:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed creation of an entry with LFN fails on too many SFN collisions.
 115:Middlewares/Third_Party/FatFs/src/ff.c **** / May 19,'14 R0.10b Fixed a hard error in the disk I/O layer can collapse the directory entry.
 116:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed LFN entry is not deleted on delete/rename an object with lossy converted 
 117:Middlewares/Third_Party/FatFs/src/ff.c **** / Nov  9,'14 R0.10c Added a configuration option for the platforms without RTC. (_FS_NORTC)
 118:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed volume label created by Mac OS X cannot be retrieved with f_getlabel(). (
 119:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed a potential problem of FAT access that can appear on disk error.
 120:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed null pointer dereference on attempting to delete the root direcotry. (app
 121:Middlewares/Third_Party/FatFs/src/ff.c **** / Feb 02,'15 R0.11  Added f_findfirst() and f_findnext(). (_USE_FIND)
 122:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed f_unlink() does not remove cluster chain of the file. (appeared at R0.10c
 123:Middlewares/Third_Party/FatFs/src/ff.c **** /                   Fixed _FS_NORTC option does not work properly. (appeared at R0.10c)
 124:Middlewares/Third_Party/FatFs/src/ff.c **** /---------------------------------------------------------------------------*/
 125:Middlewares/Third_Party/FatFs/src/ff.c **** 
 126:Middlewares/Third_Party/FatFs/src/ff.c **** #include "ff.h"			/* Declarations of FatFs API */
 127:Middlewares/Third_Party/FatFs/src/ff.c **** #include "diskio.h"		/* Declarations of disk I/O functions */
 128:Middlewares/Third_Party/FatFs/src/ff.c **** 
 129:Middlewares/Third_Party/FatFs/src/ff.c **** 
 130:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 131:Middlewares/Third_Party/FatFs/src/ff.c **** 
 132:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Definitions
 133:Middlewares/Third_Party/FatFs/src/ff.c **** 
 134:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 135:Middlewares/Third_Party/FatFs/src/ff.c **** 
 136:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FATFS != 32020	/* Revision ID */
 137:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong include file (ff.h).
 138:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 139:Middlewares/Third_Party/FatFs/src/ff.c **** 
 140:Middlewares/Third_Party/FatFs/src/ff.c **** 
 141:Middlewares/Third_Party/FatFs/src/ff.c **** /* Reentrancy related */
 142:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 143:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1
 144:Middlewares/Third_Party/FatFs/src/ff.c **** #error Static LFN work area cannot be used at thread-safe configuration
 145:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 146:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)		{ if (!lock_fs(fs)) return FR_TIMEOUT; }
 147:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LEAVE_FF(fs, res)	{ unlock_fs(fs, res); return res; }
 148:Middlewares/Third_Party/FatFs/src/ff.c **** #else
ARM GAS  /tmp/cckAXl85.s 			page 4


 149:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ENTER_FF(fs)
 150:Middlewares/Third_Party/FatFs/src/ff.c **** #define LEAVE_FF(fs, res)	return res
 151:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 152:Middlewares/Third_Party/FatFs/src/ff.c **** 
 153:Middlewares/Third_Party/FatFs/src/ff.c **** #define	ABORT(fs, res)		{ fp->err = (BYTE)(res); LEAVE_FF(fs, res); }
 154:Middlewares/Third_Party/FatFs/src/ff.c **** 
 155:Middlewares/Third_Party/FatFs/src/ff.c **** 
 156:Middlewares/Third_Party/FatFs/src/ff.c **** /* Definitions of sector size */
 157:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_MAX_SS < _MIN_SS) || (_MAX_SS != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096
 158:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong sector size configuration
 159:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 160:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS == _MIN_SS
 161:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((UINT)_MAX_SS)	/* Fixed sector size */
 162:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 163:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SS(fs)	((fs)->ssize)	/* Variable sector size */
 164:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 165:Middlewares/Third_Party/FatFs/src/ff.c **** 
 166:Middlewares/Third_Party/FatFs/src/ff.c **** 
 167:Middlewares/Third_Party/FatFs/src/ff.c **** /* Timestamp feature */
 168:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_NORTC == 1
 169:Middlewares/Third_Party/FatFs/src/ff.c **** #if _NORTC_YEAR < 1980 || _NORTC_YEAR > 2107 || _NORTC_MON < 1 || _NORTC_MON > 12 || _NORTC_MDAY < 
 170:Middlewares/Third_Party/FatFs/src/ff.c **** #error Invalid _FS_NORTC settings
 171:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 172:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	((DWORD)(_NORTC_YEAR - 1980) << 25 | (DWORD)_NORTC_MON << 21 | (DWORD)_NORTC_
 173:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 174:Middlewares/Third_Party/FatFs/src/ff.c **** #define GET_FATTIME()	get_fattime()
 175:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 176:Middlewares/Third_Party/FatFs/src/ff.c **** 
 177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 178:Middlewares/Third_Party/FatFs/src/ff.c **** /* File access control feature */
 179:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 180:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_READONLY
 181:Middlewares/Third_Party/FatFs/src/ff.c **** #error _FS_LOCK must be 0 at read-only configuration
 182:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 183:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
 184:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;		/* Object ID 1, volume (NULL:blank entry) */
 185:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clu;		/* Object ID 2, directory (0:root) */
 186:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD idx;		/* Object ID 3, directory index */
 187:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD ctr;		/* Object open counter, 0:none, 0x01..0xFF:read mode open count, 0x100:write mode */
 188:Middlewares/Third_Party/FatFs/src/ff.c **** } FILESEM;
 189:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 190:Middlewares/Third_Party/FatFs/src/ff.c **** 
 191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 192:Middlewares/Third_Party/FatFs/src/ff.c **** 
 193:Middlewares/Third_Party/FatFs/src/ff.c **** /* DBCS code ranges and SBCS extend character conversion table */
 194:Middlewares/Third_Party/FatFs/src/ff.c **** 
 195:Middlewares/Third_Party/FatFs/src/ff.c **** #if _CODE_PAGE == 932	/* Japanese Shift-JIS */
 196:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81	/* DBC 1st byte range 1 start */
 197:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0x9F	/* DBC 1st byte range 1 end */
 198:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2S	0xE0	/* DBC 1st byte range 2 start */
 199:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF2E	0xFC	/* DBC 1st byte range 2 end */
 200:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40	/* DBC 2nd byte range 1 start */
 201:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E	/* DBC 2nd byte range 1 end */
 202:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80	/* DBC 2nd byte range 2 start */
 203:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFC	/* DBC 2nd byte range 2 end */
 204:Middlewares/Third_Party/FatFs/src/ff.c **** 
 205:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 936	/* Simplified Chinese GBK */
ARM GAS  /tmp/cckAXl85.s 			page 5


 206:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 207:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 208:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 209:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 210:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x80
 211:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 212:Middlewares/Third_Party/FatFs/src/ff.c **** 
 213:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 949	/* Korean */
 214:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 215:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 216:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x41
 217:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x5A
 218:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0x61
 219:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0x7A
 220:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3S	0x81
 221:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS3E	0xFE
 222:Middlewares/Third_Party/FatFs/src/ff.c **** 
 223:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 950	/* Traditional Chinese Big5 */
 224:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0x81
 225:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1E	0xFE
 226:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1S	0x40
 227:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS1E	0x7E
 228:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2S	0xA1
 229:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DS2E	0xFE
 230:Middlewares/Third_Party/FatFs/src/ff.c **** 
 231:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 437	/* U.S. (OEM) */
 232:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 233:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x9
 234:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 235:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 236:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 237:Middlewares/Third_Party/FatFs/src/ff.c **** 
 238:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 720	/* Arabic (OEM) */
 239:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 240:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x9
 241:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 242:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 243:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 244:Middlewares/Third_Party/FatFs/src/ff.c **** 
 245:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 737	/* Greek (OEM) */
 246:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 247:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 248:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0xAA,0x92,0x93,0x94,0x95,0x96,0xB0,0xB1,0xB2,
 249:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 250:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 252:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 775	/* Baltic (OEM) */
 253:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 254:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x9
 255:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xE0,0xA3,0xA3,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 256:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xB5,0xB6,0xB7,
 257:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 259:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 850	/* Multilingual Latin 1 (OEM) */
 260:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 261:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 262:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
ARM GAS  /tmp/cckAXl85.s 			page 6


 263:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 264:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 265:Middlewares/Third_Party/FatFs/src/ff.c **** 
 266:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 852	/* Latin 2 (OEM) */
 267:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 268:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x9
 269:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA4,0xA4,0xA6,0xA6,0xA8,0xA8,0xAA,0x8D,0xAC,0xB8,0xAE,0xAF,0xB0,0xB1,0xB2,
 270:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC6,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 271:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,
 272:Middlewares/Third_Party/FatFs/src/ff.c **** 
 273:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 855	/* Cyrillic (OEM) */
 274:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 275:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x9
 276:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA1,0xA1,0xA3,0xA3,0xA5,0xA5,0xA7,0xA7,0xA9,0xA9,0xAB,0xAB,0xAD,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 277:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD3,
 278:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,
 279:Middlewares/Third_Party/FatFs/src/ff.c **** 
 280:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 857	/* Turkish (OEM) */
 281:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 282:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x9
 283:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA6,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 284:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 285:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,
 286:Middlewares/Third_Party/FatFs/src/ff.c **** 
 287:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 858	/* Multilingual Latin 1 + Euro (OEM) */
 288:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 289:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x9
 290:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xB5,0xD6,0xE0,0xE9,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 291:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC7,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD1,0xD1,0xD2,
 292:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 293:Middlewares/Third_Party/FatFs/src/ff.c **** 
 294:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 862	/* Hebrew (OEM) */
 295:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 296:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 297:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0x49,0x4F,0x55,0xA5,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0x21,0xAE,0xAF,0xB0,0xB1,0xB2,
 298:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 299:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 300:Middlewares/Third_Party/FatFs/src/ff.c **** 
 301:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 866	/* Russian (OEM) */
 302:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 303:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 304:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0xB0,0xB1,0xB2,
 305:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 306:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,
 307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 308:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 874	/* Thai (OEM, Windows) */
 309:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 310:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 311:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 312:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 313:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 314:Middlewares/Third_Party/FatFs/src/ff.c **** 
 315:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1250 /* Central Europe (Windows) */
 316:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 317:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 318:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 319:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
ARM GAS  /tmp/cckAXl85.s 			page 7


 320:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 321:Middlewares/Third_Party/FatFs/src/ff.c **** 
 322:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1251 /* Cyrillic (Windows) */
 323:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 324:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x8
 325:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA2,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 326:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 327:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 328:Middlewares/Third_Party/FatFs/src/ff.c **** 
 329:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1252 /* Latin 1 (Windows) */
 330:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 331:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 332:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 333:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 334:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 335:Middlewares/Third_Party/FatFs/src/ff.c **** 
 336:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1253 /* Greek (Windows) */
 337:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 338:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 339:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 340:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 341:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
 342:Middlewares/Third_Party/FatFs/src/ff.c **** 
 343:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1254 /* Turkish (Windows) */
 344:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 345:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 346:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 347:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 348:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 349:Middlewares/Third_Party/FatFs/src/ff.c **** 
 350:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1255 /* Hebrew (Windows) */
 351:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 352:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 353:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 354:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 355:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,
 356:Middlewares/Third_Party/FatFs/src/ff.c **** 
 357:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1256 /* Arabic (Windows) */
 358:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 359:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 360:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 361:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 362:Middlewares/Third_Party/FatFs/src/ff.c **** 				0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,
 363:Middlewares/Third_Party/FatFs/src/ff.c **** 
 364:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1257 /* Baltic (Windows) */
 365:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 366:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 367:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 368:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 369:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 371:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1258 /* Vietnam (OEM, Windows) */
 372:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 373:Middlewares/Third_Party/FatFs/src/ff.c **** #define _EXCVT {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x9
 374:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xA0,0x21,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xA9,0xAA,0xAB,0xAC,0xAD,0xAE,0xAF,0xB0,0xB1,0xB2,
 375:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,
 376:Middlewares/Third_Party/FatFs/src/ff.c **** 				0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,
ARM GAS  /tmp/cckAXl85.s 			page 8


 377:Middlewares/Third_Party/FatFs/src/ff.c **** 
 378:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _CODE_PAGE == 1	/* ASCII (for only non-LFN cfg) */
 379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 380:Middlewares/Third_Party/FatFs/src/ff.c **** #error Cannot use LFN feature without valid code page.
 381:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 382:Middlewares/Third_Party/FatFs/src/ff.c **** #define _DF1S	0
 383:Middlewares/Third_Party/FatFs/src/ff.c **** 
 384:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 385:Middlewares/Third_Party/FatFs/src/ff.c **** #error Unknown code page
 386:Middlewares/Third_Party/FatFs/src/ff.c **** 
 387:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 388:Middlewares/Third_Party/FatFs/src/ff.c **** 
 389:Middlewares/Third_Party/FatFs/src/ff.c **** 
 390:Middlewares/Third_Party/FatFs/src/ff.c **** /* Character code support macros */
 391:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsUpper(c)	(((c)>='A')&&((c)<='Z'))
 392:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsLower(c)	(((c)>='a')&&((c)<='z'))
 393:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDigit(c)	(((c)>='0')&&((c)<='9'))
 394:Middlewares/Third_Party/FatFs/src/ff.c **** 
 395:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S		/* Code page is DBCS */
 396:Middlewares/Third_Party/FatFs/src/ff.c **** 
 397:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DF2S	/* Two 1st byte areas */
 398:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	(((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E) || ((BYTE)(c) >= _DF2S && (BYTE)(c) 
 399:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* One 1st byte area */
 400:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	((BYTE)(c) >= _DF1S && (BYTE)(c) <= _DF1E)
 401:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 402:Middlewares/Third_Party/FatFs/src/ff.c **** 
 403:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _DS3S	/* Three 2nd byte areas */
 404:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 405:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Two 2nd byte areas */
 406:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	(((BYTE)(c) >= _DS1S && (BYTE)(c) <= _DS1E) || ((BYTE)(c) >= _DS2S && (BYTE)(c) 
 407:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 408:Middlewares/Third_Party/FatFs/src/ff.c **** 
 409:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Code page is SBCS */
 410:Middlewares/Third_Party/FatFs/src/ff.c **** 
 411:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS1(c)	0
 412:Middlewares/Third_Party/FatFs/src/ff.c **** #define IsDBCS2(c)	0
 413:Middlewares/Third_Party/FatFs/src/ff.c **** 
 414:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _DF1S */
 415:Middlewares/Third_Party/FatFs/src/ff.c **** 
 416:Middlewares/Third_Party/FatFs/src/ff.c **** 
 417:Middlewares/Third_Party/FatFs/src/ff.c **** /* Name status flags */
 418:Middlewares/Third_Party/FatFs/src/ff.c **** #define NSFLAG		11		/* Index of name status byte in fn[] */
 419:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LOSS		0x01	/* Out of 8.3 format */
 420:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LFN		0x02	/* Force to create LFN entry */
 421:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_LAST		0x04	/* Last segment */
 422:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_BODY		0x08	/* Lower case flag (body) */
 423:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_EXT		0x10	/* Lower case flag (ext) */
 424:Middlewares/Third_Party/FatFs/src/ff.c **** #define NS_DOT		0x20	/* Dot entry */
 425:Middlewares/Third_Party/FatFs/src/ff.c **** 
 426:Middlewares/Third_Party/FatFs/src/ff.c **** 
 427:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT sub-type boundaries (Differ from specs but correct for real DOS/Windows) */
 428:Middlewares/Third_Party/FatFs/src/ff.c **** #define MIN_FAT16	4086U	/* Minimum number of clusters as FAT16 */
 429:Middlewares/Third_Party/FatFs/src/ff.c **** #define	MIN_FAT32	65526U	/* Minimum number of clusters as FAT32 */
 430:Middlewares/Third_Party/FatFs/src/ff.c **** 
 431:Middlewares/Third_Party/FatFs/src/ff.c **** 
 432:Middlewares/Third_Party/FatFs/src/ff.c **** /* FatFs refers the members in the FAT structures as byte array instead of
 433:Middlewares/Third_Party/FatFs/src/ff.c **** / structure member because the structure is not binary compatible between
ARM GAS  /tmp/cckAXl85.s 			page 9


 434:Middlewares/Third_Party/FatFs/src/ff.c **** / different platforms */
 435:Middlewares/Third_Party/FatFs/src/ff.c **** 
 436:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_jmpBoot			0		/* x86 jump instruction (3) */
 437:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_OEMName			3		/* OEM name (8) */
 438:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BytsPerSec		11		/* Sector size [byte] (2) */
 439:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerClus		13		/* Cluster size [sector] (1) */
 440:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RsvdSecCnt		14		/* Size of reserved area [sector] (2) */
 441:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumFATs			16		/* Number of FAT copies (1) */
 442:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootEntCnt		17		/* Number of root directory entries for FAT12/16 (2) */
 443:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec16		19		/* Volume size [sector] (2) */
 444:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_Media			21		/* Media descriptor (1) */
 445:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz16			22		/* FAT size [sector] (2) */
 446:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_SecPerTrk		24		/* Track size [sector] (2) */
 447:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_NumHeads		26		/* Number of heads (2) */
 448:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_HiddSec			28		/* Number of special hidden sectors (4) */
 449:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_TotSec32		32		/* Volume size [sector] (4) */
 450:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum			36		/* Physical drive number (2) */
 451:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig			38		/* Extended boot signature (1) */
 452:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID			39		/* Volume serial number (4) */
 453:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab			43		/* Volume label (8) */
 454:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType		54		/* File system type (1) */
 455:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FATSz32			36		/* FAT size [sector] (4) */
 456:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_ExtFlags		40		/* Extended flags (2) */
 457:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSVer			42		/* File system version (2) */
 458:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_RootClus		44		/* Root directory first cluster (4) */
 459:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_FSInfo			48		/* Offset of FSINFO sector (2) */
 460:Middlewares/Third_Party/FatFs/src/ff.c **** #define BPB_BkBootSec		50		/* Offset of backup boot sector (2) */
 461:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_DrvNum32			64		/* Physical drive number (2) */
 462:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_BootSig32		66		/* Extended boot signature (1) */
 463:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolID32			67		/* Volume serial number (4) */
 464:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_VolLab32			71		/* Volume label (8) */
 465:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_FilSysType32		82		/* File system type (1) */
 466:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_LeadSig			0		/* FSI: Leading signature (4) */
 467:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_StrucSig		484		/* FSI: Structure signature (4) */
 468:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Free_Count		488		/* FSI: Number of free clusters (4) */
 469:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FSI_Nxt_Free		492		/* FSI: Last allocated cluster (4) */
 470:Middlewares/Third_Party/FatFs/src/ff.c **** #define MBR_Table			446		/* MBR: Partition table offset (2) */
 471:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_PTE				16		/* MBR: Size of a partition table entry */
 472:Middlewares/Third_Party/FatFs/src/ff.c **** #define BS_55AA				510		/* Signature word (2) */
 473:Middlewares/Third_Party/FatFs/src/ff.c **** 
 474:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Name			0		/* Short file name (11) */
 475:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_Attr			11		/* Attribute (1) */
 476:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_NTres			12		/* Lower case flag (1) */
 477:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_CrtTimeTenth	13		/* Created time sub-second (1) */
 478:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtTime			14		/* Created time (2) */
 479:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_CrtDate			16		/* Created date (2) */
 480:Middlewares/Third_Party/FatFs/src/ff.c **** #define DIR_LstAccDate		18		/* Last accessed date (2) */
 481:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusHI		20		/* Higher 16-bit of first cluster (2) */
 482:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtTime			22		/* Modified time (2) */
 483:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_WrtDate			24		/* Modified date (2) */
 484:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FstClusLO		26		/* Lower 16-bit of first cluster (2) */
 485:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DIR_FileSize		28		/* File size (4) */
 486:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Ord			0		/* LFN entry order and LLE flag (1) */
 487:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Attr			11		/* LFN attribute (1) */
 488:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Type			12		/* LFN type (1) */
 489:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_Chksum			13		/* Sum of corresponding SFN entry */
 490:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LDIR_FstClusLO		26		/* Must be zero (0) */
ARM GAS  /tmp/cckAXl85.s 			page 10


 491:Middlewares/Third_Party/FatFs/src/ff.c **** #define	SZ_DIRE				32		/* Size of a directory entry */
 492:Middlewares/Third_Party/FatFs/src/ff.c **** #define	LLEF				0x40	/* Last long entry flag in LDIR_Ord */
 493:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DDEM				0xE5	/* Deleted directory entry mark at DIR_Name[0] */
 494:Middlewares/Third_Party/FatFs/src/ff.c **** #define	RDDEM				0x05	/* Replacement of the character collides with DDEM */
 495:Middlewares/Third_Party/FatFs/src/ff.c **** 
 496:Middlewares/Third_Party/FatFs/src/ff.c **** 
 497:Middlewares/Third_Party/FatFs/src/ff.c **** 
 498:Middlewares/Third_Party/FatFs/src/ff.c **** 
 499:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 500:Middlewares/Third_Party/FatFs/src/ff.c **** /* Module private work area                                   */
 501:Middlewares/Third_Party/FatFs/src/ff.c **** /*------------------------------------------------------------*/
 502:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remark: Uninitialized variables with static duration are
 503:Middlewares/Third_Party/FatFs/src/ff.c **** /  guaranteed zero/null at start-up. If not, either the linker
 504:Middlewares/Third_Party/FatFs/src/ff.c **** /  or start-up routine being used is out of ANSI-C standard.
 505:Middlewares/Third_Party/FatFs/src/ff.c **** */
 506:Middlewares/Third_Party/FatFs/src/ff.c **** 
 507:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES < 1 || _VOLUMES > 9
 508:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _VOLUMES setting
 509:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 510:Middlewares/Third_Party/FatFs/src/ff.c **** static FATFS *FatFs[_VOLUMES];	/* Pointer to the file system objects (logical drives) */
 511:Middlewares/Third_Party/FatFs/src/ff.c **** static WORD Fsid;				/* File system mount ID */
 512:Middlewares/Third_Party/FatFs/src/ff.c **** 
 513:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
 514:Middlewares/Third_Party/FatFs/src/ff.c **** static BYTE CurrVol;			/* Current drive */
 515:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 516:Middlewares/Third_Party/FatFs/src/ff.c **** 
 517:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 518:Middlewares/Third_Party/FatFs/src/ff.c **** static FILESEM Files[_FS_LOCK];	/* Open object lock semaphores */
 519:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 520:Middlewares/Third_Party/FatFs/src/ff.c **** 
 521:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 0			/* Non LFN feature */
 522:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 523:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		(dobj).fn = sfn
 524:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 525:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 526:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_LFN < 12 || _MAX_LFN > 255
 527:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _MAX_LFN setting
 528:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 529:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN == 1			/* LFN feature with static working buffer */
 530:Middlewares/Third_Party/FatFs/src/ff.c **** static WCHAR LfnBuf[_MAX_LFN + 1];
 531:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]
 532:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = LfnBuf; }
 533:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 534:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 2 		/* LFN feature with dynamic working buffer on the stack */
 535:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR lbuf[_MAX_LFN + 1]
 536:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ (dobj).fn = sfn; (dobj).lfn = lbuf; }
 537:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()
 538:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _USE_LFN == 3 		/* LFN feature with dynamic working buffer on the heap */
 539:Middlewares/Third_Party/FatFs/src/ff.c **** #define	DEFINE_NAMEBUF		BYTE sfn[12]; WCHAR *lfn
 540:Middlewares/Third_Party/FatFs/src/ff.c **** #define INIT_BUF(dobj)		{ lfn = ff_memalloc((_MAX_LFN + 1) * 2); if (!lfn) LEAVE_FF((dobj).fs, FR_N
 541:Middlewares/Third_Party/FatFs/src/ff.c **** #define	FREE_BUF()			ff_memfree(lfn)
 542:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 543:Middlewares/Third_Party/FatFs/src/ff.c **** #error Wrong _USE_LFN setting
 544:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 545:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 546:Middlewares/Third_Party/FatFs/src/ff.c **** 
 547:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
ARM GAS  /tmp/cckAXl85.s 			page 11


 548:Middlewares/Third_Party/FatFs/src/ff.c **** static const BYTE ExCvt[] = _EXCVT;	/* Upper conversion table for extended characters */
 549:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 550:Middlewares/Third_Party/FatFs/src/ff.c **** 
 551:Middlewares/Third_Party/FatFs/src/ff.c **** 
 552:Middlewares/Third_Party/FatFs/src/ff.c **** 
 553:Middlewares/Third_Party/FatFs/src/ff.c **** 
 554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 555:Middlewares/Third_Party/FatFs/src/ff.c **** 
 556:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
 557:Middlewares/Third_Party/FatFs/src/ff.c **** 
 558:Middlewares/Third_Party/FatFs/src/ff.c ****    Module Private Functions
 559:Middlewares/Third_Party/FatFs/src/ff.c **** 
 560:Middlewares/Third_Party/FatFs/src/ff.c **** ---------------------------------------------------------------------------*/
 561:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (FATFS* fs, DWORD clst);
 562:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (FATFS* fs,	DWORD clst);
 563:Middlewares/Third_Party/FatFs/src/ff.c **** 
 564:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 565:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (FATFS* fs,	DWORD clst,	DWORD val);
 566:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 567:Middlewares/Third_Party/FatFs/src/ff.c **** 
 568:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 569:Middlewares/Third_Party/FatFs/src/ff.c **** static void gen_numname (BYTE* dst, const BYTE* src, const WCHAR* lfn, UINT seq);
 570:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_USE_LFN */
 571:Middlewares/Third_Party/FatFs/src/ff.c **** 
 572:Middlewares/Third_Party/FatFs/src/ff.c **** 
 573:Middlewares/Third_Party/FatFs/src/ff.c **** 
 574:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 575:Middlewares/Third_Party/FatFs/src/ff.c **** /* String functions                                                      */
 576:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 577:Middlewares/Third_Party/FatFs/src/ff.c **** 
 578:Middlewares/Third_Party/FatFs/src/ff.c **** /* Copy memory to memory */
 579:Middlewares/Third_Party/FatFs/src/ff.c **** static
 580:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_cpy (void* dst, const void* src, UINT cnt) {
  25              		.loc 1 580 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 581:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 582:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *s = (const BYTE*)src;
 583:Middlewares/Third_Party/FatFs/src/ff.c **** 
 584:Middlewares/Third_Party/FatFs/src/ff.c **** #if _WORD_ACCESS == 1
 585:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt >= sizeof (int)) {
 586:Middlewares/Third_Party/FatFs/src/ff.c **** 		*(int*)d = *(int*)s;
 587:Middlewares/Third_Party/FatFs/src/ff.c **** 		d += sizeof (int); s += sizeof (int);
 588:Middlewares/Third_Party/FatFs/src/ff.c **** 		cnt -= sizeof (int);
 589:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 590:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  31              		.loc 1 591 0
  32 0000 04E0     		b	.L2
  33              	.LVL1:
  34              	.L3:
 592:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  35              		.loc 1 592 0
  36 0002 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
ARM GAS  /tmp/cckAXl85.s 			page 12


  37 0004 0270     		strb	r2, [r0]
  38 0006 0131     		adds	r1, r1, #1
  39              	.LVL2:
  40 0008 0130     		adds	r0, r0, #1
  41              	.LVL3:
 591:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = *s++;
  42              		.loc 1 591 0
  43 000a 1A46     		mov	r2, r3
  44              	.LVL4:
  45              	.L2:
  46 000c 531E     		subs	r3, r2, #1
  47              	.LVL5:
  48 000e 002A     		cmp	r2, #0
  49 0010 F7D1     		bne	.L3
 593:Middlewares/Third_Party/FatFs/src/ff.c **** }
  50              		.loc 1 593 0
  51 0012 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE69:
  55              		.section	.text.mem_set,"ax",%progbits
  56              		.align	1
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu softvfp
  62              	mem_set:
  63              	.LFB70:
 594:Middlewares/Third_Party/FatFs/src/ff.c **** 
 595:Middlewares/Third_Party/FatFs/src/ff.c **** /* Fill memory */
 596:Middlewares/Third_Party/FatFs/src/ff.c **** static
 597:Middlewares/Third_Party/FatFs/src/ff.c **** void mem_set (void* dst, int val, UINT cnt) {
  64              		.loc 1 597 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL6:
 598:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *d = (BYTE*)dst;
 599:Middlewares/Third_Party/FatFs/src/ff.c **** 
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt--)
  70              		.loc 1 600 0
  71 0000 02E0     		b	.L5
  72              	.LVL7:
  73              	.L6:
 601:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  74              		.loc 1 601 0
  75 0002 0170     		strb	r1, [r0]
  76 0004 0130     		adds	r0, r0, #1
  77              	.LVL8:
 600:Middlewares/Third_Party/FatFs/src/ff.c **** 		*d++ = (BYTE)val;
  78              		.loc 1 600 0
  79 0006 1A46     		mov	r2, r3
  80              	.LVL9:
  81              	.L5:
  82 0008 531E     		subs	r3, r2, #1
  83              	.LVL10:
  84 000a 002A     		cmp	r2, #0
ARM GAS  /tmp/cckAXl85.s 			page 13


  85 000c F9D1     		bne	.L6
 602:Middlewares/Third_Party/FatFs/src/ff.c **** }
  86              		.loc 1 602 0
  87 000e 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE70:
  91              		.section	.text.mem_cmp,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu softvfp
  98              	mem_cmp:
  99              	.LFB71:
 603:Middlewares/Third_Party/FatFs/src/ff.c **** 
 604:Middlewares/Third_Party/FatFs/src/ff.c **** /* Compare memory to memory */
 605:Middlewares/Third_Party/FatFs/src/ff.c **** static
 606:Middlewares/Third_Party/FatFs/src/ff.c **** int mem_cmp (const void* dst, const void* src, UINT cnt) {
 100              		.loc 1 606 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105              	.LVL11:
 106 0000 70B4     		push	{r4, r5, r6}
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 12
 109              		.cfi_offset 4, -12
 110              		.cfi_offset 5, -8
 111              		.cfi_offset 6, -4
 112              	.LVL12:
 607:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
 113              		.loc 1 607 0
 114 0002 0346     		mov	r3, r0
 608:Middlewares/Third_Party/FatFs/src/ff.c **** 	int r = 0;
 115              		.loc 1 608 0
 116 0004 0020     		movs	r0, #0
 117              	.LVL13:
 609:Middlewares/Third_Party/FatFs/src/ff.c **** 
 610:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (cnt-- && (r = *d++ - *s++) == 0) ;
 118              		.loc 1 610 0
 119 0006 01E0     		b	.L9
 120              	.LVL14:
 121              	.L10:
 122 0008 2946     		mov	r1, r5
 123 000a 3346     		mov	r3, r6
 124              	.LVL15:
 125              	.L9:
 126              		.loc 1 610 0 is_stmt 0 discriminator 2
 127 000c 541E     		subs	r4, r2, #1
 128              	.LVL16:
 129 000e 32B1     		cbz	r2, .L7
 130              		.loc 1 610 0 discriminator 1
 131 0010 5E1C     		adds	r6, r3, #1
 132              	.LVL17:
 133 0012 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 134              	.LVL18:
ARM GAS  /tmp/cckAXl85.s 			page 14


 135 0014 4D1C     		adds	r5, r1, #1
 136              	.LVL19:
 137 0016 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 138              	.LVL20:
 139 0018 2246     		mov	r2, r4
 140 001a C01A     		subs	r0, r0, r3
 141              	.LVL21:
 142 001c F4D0     		beq	.L10
 143              	.LVL22:
 144              	.L7:
 611:Middlewares/Third_Party/FatFs/src/ff.c **** 	return r;
 612:Middlewares/Third_Party/FatFs/src/ff.c **** }
 145              		.loc 1 612 0 is_stmt 1
 146 001e 70BC     		pop	{r4, r5, r6}
 147              	.LCFI1:
 148              		.cfi_restore 6
 149              		.cfi_restore 5
 150              		.cfi_restore 4
 151              		.cfi_def_cfa_offset 0
 152              	.LVL23:
 153 0020 7047     		bx	lr
 154              		.cfi_endproc
 155              	.LFE71:
 157              		.section	.text.chk_chr,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu softvfp
 164              	chk_chr:
 165              	.LFB72:
 613:Middlewares/Third_Party/FatFs/src/ff.c **** 
 614:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if chr is contained in the string */
 615:Middlewares/Third_Party/FatFs/src/ff.c **** static
 616:Middlewares/Third_Party/FatFs/src/ff.c **** int chk_chr (const char* str, int chr) {
 166              		.loc 1 616 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              	.LVL24:
 617:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str && *str != chr) str++;
 172              		.loc 1 617 0
 173 0000 00E0     		b	.L13
 174              	.L15:
 175              		.loc 1 617 0 is_stmt 0 discriminator 3
 176 0002 0130     		adds	r0, r0, #1
 177              	.LVL25:
 178              	.L13:
 179              		.loc 1 617 0 discriminator 1
 180 0004 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 181 0006 0BB1     		cbz	r3, .L14
 182              		.loc 1 617 0 discriminator 2
 183 0008 8B42     		cmp	r3, r1
 184 000a FAD1     		bne	.L15
 185              	.L14:
 618:Middlewares/Third_Party/FatFs/src/ff.c **** 	return *str;
ARM GAS  /tmp/cckAXl85.s 			page 15


 619:Middlewares/Third_Party/FatFs/src/ff.c **** }
 186              		.loc 1 619 0 is_stmt 1
 187 000c 1846     		mov	r0, r3
 188              	.LVL26:
 189 000e 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE72:
 193              		.section	.text.chk_lock,"ax",%progbits
 194              		.align	1
 195              		.syntax unified
 196              		.thumb
 197              		.thumb_func
 198              		.fpu softvfp
 200              	chk_lock:
 201              	.LFB75:
 620:Middlewares/Third_Party/FatFs/src/ff.c **** 
 621:Middlewares/Third_Party/FatFs/src/ff.c **** 
 622:Middlewares/Third_Party/FatFs/src/ff.c **** 
 623:Middlewares/Third_Party/FatFs/src/ff.c **** 
 624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 625:Middlewares/Third_Party/FatFs/src/ff.c **** /* Request/Release grant to access the volume                            */
 626:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 627:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 628:Middlewares/Third_Party/FatFs/src/ff.c **** static
 629:Middlewares/Third_Party/FatFs/src/ff.c **** int lock_fs (
 630:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 631:Middlewares/Third_Party/FatFs/src/ff.c **** )
 632:Middlewares/Third_Party/FatFs/src/ff.c **** {
 633:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_req_grant(fs->sobj);
 634:Middlewares/Third_Party/FatFs/src/ff.c **** }
 635:Middlewares/Third_Party/FatFs/src/ff.c **** 
 636:Middlewares/Third_Party/FatFs/src/ff.c **** 
 637:Middlewares/Third_Party/FatFs/src/ff.c **** static
 638:Middlewares/Third_Party/FatFs/src/ff.c **** void unlock_fs (
 639:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 640:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res		/* Result code to be returned */
 641:Middlewares/Third_Party/FatFs/src/ff.c **** )
 642:Middlewares/Third_Party/FatFs/src/ff.c **** {
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs &&
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_NOT_ENABLED &&
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_DRIVE &&
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_OBJECT &&
 647:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_TIMEOUT) {
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 		ff_rel_grant(fs->sobj);
 649:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 650:Middlewares/Third_Party/FatFs/src/ff.c **** }
 651:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 652:Middlewares/Third_Party/FatFs/src/ff.c **** 
 653:Middlewares/Third_Party/FatFs/src/ff.c **** 
 654:Middlewares/Third_Party/FatFs/src/ff.c **** 
 655:Middlewares/Third_Party/FatFs/src/ff.c **** 
 656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 657:Middlewares/Third_Party/FatFs/src/ff.c **** /* File lock control functions                                           */
 658:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 659:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 661:Middlewares/Third_Party/FatFs/src/ff.c **** static
ARM GAS  /tmp/cckAXl85.s 			page 16


 662:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT chk_lock (	/* Check if the file can be accessed */
 663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Directory object pointing the file to be checked */
 664:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc			/* Desired access type (0:Read, 1:Write, 2:Delete/Rename) */
 665:Middlewares/Third_Party/FatFs/src/ff.c **** )
 666:Middlewares/Third_Party/FatFs/src/ff.c **** {
 202              		.loc 1 666 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL27:
 208 0000 30B4     		push	{r4, r5}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 5, -4
 213              	.LVL28:
 667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, be;
 668:Middlewares/Third_Party/FatFs/src/ff.c **** 
 669:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Search file semaphore table */
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = be = 0; i < _FS_LOCK; i++) {
 214              		.loc 1 670 0
 215 0002 0025     		movs	r5, #0
 216 0004 2B46     		mov	r3, r5
 217 0006 01E0     		b	.L17
 218              	.LVL29:
 219              	.L23:
 671:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (Files[i].fs == dp->fs &&	 	/* Check if the object matched with an open object */
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 675:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 676:Middlewares/Third_Party/FatFs/src/ff.c **** 			be = 1;
 220              		.loc 1 676 0
 221 0008 0125     		movs	r5, #1
 222              	.LVL30:
 223              	.L18:
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 224              		.loc 1 670 0 discriminator 2
 225 000a 0133     		adds	r3, r3, #1
 226              	.LVL31:
 227              	.L17:
 670:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 228              		.loc 1 670 0 is_stmt 0 discriminator 1
 229 000c 012B     		cmp	r3, #1
 230 000e 1BD8     		bhi	.L19
 671:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs) {	/* Existing entry */
 231              		.loc 1 671 0 is_stmt 1
 232 0010 03EB4304 		add	r4, r3, r3, lsl #1
 233 0014 A200     		lsls	r2, r4, #2
 234 0016 1A4C     		ldr	r4, .L33
 235 0018 A258     		ldr	r2, [r4, r2]
 236 001a 002A     		cmp	r2, #0
 237 001c F4D0     		beq	.L23
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 238              		.loc 1 672 0
 239 001e 0468     		ldr	r4, [r0]
ARM GAS  /tmp/cckAXl85.s 			page 17


 240 0020 A242     		cmp	r2, r4
 241 0022 F2D1     		bne	.L18
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 242              		.loc 1 673 0 discriminator 1
 243 0024 03EB4302 		add	r2, r3, r3, lsl #1
 244 0028 9400     		lsls	r4, r2, #2
 245 002a 154A     		ldr	r2, .L33
 246 002c 2244     		add	r2, r2, r4
 247 002e 5468     		ldr	r4, [r2, #4]
 248 0030 8268     		ldr	r2, [r0, #8]
 672:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].clu == dp->sclust &&
 249              		.loc 1 672 0 discriminator 1
 250 0032 9442     		cmp	r4, r2
 251 0034 E9D1     		bne	.L18
 674:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {			/* Blank entry */
 252              		.loc 1 674 0
 253 0036 03EB4302 		add	r2, r3, r3, lsl #1
 254 003a 9400     		lsls	r4, r2, #2
 255 003c 104A     		ldr	r2, .L33
 256 003e 2244     		add	r2, r2, r4
 257 0040 1489     		ldrh	r4, [r2, #8]
 258 0042 C288     		ldrh	r2, [r0, #6]
 673:Middlewares/Third_Party/FatFs/src/ff.c **** 				Files[i].idx == dp->index) break;
 259              		.loc 1 673 0
 260 0044 9442     		cmp	r4, r2
 261 0046 E0D1     		bne	.L18
 262              	.L19:
 677:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 678:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 679:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK)	/* The object is not opened */
 263              		.loc 1 679 0
 264 0048 022B     		cmp	r3, #2
 265 004a 03D0     		beq	.L29
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 681:Middlewares/Third_Party/FatFs/src/ff.c **** 
 682:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The object has been opened. Reject any open against writing file and all write mode open */
 683:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (acc || Files[i].ctr == 0x100) ? FR_LOCKED : FR_OK;
 266              		.loc 1 683 0
 267 004c 49B1     		cbz	r1, .L30
 268 004e 1020     		movs	r0, #16
 269              	.LVL32:
 270              	.L22:
 684:Middlewares/Third_Party/FatFs/src/ff.c **** }
 271              		.loc 1 684 0
 272 0050 30BC     		pop	{r4, r5}
 273              	.LCFI3:
 274              		.cfi_remember_state
 275              		.cfi_restore 5
 276              		.cfi_restore 4
 277              		.cfi_def_cfa_offset 0
 278              	.LVL33:
 279 0052 7047     		bx	lr
 280              	.LVL34:
 281              	.L29:
 282              	.LCFI4:
 283              		.cfi_restore_state
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
ARM GAS  /tmp/cckAXl85.s 			page 18


 284              		.loc 1 680 0
 285 0054 95B9     		cbnz	r5, .L24
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 286              		.loc 1 680 0 is_stmt 0 discriminator 2
 287 0056 0229     		cmp	r1, #2
 288 0058 01D0     		beq	.L31
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 289              		.loc 1 680 0
 290 005a 1220     		movs	r0, #18
 291              	.LVL35:
 292 005c F8E7     		b	.L22
 293              	.LVL36:
 294              	.L31:
 295 005e 0020     		movs	r0, #0
 296              	.LVL37:
 297 0060 F6E7     		b	.L22
 298              	.LVL38:
 299              	.L30:
 683:Middlewares/Third_Party/FatFs/src/ff.c **** }
 300              		.loc 1 683 0 is_stmt 1 discriminator 2
 301 0062 03EB4303 		add	r3, r3, r3, lsl #1
 302              	.LVL39:
 303 0066 9A00     		lsls	r2, r3, #2
 304 0068 054B     		ldr	r3, .L33
 305 006a 1344     		add	r3, r3, r2
 306 006c 5B89     		ldrh	r3, [r3, #10]
 307 006e B3F5807F 		cmp	r3, #256
 308 0072 01D0     		beq	.L32
 683:Middlewares/Third_Party/FatFs/src/ff.c **** }
 309              		.loc 1 683 0 is_stmt 0
 310 0074 0020     		movs	r0, #0
 311              	.LVL40:
 312 0076 EBE7     		b	.L22
 313              	.LVL41:
 314              	.L32:
 315 0078 1020     		movs	r0, #16
 316              	.LVL42:
 317 007a E9E7     		b	.L22
 318              	.LVL43:
 319              	.L24:
 680:Middlewares/Third_Party/FatFs/src/ff.c **** 		return (be || acc == 2) ? FR_OK : FR_TOO_MANY_OPEN_FILES;	/* Is there a blank entry for new objec
 320              		.loc 1 680 0 is_stmt 1
 321 007c 0020     		movs	r0, #0
 322              	.LVL44:
 323 007e E7E7     		b	.L22
 324              	.L34:
 325              		.align	2
 326              	.L33:
 327 0080 00000000 		.word	.LANCHOR0
 328              		.cfi_endproc
 329              	.LFE75:
 331              		.section	.text.enq_lock,"ax",%progbits
 332              		.align	1
 333              		.syntax unified
 334              		.thumb
 335              		.thumb_func
 336              		.fpu softvfp
ARM GAS  /tmp/cckAXl85.s 			page 19


 338              	enq_lock:
 339              	.LFB76:
 685:Middlewares/Third_Party/FatFs/src/ff.c **** 
 686:Middlewares/Third_Party/FatFs/src/ff.c **** 
 687:Middlewares/Third_Party/FatFs/src/ff.c **** static
 688:Middlewares/Third_Party/FatFs/src/ff.c **** int enq_lock (void)	/* Check if an entry is available for a new object */
 689:Middlewares/Third_Party/FatFs/src/ff.c **** {
 340              		.loc 1 689 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345              	.LVL45:
 690:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 691:Middlewares/Third_Party/FatFs/src/ff.c **** 
 692:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 346              		.loc 1 692 0
 347 0000 0020     		movs	r0, #0
 348 0002 00E0     		b	.L36
 349              	.LVL46:
 350              	.L38:
 351              		.loc 1 692 0 is_stmt 0 discriminator 4
 352 0004 0130     		adds	r0, r0, #1
 353              	.LVL47:
 354              	.L36:
 355              		.loc 1 692 0 discriminator 1
 356 0006 0128     		cmp	r0, #1
 357 0008 06D8     		bhi	.L37
 358              		.loc 1 692 0 discriminator 3
 359 000a 00EB4002 		add	r2, r0, r0, lsl #1
 360 000e 9300     		lsls	r3, r2, #2
 361 0010 034A     		ldr	r2, .L39
 362 0012 D358     		ldr	r3, [r2, r3]
 363 0014 002B     		cmp	r3, #0
 364 0016 F5D1     		bne	.L38
 365              	.L37:
 693:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (i == _FS_LOCK) ? 0 : 1;
 694:Middlewares/Third_Party/FatFs/src/ff.c **** }
 366              		.loc 1 694 0 is_stmt 1
 367 0018 0238     		subs	r0, r0, #2
 368              	.LVL48:
 369 001a 18BF     		it	ne
 370 001c 0120     		movne	r0, #1
 371              	.LVL49:
 372 001e 7047     		bx	lr
 373              	.L40:
 374              		.align	2
 375              	.L39:
 376 0020 00000000 		.word	.LANCHOR0
 377              		.cfi_endproc
 378              	.LFE76:
 380              		.section	.text.inc_lock,"ax",%progbits
 381              		.align	1
 382              		.syntax unified
 383              		.thumb
 384              		.thumb_func
 385              		.fpu softvfp
ARM GAS  /tmp/cckAXl85.s 			page 20


 387              	inc_lock:
 388              	.LFB77:
 695:Middlewares/Third_Party/FatFs/src/ff.c **** 
 696:Middlewares/Third_Party/FatFs/src/ff.c **** 
 697:Middlewares/Third_Party/FatFs/src/ff.c **** static
 698:Middlewares/Third_Party/FatFs/src/ff.c **** UINT inc_lock (	/* Increment object open counter and returns its index (0:Internal error) */
 699:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Directory object pointing the file to register or increment */
 700:Middlewares/Third_Party/FatFs/src/ff.c **** 	int acc		/* Desired access (0:Read, 1:Write, 2:Delete/Rename) */
 701:Middlewares/Third_Party/FatFs/src/ff.c **** )
 702:Middlewares/Third_Party/FatFs/src/ff.c **** {
 389              		.loc 1 702 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              	.LVL50:
 395 0000 70B4     		push	{r4, r5, r6}
 396              	.LCFI5:
 397              		.cfi_def_cfa_offset 12
 398              		.cfi_offset 4, -12
 399              		.cfi_offset 5, -8
 400              		.cfi_offset 6, -4
 401              	.LVL51:
 703:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 704:Middlewares/Third_Party/FatFs/src/ff.c **** 
 705:Middlewares/Third_Party/FatFs/src/ff.c **** 
 706:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {	/* Find the object */
 402              		.loc 1 706 0
 403 0002 0023     		movs	r3, #0
 404 0004 00E0     		b	.L42
 405              	.LVL52:
 406              	.L43:
 407              		.loc 1 706 0 is_stmt 0 discriminator 2
 408 0006 0133     		adds	r3, r3, #1
 409              	.LVL53:
 410              	.L42:
 411              		.loc 1 706 0 discriminator 1
 412 0008 012B     		cmp	r3, #1
 413 000a 19D8     		bhi	.L44
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
 414              		.loc 1 707 0 is_stmt 1
 415 000c 03EB4304 		add	r4, r3, r3, lsl #1
 416 0010 A200     		lsls	r2, r4, #2
 417 0012 2B4C     		ldr	r4, .L59
 418 0014 A458     		ldr	r4, [r4, r2]
 419 0016 0268     		ldr	r2, [r0]
 420 0018 9442     		cmp	r4, r2
 421 001a F4D1     		bne	.L43
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 422              		.loc 1 708 0 discriminator 1
 423 001c 03EB4302 		add	r2, r3, r3, lsl #1
 424 0020 9400     		lsls	r4, r2, #2
 425 0022 274A     		ldr	r2, .L59
 426 0024 2244     		add	r2, r2, r4
 427 0026 5468     		ldr	r4, [r2, #4]
 428 0028 8268     		ldr	r2, [r0, #8]
 707:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == dp->fs &&
ARM GAS  /tmp/cckAXl85.s 			page 21


 429              		.loc 1 707 0 discriminator 1
 430 002a 9442     		cmp	r4, r2
 431 002c EBD1     		bne	.L43
 709:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].idx == dp->index) break;
 432              		.loc 1 709 0
 433 002e 03EB4302 		add	r2, r3, r3, lsl #1
 434 0032 9400     		lsls	r4, r2, #2
 435 0034 224A     		ldr	r2, .L59
 436 0036 2244     		add	r2, r2, r4
 437 0038 1489     		ldrh	r4, [r2, #8]
 438 003a C288     		ldrh	r2, [r0, #6]
 708:Middlewares/Third_Party/FatFs/src/ff.c **** 			Files[i].clu == dp->sclust &&
 439              		.loc 1 708 0
 440 003c 9442     		cmp	r4, r2
 441 003e E2D1     		bne	.L43
 442              	.L44:
 710:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 711:Middlewares/Third_Party/FatFs/src/ff.c **** 
 712:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i == _FS_LOCK) {				/* Not opened. Register it as new. */
 443              		.loc 1 712 0
 444 0040 022B     		cmp	r3, #2
 445 0042 34D0     		beq	.L58
 446              	.LVL54:
 447              	.L47:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < _FS_LOCK && Files[i].fs; i++) ;
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 715:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 716:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->sclust;
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].idx = dp->index;
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 719:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 720:Middlewares/Third_Party/FatFs/src/ff.c **** 
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (acc && Files[i].ctr) return 0;	/* Access violation (int err) */
 448              		.loc 1 721 0
 449 0044 39B1     		cbz	r1, .L51
 450              		.loc 1 721 0 is_stmt 0 discriminator 1
 451 0046 03EB4302 		add	r2, r3, r3, lsl #1
 452 004a 9000     		lsls	r0, r2, #2
 453 004c 1C4A     		ldr	r2, .L59
 454 004e 0244     		add	r2, r2, r0
 455 0050 5289     		ldrh	r2, [r2, #10]
 456 0052 002A     		cmp	r2, #0
 457 0054 32D1     		bne	.L55
 458              	.L51:
 722:Middlewares/Third_Party/FatFs/src/ff.c **** 
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 	Files[i].ctr = acc ? 0x100 : Files[i].ctr + 1;	/* Set semaphore value */
 459              		.loc 1 723 0 is_stmt 1
 460 0056 61BB     		cbnz	r1, .L56
 461              		.loc 1 723 0 is_stmt 0 discriminator 1
 462 0058 03EB4302 		add	r2, r3, r3, lsl #1
 463 005c 9100     		lsls	r1, r2, #2
 464              	.LVL55:
 465 005e 184A     		ldr	r2, .L59
 466 0060 0A44     		add	r2, r2, r1
 467 0062 5189     		ldrh	r1, [r2, #10]
 468 0064 0131     		adds	r1, r1, #1
 469 0066 89B2     		uxth	r1, r1
ARM GAS  /tmp/cckAXl85.s 			page 22


 470              	.L52:
 471              		.loc 1 723 0 discriminator 4
 472 0068 03EB4302 		add	r2, r3, r3, lsl #1
 473 006c 9000     		lsls	r0, r2, #2
 474 006e 144A     		ldr	r2, .L59
 475 0070 0244     		add	r2, r2, r0
 476 0072 5181     		strh	r1, [r2, #10]	@ movhi
 724:Middlewares/Third_Party/FatFs/src/ff.c **** 
 725:Middlewares/Third_Party/FatFs/src/ff.c **** 	return i + 1;
 477              		.loc 1 725 0 is_stmt 1 discriminator 4
 478 0074 581C     		adds	r0, r3, #1
 479              	.L41:
 726:Middlewares/Third_Party/FatFs/src/ff.c **** }
 480              		.loc 1 726 0
 481 0076 70BC     		pop	{r4, r5, r6}
 482              	.LCFI6:
 483              		.cfi_remember_state
 484              		.cfi_restore 6
 485              		.cfi_restore 5
 486              		.cfi_restore 4
 487              		.cfi_def_cfa_offset 0
 488 0078 7047     		bx	lr
 489              	.LVL56:
 490              	.L49:
 491              	.LCFI7:
 492              		.cfi_restore_state
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 493              		.loc 1 713 0 discriminator 4
 494 007a 0133     		adds	r3, r3, #1
 495              	.LVL57:
 496              	.L46:
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 497              		.loc 1 713 0 is_stmt 0 discriminator 1
 498 007c 012B     		cmp	r3, #1
 499 007e 06D8     		bhi	.L48
 713:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == _FS_LOCK) return 0;	/* No free entry to register (int err) */
 500              		.loc 1 713 0 discriminator 3
 501 0080 03EB4304 		add	r4, r3, r3, lsl #1
 502 0084 A200     		lsls	r2, r4, #2
 503 0086 0E4C     		ldr	r4, .L59
 504 0088 A258     		ldr	r2, [r4, r2]
 505 008a 002A     		cmp	r2, #0
 506 008c F5D1     		bne	.L49
 507              	.L48:
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 508              		.loc 1 714 0 is_stmt 1
 509 008e 022B     		cmp	r3, #2
 510 0090 12D0     		beq	.L54
 715:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].clu = dp->sclust;
 511              		.loc 1 715 0
 512 0092 0568     		ldr	r5, [r0]
 513 0094 0A4E     		ldr	r6, .L59
 514 0096 5A00     		lsls	r2, r3, #1
 515 0098 1A44     		add	r2, r2, r3
 516 009a 9400     		lsls	r4, r2, #2
 517 009c 3219     		adds	r2, r6, r4
 518 009e 3551     		str	r5, [r6, r4]
ARM GAS  /tmp/cckAXl85.s 			page 23


 716:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].idx = dp->index;
 519              		.loc 1 716 0
 520 00a0 8468     		ldr	r4, [r0, #8]
 521 00a2 5460     		str	r4, [r2, #4]
 717:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = 0;
 522              		.loc 1 717 0
 523 00a4 C088     		ldrh	r0, [r0, #6]
 524              	.LVL58:
 525 00a6 1081     		strh	r0, [r2, #8]	@ movhi
 718:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 526              		.loc 1 718 0
 527 00a8 0020     		movs	r0, #0
 528 00aa 5081     		strh	r0, [r2, #10]	@ movhi
 529 00ac CAE7     		b	.L47
 530              	.LVL59:
 531              	.L58:
 532 00ae 0023     		movs	r3, #0
 533              	.LVL60:
 534 00b0 E4E7     		b	.L46
 535              	.LVL61:
 536              	.L56:
 723:Middlewares/Third_Party/FatFs/src/ff.c **** 
 537              		.loc 1 723 0
 538 00b2 4FF48071 		mov	r1, #256
 539              	.LVL62:
 540 00b6 D7E7     		b	.L52
 541              	.LVL63:
 542              	.L54:
 714:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].fs = dp->fs;
 543              		.loc 1 714 0
 544 00b8 0020     		movs	r0, #0
 545              	.LVL64:
 546 00ba DCE7     		b	.L41
 547              	.L55:
 721:Middlewares/Third_Party/FatFs/src/ff.c **** 
 548              		.loc 1 721 0
 549 00bc 0020     		movs	r0, #0
 550 00be DAE7     		b	.L41
 551              	.L60:
 552              		.align	2
 553              	.L59:
 554 00c0 00000000 		.word	.LANCHOR0
 555              		.cfi_endproc
 556              	.LFE77:
 558              		.section	.text.dec_lock,"ax",%progbits
 559              		.align	1
 560              		.syntax unified
 561              		.thumb
 562              		.thumb_func
 563              		.fpu softvfp
 565              	dec_lock:
 566              	.LFB78:
 727:Middlewares/Third_Party/FatFs/src/ff.c **** 
 728:Middlewares/Third_Party/FatFs/src/ff.c **** 
 729:Middlewares/Third_Party/FatFs/src/ff.c **** static
 730:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dec_lock (	/* Decrement object open counter */
 731:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i			/* Semaphore index (1..) */
ARM GAS  /tmp/cckAXl85.s 			page 24


 732:Middlewares/Third_Party/FatFs/src/ff.c **** )
 733:Middlewares/Third_Party/FatFs/src/ff.c **** {
 567              		.loc 1 733 0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 572              	.LVL65:
 734:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD n;
 735:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 736:Middlewares/Third_Party/FatFs/src/ff.c **** 
 737:Middlewares/Third_Party/FatFs/src/ff.c **** 
 738:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (--i < _FS_LOCK) {	/* Shift index number origin from 0 */
 573              		.loc 1 738 0
 574 0000 0138     		subs	r0, r0, #1
 575              	.LVL66:
 576 0002 0128     		cmp	r0, #1
 577 0004 01D9     		bls	.L68
 739:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 0x100) n = 0;		/* If write mode open, delete the entry */
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n) n--;					/* Decrement read mode open count */
 742:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!n) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 745:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 746:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;			/* Invalid index nunber */
 578              		.loc 1 746 0
 579 0006 0220     		movs	r0, #2
 580              	.LVL67:
 581 0008 7047     		bx	lr
 582              	.LVL68:
 583              	.L68:
 739:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = Files[i].ctr;
 584              		.loc 1 739 0
 585 000a 00EB4003 		add	r3, r0, r0, lsl #1
 586 000e 9A00     		lsls	r2, r3, #2
 587 0010 0B4B     		ldr	r3, .L70
 588 0012 1344     		add	r3, r3, r2
 589 0014 5B89     		ldrh	r3, [r3, #10]
 590              	.LVL69:
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n) n--;					/* Decrement read mode open count */
 591              		.loc 1 740 0
 592 0016 B3F5807F 		cmp	r3, #256
 593 001a 0DD0     		beq	.L69
 594              	.LVL70:
 595              	.L63:
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 596              		.loc 1 741 0
 597 001c 0BB1     		cbz	r3, .L64
 741:Middlewares/Third_Party/FatFs/src/ff.c **** 		Files[i].ctr = n;
 598              		.loc 1 741 0 is_stmt 0 discriminator 1
 599 001e 013B     		subs	r3, r3, #1
 600              	.LVL71:
 601 0020 9BB2     		uxth	r3, r3
 602              	.LVL72:
 603              	.L64:
 742:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!n) Files[i].fs = 0;	/* Delete the entry if open count gets zero */
ARM GAS  /tmp/cckAXl85.s 			page 25


 604              		.loc 1 742 0 is_stmt 1
 605 0022 00EB4002 		add	r2, r0, r0, lsl #1
 606 0026 9100     		lsls	r1, r2, #2
 607 0028 054A     		ldr	r2, .L70
 608 002a 0A44     		add	r2, r2, r1
 609 002c 5381     		strh	r3, [r2, #10]	@ movhi
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 610              		.loc 1 743 0
 611 002e 2BB9     		cbnz	r3, .L67
 743:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
 612              		.loc 1 743 0 is_stmt 0 discriminator 1
 613 0030 0020     		movs	r0, #0
 614              	.LVL73:
 615 0032 034A     		ldr	r2, .L70
 616 0034 5050     		str	r0, [r2, r1]
 617 0036 7047     		bx	lr
 618              	.LVL74:
 619              	.L69:
 740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n) n--;					/* Decrement read mode open count */
 620              		.loc 1 740 0 is_stmt 1
 621 0038 0023     		movs	r3, #0
 622              	.LVL75:
 623 003a EFE7     		b	.L63
 624              	.LVL76:
 625              	.L67:
 744:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 626              		.loc 1 744 0
 627 003c 0020     		movs	r0, #0
 628              	.LVL77:
 747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 629              		.loc 1 749 0
 630 003e 7047     		bx	lr
 631              	.L71:
 632              		.align	2
 633              	.L70:
 634 0040 00000000 		.word	.LANCHOR0
 635              		.cfi_endproc
 636              	.LFE78:
 638              		.section	.text.clear_lock,"ax",%progbits
 639              		.align	1
 640              		.syntax unified
 641              		.thumb
 642              		.thumb_func
 643              		.fpu softvfp
 645              	clear_lock:
 646              	.LFB79:
 750:Middlewares/Third_Party/FatFs/src/ff.c **** 
 751:Middlewares/Third_Party/FatFs/src/ff.c **** 
 752:Middlewares/Third_Party/FatFs/src/ff.c **** static
 753:Middlewares/Third_Party/FatFs/src/ff.c **** void clear_lock (	/* Clear lock entries of the volume */
 754:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs
 755:Middlewares/Third_Party/FatFs/src/ff.c **** )
 756:Middlewares/Third_Party/FatFs/src/ff.c **** {
 647              		.loc 1 756 0
 648              		.cfi_startproc
ARM GAS  /tmp/cckAXl85.s 			page 26


 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652              	.LVL78:
 757:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 758:Middlewares/Third_Party/FatFs/src/ff.c **** 
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < _FS_LOCK; i++) {
 653              		.loc 1 759 0
 654 0000 0023     		movs	r3, #0
 655              	.LVL79:
 656 0002 012B     		cmp	r3, #1
 657 0004 13D8     		bhi	.L79
 756:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
 658              		.loc 1 756 0
 659 0006 10B4     		push	{r4}
 660              	.LCFI8:
 661              		.cfi_def_cfa_offset 4
 662              		.cfi_offset 4, -4
 663              	.L75:
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 664              		.loc 1 760 0
 665 0008 03EB4301 		add	r1, r3, r3, lsl #1
 666 000c 8A00     		lsls	r2, r1, #2
 667 000e 0849     		ldr	r1, .L81
 668 0010 8A58     		ldr	r2, [r1, r2]
 669 0012 8242     		cmp	r2, r0
 670 0014 04D0     		beq	.L80
 671              	.L74:
 759:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (Files[i].fs == fs) Files[i].fs = 0;
 672              		.loc 1 759 0 discriminator 2
 673 0016 0133     		adds	r3, r3, #1
 674              	.LVL80:
 675 0018 012B     		cmp	r3, #1
 676 001a F5D9     		bls	.L75
 761:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 762:Middlewares/Third_Party/FatFs/src/ff.c **** }
 677              		.loc 1 762 0
 678 001c 10BC     		pop	{r4}
 679              	.LCFI9:
 680              		.cfi_remember_state
 681              		.cfi_restore 4
 682              		.cfi_def_cfa_offset 0
 683 001e 7047     		bx	lr
 684              	.L80:
 685              	.LCFI10:
 686              		.cfi_restore_state
 760:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 687              		.loc 1 760 0 discriminator 1
 688 0020 03EB4301 		add	r1, r3, r3, lsl #1
 689 0024 8A00     		lsls	r2, r1, #2
 690 0026 0024     		movs	r4, #0
 691 0028 0149     		ldr	r1, .L81
 692 002a 8C50     		str	r4, [r1, r2]
 693 002c F3E7     		b	.L74
 694              	.L79:
 695              	.LCFI11:
 696              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/cckAXl85.s 			page 27


 697              		.cfi_restore 4
 698 002e 7047     		bx	lr
 699              	.L82:
 700              		.align	2
 701              	.L81:
 702 0030 00000000 		.word	.LANCHOR0
 703              		.cfi_endproc
 704              	.LFE79:
 706              		.section	.text.clmt_clust,"ax",%progbits
 707              		.align	1
 708              		.syntax unified
 709              		.thumb
 710              		.thumb_func
 711              		.fpu softvfp
 713              	clmt_clust:
 714              	.LFB88:
 763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 764:Middlewares/Third_Party/FatFs/src/ff.c **** 
 765:Middlewares/Third_Party/FatFs/src/ff.c **** 
 766:Middlewares/Third_Party/FatFs/src/ff.c **** 
 767:Middlewares/Third_Party/FatFs/src/ff.c **** 
 768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Move/Flush disk access window in the file system object               */
 770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 771:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 772:Middlewares/Third_Party/FatFs/src/ff.c **** static
 773:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_window (
 774:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 775:Middlewares/Third_Party/FatFs/src/ff.c **** )
 776:Middlewares/Third_Party/FatFs/src/ff.c **** {
 777:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nf;
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 780:Middlewares/Third_Party/FatFs/src/ff.c **** 
 781:Middlewares/Third_Party/FatFs/src/ff.c **** 
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->wflag) {	/* Write back the sector if it is dirty */
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 786:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 0;
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 792:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 793:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 794:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 795:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 796:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 797:Middlewares/Third_Party/FatFs/src/ff.c **** }
 798:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 799:Middlewares/Third_Party/FatFs/src/ff.c **** 
 800:Middlewares/Third_Party/FatFs/src/ff.c **** 
 801:Middlewares/Third_Party/FatFs/src/ff.c **** static
 802:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT move_window (
 803:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
ARM GAS  /tmp/cckAXl85.s 			page 28


 804:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sector	/* Sector number to make appearance in the fs->win[].d8 */
 805:Middlewares/Third_Party/FatFs/src/ff.c **** )
 806:Middlewares/Third_Party/FatFs/src/ff.c **** {
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 808:Middlewares/Third_Party/FatFs/src/ff.c **** 
 809:Middlewares/Third_Party/FatFs/src/ff.c **** 
 810:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sector != fs->winsect) {	/* Window offset changed? */
 811:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 812:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = sync_window(fs);		/* Write-back changes */
 813:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* Fill sector window with new data */
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 818:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = sector;
 820:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 821:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 822:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 823:Middlewares/Third_Party/FatFs/src/ff.c **** }
 824:Middlewares/Third_Party/FatFs/src/ff.c **** 
 825:Middlewares/Third_Party/FatFs/src/ff.c **** 
 826:Middlewares/Third_Party/FatFs/src/ff.c **** 
 827:Middlewares/Third_Party/FatFs/src/ff.c **** 
 828:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 829:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize file system and strage device                             */
 830:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 831:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 832:Middlewares/Third_Party/FatFs/src/ff.c **** static
 833:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT sync_fs (	/* FR_OK: successful, FR_DISK_ERR: failed */
 834:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs		/* File system object */
 835:Middlewares/Third_Party/FatFs/src/ff.c **** )
 836:Middlewares/Third_Party/FatFs/src/ff.c **** {
 837:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 838:Middlewares/Third_Party/FatFs/src/ff.c **** 
 839:Middlewares/Third_Party/FatFs/src/ff.c **** 
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = sync_window(fs);
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 842:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->fs_type == FS_FAT32 && fs->fsi_flag == 1) {
 844:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 851:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->winsect = fs->volbase + 1;
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 855:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 856:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Make sure that no pending write process in the physical drive */
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(fs->drv, CTRL_SYNC, 0) != RES_OK)
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 859:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 860:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 29


 861:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 862:Middlewares/Third_Party/FatFs/src/ff.c **** }
 863:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 864:Middlewares/Third_Party/FatFs/src/ff.c **** 
 865:Middlewares/Third_Party/FatFs/src/ff.c **** 
 866:Middlewares/Third_Party/FatFs/src/ff.c **** 
 867:Middlewares/Third_Party/FatFs/src/ff.c **** 
 868:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 869:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get sector# from cluster#                                             */
 870:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 871:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 872:Middlewares/Third_Party/FatFs/src/ff.c **** 
 873:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clust2sect (	/* !=0: Sector number, 0: Failed - invalid cluster# */
 874:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,		/* File system object */
 875:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst		/* Cluster# to be converted */
 876:Middlewares/Third_Party/FatFs/src/ff.c **** )
 877:Middlewares/Third_Party/FatFs/src/ff.c **** {
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 880:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 881:Middlewares/Third_Party/FatFs/src/ff.c **** }
 882:Middlewares/Third_Party/FatFs/src/ff.c **** 
 883:Middlewares/Third_Party/FatFs/src/ff.c **** 
 884:Middlewares/Third_Party/FatFs/src/ff.c **** 
 885:Middlewares/Third_Party/FatFs/src/ff.c **** 
 886:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 887:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Read value of a FAT entry                                */
 888:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 889:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 890:Middlewares/Third_Party/FatFs/src/ff.c **** 
 891:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD get_fat (	/* 0xFFFFFFFF:Disk error, 1:Internal error, 2..0x0FFFFFFF:Cluster status */
 892:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 893:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst	/* FAT index number (cluster number) to get the value */
 894:Middlewares/Third_Party/FatFs/src/ff.c **** )
 895:Middlewares/Third_Party/FatFs/src/ff.c **** {
 896:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 897:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 898:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val;
 899:Middlewares/Third_Party/FatFs/src/ff.c **** 
 900:Middlewares/Third_Party/FatFs/src/ff.c **** 
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 903:Middlewares/Third_Party/FatFs/src/ff.c **** 
 904:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 0xFFFFFFFF;	/* Default value falls on disk error */
 906:Middlewares/Third_Party/FatFs/src/ff.c **** 
 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 908:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 915:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 916:Middlewares/Third_Party/FatFs/src/ff.c **** 
 917:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
ARM GAS  /tmp/cckAXl85.s 			page 30


 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 2))) != FR_OK) break;
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 922:Middlewares/Third_Party/FatFs/src/ff.c **** 
 923:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (clst / (SS(fs) / 4))) != FR_OK) break;
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 928:Middlewares/Third_Party/FatFs/src/ff.c **** 
 929:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = 1;	/* Internal error */
 931:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 932:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 933:Middlewares/Third_Party/FatFs/src/ff.c **** 
 934:Middlewares/Third_Party/FatFs/src/ff.c **** 	return val;
 935:Middlewares/Third_Party/FatFs/src/ff.c **** }
 936:Middlewares/Third_Party/FatFs/src/ff.c **** 
 937:Middlewares/Third_Party/FatFs/src/ff.c **** 
 938:Middlewares/Third_Party/FatFs/src/ff.c **** 
 939:Middlewares/Third_Party/FatFs/src/ff.c **** 
 940:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 941:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT access - Change value of a FAT entry                              */
 942:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
 943:Middlewares/Third_Party/FatFs/src/ff.c **** /* Hidden API for hacks and disk tools */
 944:Middlewares/Third_Party/FatFs/src/ff.c **** 
 945:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 946:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT put_fat (
 947:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
 948:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst,	/* FAT index number (cluster number) to be changed */
 949:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD val	/* New value to be set to the entry */
 950:Middlewares/Third_Party/FatFs/src/ff.c **** )
 951:Middlewares/Third_Party/FatFs/src/ff.c **** {
 952:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 953:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *p;
 954:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 955:Middlewares/Third_Party/FatFs/src/ff.c **** 
 956:Middlewares/Third_Party/FatFs/src/ff.c **** 
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 959:Middlewares/Third_Party/FatFs/src/ff.c **** 
 960:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (fs->fs_type) {
 962:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			bc = (UINT)clst; bc += bc / 2;
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
ARM GAS  /tmp/cckAXl85.s 			page 31


 975:Middlewares/Third_Party/FatFs/src/ff.c **** 
 976:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT16 :
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 2)));
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 983:Middlewares/Third_Party/FatFs/src/ff.c **** 
 984:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT32 :
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (clst / (SS(fs) / 4)));
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 992:Middlewares/Third_Party/FatFs/src/ff.c **** 
 993:Middlewares/Third_Party/FatFs/src/ff.c **** 		default :
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INT_ERR;
 995:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 996:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 997:Middlewares/Third_Party/FatFs/src/ff.c **** 
 998:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 999:Middlewares/Third_Party/FatFs/src/ff.c **** }
1000:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1001:Middlewares/Third_Party/FatFs/src/ff.c **** 
1002:Middlewares/Third_Party/FatFs/src/ff.c **** 
1003:Middlewares/Third_Party/FatFs/src/ff.c **** 
1004:Middlewares/Third_Party/FatFs/src/ff.c **** 
1005:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1006:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Remove a cluster chain                                 */
1007:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1008:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1009:Middlewares/Third_Party/FatFs/src/ff.c **** static
1010:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT remove_chain (
1011:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1012:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to remove a chain from */
1013:Middlewares/Third_Party/FatFs/src/ff.c **** )
1014:Middlewares/Third_Party/FatFs/src/ff.c **** {
1015:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1016:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD nxt;
1017:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1018:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD scl = clst, ecl = clst, rt[2];
1019:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1020:Middlewares/Third_Party/FatFs/src/ff.c **** 
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst < 2 || clst >= fs->n_fatent) {	/* Check range */
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
1023:Middlewares/Third_Party/FatFs/src/ff.c **** 
1024:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1025:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_OK;
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (clst < fs->n_fatent) {			/* Not a last link? */
1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
ARM GAS  /tmp/cckAXl85.s 			page 32


1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
1036:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1037:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
1038:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ecl + 1 == nxt) {	/* Is next cluster contiguous? */
1039:Middlewares/Third_Party/FatFs/src/ff.c **** 				ecl = nxt;
1040:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* End of contiguous clusters */ 
1041:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[0] = clust2sect(fs, scl);					/* Start sector */
1042:Middlewares/Third_Party/FatFs/src/ff.c **** 				rt[1] = clust2sect(fs, ecl) + fs->csize - 1;	/* End sector */
1043:Middlewares/Third_Party/FatFs/src/ff.c **** 				disk_ioctl(fs->drv, CTRL_TRIM, rt);				/* Erase the block */
1044:Middlewares/Third_Party/FatFs/src/ff.c **** 				scl = ecl = nxt;
1045:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1046:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1047:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = nxt;	/* Next cluster */
1048:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1049:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1050:Middlewares/Third_Party/FatFs/src/ff.c **** 
1051:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1052:Middlewares/Third_Party/FatFs/src/ff.c **** }
1053:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1054:Middlewares/Third_Party/FatFs/src/ff.c **** 
1055:Middlewares/Third_Party/FatFs/src/ff.c **** 
1056:Middlewares/Third_Party/FatFs/src/ff.c **** 
1057:Middlewares/Third_Party/FatFs/src/ff.c **** 
1058:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1059:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Stretch or Create a cluster chain                      */
1060:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1061:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1062:Middlewares/Third_Party/FatFs/src/ff.c **** static
1063:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD create_chain (	/* 0:No free cluster, 1:Internal error, 0xFFFFFFFF:Disk error, >=2:New cluster
1064:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* File system object */
1065:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst			/* Cluster# to stretch. 0 means create a new chain. */
1066:Middlewares/Third_Party/FatFs/src/ff.c **** )
1067:Middlewares/Third_Party/FatFs/src/ff.c **** {
1068:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
1069:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1070:Middlewares/Third_Party/FatFs/src/ff.c **** 
1071:Middlewares/Third_Party/FatFs/src/ff.c **** 
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {		/* Create a new chain */
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
1075:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1076:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {					/* Stretch the current chain */
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, clst);			/* Check the cluster status */
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
1082:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1083:Middlewares/Third_Party/FatFs/src/ff.c **** 
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	ncl = scl;				/* Start cluster */
1085:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl++;							/* Next cluster */
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
ARM GAS  /tmp/cckAXl85.s 			page 33


1089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
1090:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		cs = get_fat(fs, ncl);			/* Get the cluster status */
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
1094:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl == scl) return 0;		/* No free cluster */
1096:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1097:Middlewares/Third_Party/FatFs/src/ff.c **** 
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = put_fat(fs, ncl, 0x0FFFFFFF);	/* Mark the new cluster "last link" */
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
1101:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
1107:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1108:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
1110:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1111:Middlewares/Third_Party/FatFs/src/ff.c **** 
1112:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ncl;		/* Return new cluster number or error code */
1113:Middlewares/Third_Party/FatFs/src/ff.c **** }
1114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1115:Middlewares/Third_Party/FatFs/src/ff.c **** 
1116:Middlewares/Third_Party/FatFs/src/ff.c **** 
1117:Middlewares/Third_Party/FatFs/src/ff.c **** 
1118:Middlewares/Third_Party/FatFs/src/ff.c **** 
1119:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1120:Middlewares/Third_Party/FatFs/src/ff.c **** /* FAT handling - Convert offset into cluster with link map table        */
1121:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1122:Middlewares/Third_Party/FatFs/src/ff.c **** 
1123:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
1124:Middlewares/Third_Party/FatFs/src/ff.c **** static
1125:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD clmt_clust (	/* <2:Error, >=2:Cluster number */
1126:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
1127:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File offset to be converted to cluster# */
1128:Middlewares/Third_Party/FatFs/src/ff.c **** )
1129:Middlewares/Third_Party/FatFs/src/ff.c **** {
 715              		.loc 1 1129 0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 0
 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719              		@ link register save eliminated.
 720              	.LVL81:
1130:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, ncl, *tbl;
1131:Middlewares/Third_Party/FatFs/src/ff.c **** 
1132:Middlewares/Third_Party/FatFs/src/ff.c **** 
1133:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fp->cltbl + 1;	/* Top of CLMT */
 721              		.loc 1 1133 0
 722 0000 436A     		ldr	r3, [r0, #36]
 723 0002 0433     		adds	r3, r3, #4
 724              	.LVL82:
1134:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = ofs / SS(fp->fs) / fp->fs->csize;	/* Cluster order from top of the file */
 725              		.loc 1 1134 0
ARM GAS  /tmp/cckAXl85.s 			page 34


 726 0004 490A     		lsrs	r1, r1, #9
 727              	.LVL83:
 728 0006 0268     		ldr	r2, [r0]
 729 0008 92F80222 		ldrb	r2, [r2, #514]	@ zero_extendqisi2
 730 000c B1FBF2F1 		udiv	r1, r1, r2
 731              	.LVL84:
 732              	.L86:
1135:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1136:Middlewares/Third_Party/FatFs/src/ff.c **** 		ncl = *tbl++;			/* Number of cluters in the fragment */
 733              		.loc 1 1136 0
 734 0010 1868     		ldr	r0, [r3]
 735              	.LVL85:
1137:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
 736              		.loc 1 1137 0
 737 0012 30B1     		cbz	r0, .L83
1138:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cl < ncl) break;	/* In this fragment? */
 738              		.loc 1 1138 0
 739 0014 8142     		cmp	r1, r0
 740 0016 02D3     		bcc	.L85
1139:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl -= ncl; tbl++;		/* Next fragment */
 741              		.loc 1 1139 0
 742 0018 091A     		subs	r1, r1, r0
 743              	.LVL86:
 744 001a 0833     		adds	r3, r3, #8
 745              	.LVL87:
1136:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ncl) return 0;		/* End of table? (error) */
 746              		.loc 1 1136 0
 747 001c F8E7     		b	.L86
 748              	.LVL88:
 749              	.L85:
1140:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1141:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl + *tbl;	/* Return the cluster number */
 750              		.loc 1 1141 0
 751 001e 5868     		ldr	r0, [r3, #4]
 752              	.LVL89:
 753 0020 0844     		add	r0, r0, r1
 754              	.L83:
1142:Middlewares/Third_Party/FatFs/src/ff.c **** }
 755              		.loc 1 1142 0
 756 0022 7047     		bx	lr
 757              		.cfi_endproc
 758              	.LFE88:
 760              		.section	.text.ld_clust,"ax",%progbits
 761              		.align	1
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu softvfp
 767              	ld_clust:
 768              	.LFB92:
1143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FASTSEEK */
1144:Middlewares/Third_Party/FatFs/src/ff.c **** 
1145:Middlewares/Third_Party/FatFs/src/ff.c **** 
1146:Middlewares/Third_Party/FatFs/src/ff.c **** 
1147:Middlewares/Third_Party/FatFs/src/ff.c **** 
1148:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1149:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Set directory index                              */
ARM GAS  /tmp/cckAXl85.s 			page 35


1150:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1151:Middlewares/Third_Party/FatFs/src/ff.c **** 
1152:Middlewares/Third_Party/FatFs/src/ff.c **** static
1153:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_sdi (
1154:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to directory object */
1155:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT idx		/* Index of directory table */
1156:Middlewares/Third_Party/FatFs/src/ff.c **** )
1157:Middlewares/Third_Party/FatFs/src/ff.c **** {
1158:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
1159:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ic;
1160:Middlewares/Third_Party/FatFs/src/ff.c **** 
1161:Middlewares/Third_Party/FatFs/src/ff.c **** 
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)idx;	/* Current index */
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
1168:Middlewares/Third_Party/FatFs/src/ff.c **** 
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 0) {	/* Static table (root-directory in FAT12/16) */
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
1173:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1174:Middlewares/Third_Party/FatFs/src/ff.c **** 	else {				/* Dynamic table (root-directory in FAT32 or sub-directory) */
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		ic = SS(dp->fs) / SZ_DIRE * dp->fs->csize;	/* Entries per cluster */
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
1182:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(dp->fs, clst);
1184:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->clust = clst;	/* Current cluster# */
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
1189:Middlewares/Third_Party/FatFs/src/ff.c **** 
1190:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1191:Middlewares/Third_Party/FatFs/src/ff.c **** }
1192:Middlewares/Third_Party/FatFs/src/ff.c **** 
1193:Middlewares/Third_Party/FatFs/src/ff.c **** 
1194:Middlewares/Third_Party/FatFs/src/ff.c **** 
1195:Middlewares/Third_Party/FatFs/src/ff.c **** 
1196:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1197:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Move directory table index next                  */
1198:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1199:Middlewares/Third_Party/FatFs/src/ff.c **** 
1200:Middlewares/Third_Party/FatFs/src/ff.c **** static
1201:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_next (	/* FR_OK:Succeeded, FR_NO_FILE:End of table, FR_DENIED:Could not stretch */
1202:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1203:Middlewares/Third_Party/FatFs/src/ff.c **** 	int stretch		/* 0: Do not stretch table, 1: Stretch table if needed */
1204:Middlewares/Third_Party/FatFs/src/ff.c **** )
1205:Middlewares/Third_Party/FatFs/src/ff.c **** {
1206:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
ARM GAS  /tmp/cckAXl85.s 			page 36


1207:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1208:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1209:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT c;
1210:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1211:Middlewares/Third_Party/FatFs/src/ff.c **** 
1212:Middlewares/Third_Party/FatFs/src/ff.c **** 
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index + 1;
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
1216:Middlewares/Third_Party/FatFs/src/ff.c **** 
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i % (SS(dp->fs) / SZ_DIRE))) {	/* Sector changed? */
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
1219:Middlewares/Third_Party/FatFs/src/ff.c **** 
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!dp->clust) {		/* Static table */
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
1223:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1224:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {					/* Dynamic table */
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (((i / (SS(dp->fs) / SZ_DIRE)) & (dp->fs->csize - 1)) == 0) {	/* Cluster changed? */
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1229:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
1230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT */
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
1236:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (sync_window(dp->fs)) return FR_DISK_ERR;/* Flush disk access window */
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
1244:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1245:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect -= c;						/* Rewind window offset */
1246:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1247:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!stretch) return FR_NO_FILE;			/* If do not stretch, report EOT (this is to suppress warni
1248:Middlewares/Third_Party/FatFs/src/ff.c **** 					return FR_NO_FILE;							/* Report EOT */
1249:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1250:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->clust = clst;				/* Initialize data for new cluster */
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
1253:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1254:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1255:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1256:Middlewares/Third_Party/FatFs/src/ff.c **** 
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->index = (WORD)i;	/* Current index */
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
1259:Middlewares/Third_Party/FatFs/src/ff.c **** 
1260:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
1261:Middlewares/Third_Party/FatFs/src/ff.c **** }
1262:Middlewares/Third_Party/FatFs/src/ff.c **** 
1263:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 37


1264:Middlewares/Third_Party/FatFs/src/ff.c **** 
1265:Middlewares/Third_Party/FatFs/src/ff.c **** 
1266:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1267:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Reserve directory entry                          */
1268:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1269:Middlewares/Third_Party/FatFs/src/ff.c **** 
1270:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1271:Middlewares/Third_Party/FatFs/src/ff.c **** static
1272:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_alloc (
1273:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,	/* Pointer to the directory object */
1274:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nent	/* Number of contiguous entries to allocate (1-21) */
1275:Middlewares/Third_Party/FatFs/src/ff.c **** )
1276:Middlewares/Third_Party/FatFs/src/ff.c **** {
1277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1278:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n;
1279:Middlewares/Third_Party/FatFs/src/ff.c **** 
1280:Middlewares/Third_Party/FatFs/src/ff.c **** 
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1283:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
1284:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
1289:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 				n = 0;					/* Not a blank entry. Restart to search */
1291:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 1);		/* Next entry with table stretch enabled */
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1294:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_NO_FILE) res = FR_DENIED;	/* No directory entry to allocate */
1296:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1297:Middlewares/Third_Party/FatFs/src/ff.c **** }
1298:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1299:Middlewares/Third_Party/FatFs/src/ff.c **** 
1300:Middlewares/Third_Party/FatFs/src/ff.c **** 
1301:Middlewares/Third_Party/FatFs/src/ff.c **** 
1302:Middlewares/Third_Party/FatFs/src/ff.c **** 
1303:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1304:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Load/Store start cluster number                  */
1305:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1306:Middlewares/Third_Party/FatFs/src/ff.c **** 
1307:Middlewares/Third_Party/FatFs/src/ff.c **** static
1308:Middlewares/Third_Party/FatFs/src/ff.c **** DWORD ld_clust (
1309:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* Pointer to the fs object */
1310:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir	/* Pointer to the directory entry */
1311:Middlewares/Third_Party/FatFs/src/ff.c **** )
1312:Middlewares/Third_Party/FatFs/src/ff.c **** {
 769              		.loc 1 1312 0
 770              		.cfi_startproc
 771              		@ args = 0, pretend = 0, frame = 0
 772              		@ frame_needed = 0, uses_anonymous_args = 0
 773              		@ link register save eliminated.
 774              	.LVL90:
1313:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl;
1314:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 38


1315:Middlewares/Third_Party/FatFs/src/ff.c **** 	cl = LD_WORD(dir + DIR_FstClusLO);
 775              		.loc 1 1315 0
 776 0000 CA7E     		ldrb	r2, [r1, #27]	@ zero_extendqisi2
 777 0002 8B7E     		ldrb	r3, [r1, #26]	@ zero_extendqisi2
 778 0004 43EA0223 		orr	r3, r3, r2, lsl #8
 779              	.LVL91:
1316:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type == FS_FAT32)
 780              		.loc 1 1316 0
 781 0008 90F80022 		ldrb	r2, [r0, #512]	@ zero_extendqisi2
 782 000c 032A     		cmp	r2, #3
 783 000e 01D0     		beq	.L89
 784              	.LVL92:
 785              	.L87:
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)LD_WORD(dir + DIR_FstClusHI) << 16;
1318:Middlewares/Third_Party/FatFs/src/ff.c **** 
1319:Middlewares/Third_Party/FatFs/src/ff.c **** 	return cl;
1320:Middlewares/Third_Party/FatFs/src/ff.c **** }
 786              		.loc 1 1320 0
 787 0010 1846     		mov	r0, r3
 788 0012 7047     		bx	lr
 789              	.LVL93:
 790              	.L89:
1317:Middlewares/Third_Party/FatFs/src/ff.c **** 		cl |= (DWORD)LD_WORD(dir + DIR_FstClusHI) << 16;
 791              		.loc 1 1317 0
 792 0014 487D     		ldrb	r0, [r1, #21]	@ zero_extendqisi2
 793              	.LVL94:
 794 0016 0A7D     		ldrb	r2, [r1, #20]	@ zero_extendqisi2
 795 0018 42EA0022 		orr	r2, r2, r0, lsl #8
 796 001c 43EA0243 		orr	r3, r3, r2, lsl #16
 797              	.LVL95:
1319:Middlewares/Third_Party/FatFs/src/ff.c **** }
 798              		.loc 1 1319 0
 799 0020 F6E7     		b	.L87
 800              		.cfi_endproc
 801              	.LFE92:
 803              		.section	.text.st_clust,"ax",%progbits
 804              		.align	1
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu softvfp
 810              	st_clust:
 811              	.LFB93:
1321:Middlewares/Third_Party/FatFs/src/ff.c **** 
1322:Middlewares/Third_Party/FatFs/src/ff.c **** 
1323:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1324:Middlewares/Third_Party/FatFs/src/ff.c **** static
1325:Middlewares/Third_Party/FatFs/src/ff.c **** void st_clust (
1326:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,	/* Pointer to the directory entry */
1327:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl	/* Value to be set */
1328:Middlewares/Third_Party/FatFs/src/ff.c **** )
1329:Middlewares/Third_Party/FatFs/src/ff.c **** {
 812              		.loc 1 1329 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 0
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816              		@ link register save eliminated.
ARM GAS  /tmp/cckAXl85.s 			page 39


 817              	.LVL96:
1330:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusLO, cl);
 818              		.loc 1 1330 0
 819 0000 8176     		strb	r1, [r0, #26]
 820 0002 C1F30723 		ubfx	r3, r1, #8, #8
 821 0006 C376     		strb	r3, [r0, #27]
1331:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + DIR_FstClusHI, cl >> 16);
 822              		.loc 1 1331 0
 823 0008 090C     		lsrs	r1, r1, #16
 824              	.LVL97:
 825 000a 0175     		strb	r1, [r0, #20]
 826 000c 090A     		lsrs	r1, r1, #8
 827 000e 4175     		strb	r1, [r0, #21]
 828 0010 7047     		bx	lr
 829              		.cfi_endproc
 830              	.LFE93:
 832              		.section	.text.get_fileinfo,"ax",%progbits
 833              		.align	1
 834              		.syntax unified
 835              		.thumb
 836              		.thumb_func
 837              		.fpu softvfp
 839              	get_fileinfo:
 840              	.LFB98:
1332:Middlewares/Third_Party/FatFs/src/ff.c **** }
1333:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1334:Middlewares/Third_Party/FatFs/src/ff.c **** 
1335:Middlewares/Third_Party/FatFs/src/ff.c **** 
1336:Middlewares/Third_Party/FatFs/src/ff.c **** 
1337:Middlewares/Third_Party/FatFs/src/ff.c **** 
1338:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1339:Middlewares/Third_Party/FatFs/src/ff.c **** /* LFN handling - Test/Pick/Fit an LFN segment from/to directory entry   */
1340:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1341:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1342:Middlewares/Third_Party/FatFs/src/ff.c **** static
1343:Middlewares/Third_Party/FatFs/src/ff.c **** const BYTE LfnOfs[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};	/* Offset of LFN characters in the direc
1344:Middlewares/Third_Party/FatFs/src/ff.c **** 
1345:Middlewares/Third_Party/FatFs/src/ff.c **** 
1346:Middlewares/Third_Party/FatFs/src/ff.c **** static
1347:Middlewares/Third_Party/FatFs/src/ff.c **** int cmp_lfn (			/* 1:Matched, 0:Not matched */
1348:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the LFN to be compared */
1349:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry containing a part of LFN */
1350:Middlewares/Third_Party/FatFs/src/ff.c **** )
1351:Middlewares/Third_Party/FatFs/src/ff.c **** {
1352:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1353:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1354:Middlewares/Third_Party/FatFs/src/ff.c **** 
1355:Middlewares/Third_Party/FatFs/src/ff.c **** 
1356:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & ~LLEF) - 1) * 13;	/* Get offset in the LFN buffer */
1357:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
1358:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1359:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);	/* Pick an LFN character from the entry */
1360:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1361:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = ff_wtoupper(uc);		/* Convert it to upper case */
1362:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN || wc != ff_wtoupper(lfnbuf[i++]))	/* Compare it */
1363:Middlewares/Third_Party/FatFs/src/ff.c **** 				return 0;				/* Not matched */
1364:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
ARM GAS  /tmp/cckAXl85.s 			page 40


1365:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;	/* Check filler */
1366:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1367:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);				/* Repeat until all characters in the entry are checked */
1368:Middlewares/Third_Party/FatFs/src/ff.c **** 
1369:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((dir[LDIR_Ord] & LLEF) && wc && lfnbuf[i])	/* Last segment matched but different length */
1370:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
1371:Middlewares/Third_Party/FatFs/src/ff.c **** 
1372:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;						/* The part of LFN matched */
1373:Middlewares/Third_Party/FatFs/src/ff.c **** }
1374:Middlewares/Third_Party/FatFs/src/ff.c **** 
1375:Middlewares/Third_Party/FatFs/src/ff.c **** 
1376:Middlewares/Third_Party/FatFs/src/ff.c **** 
1377:Middlewares/Third_Party/FatFs/src/ff.c **** static
1378:Middlewares/Third_Party/FatFs/src/ff.c **** int pick_lfn (			/* 1:Succeeded, 0:Buffer overflow */
1379:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR* lfnbuf,		/* Pointer to the Unicode-LFN buffer */
1380:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir			/* Pointer to the directory entry */
1381:Middlewares/Third_Party/FatFs/src/ff.c **** )
1382:Middlewares/Third_Party/FatFs/src/ff.c **** {
1383:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1384:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc, uc;
1385:Middlewares/Third_Party/FatFs/src/ff.c **** 
1386:Middlewares/Third_Party/FatFs/src/ff.c **** 
1387:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = ((dir[LDIR_Ord] & 0x3F) - 1) * 13;	/* Offset in the LFN buffer */
1388:Middlewares/Third_Party/FatFs/src/ff.c **** 
1389:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = 0; wc = 1;
1390:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1391:Middlewares/Third_Party/FatFs/src/ff.c **** 		uc = LD_WORD(dir + LfnOfs[s]);		/* Pick an LFN character from the entry */
1392:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc) {	/* Last character has not been processed */
1393:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= _MAX_LFN) return 0;	/* Buffer overflow? */
1394:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfnbuf[i++] = wc = uc;			/* Store it */
1395:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1396:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (uc != 0xFFFF) return 0;		/* Check filler */
1397:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1398:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);						/* Read all character in the entry */
1399:Middlewares/Third_Party/FatFs/src/ff.c **** 
1400:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dir[LDIR_Ord] & LLEF) {				/* Put terminator if it is the last LFN part */
1401:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= _MAX_LFN) return 0;		/* Buffer overflow? */
1402:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfnbuf[i] = 0;
1403:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1404:Middlewares/Third_Party/FatFs/src/ff.c **** 
1405:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
1406:Middlewares/Third_Party/FatFs/src/ff.c **** }
1407:Middlewares/Third_Party/FatFs/src/ff.c **** 
1408:Middlewares/Third_Party/FatFs/src/ff.c **** 
1409:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1410:Middlewares/Third_Party/FatFs/src/ff.c **** static
1411:Middlewares/Third_Party/FatFs/src/ff.c **** void fit_lfn (
1412:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfnbuf,	/* Pointer to the LFN buffer */
1413:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dir,				/* Pointer to the directory entry */
1414:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord,				/* LFN order (1-20) */
1415:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum				/* SFN sum */
1416:Middlewares/Third_Party/FatFs/src/ff.c **** )
1417:Middlewares/Third_Party/FatFs/src/ff.c **** {
1418:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, s;
1419:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1420:Middlewares/Third_Party/FatFs/src/ff.c **** 
1421:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 41


1422:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Chksum] = sum;			/* Set check sum */
1423:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Attr] = AM_LFN;		/* Set attribute. LFN entry */
1424:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Type] = 0;
1425:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(dir + LDIR_FstClusLO, 0);
1426:Middlewares/Third_Party/FatFs/src/ff.c **** 
1427:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (ord - 1) * 13;				/* Get offset in the LFN buffer */
1428:Middlewares/Third_Party/FatFs/src/ff.c **** 	s = wc = 0;
1429:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1430:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wc != 0xFFFF) wc = lfnbuf[i++];	/* Get an effective character */
1431:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(dir+LfnOfs[s], wc);	/* Put it */
1432:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!wc) wc = 0xFFFF;		/* Padding characters following last character */
1433:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (++s < 13);
1434:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (wc == 0xFFFF || !lfnbuf[i]) ord |= LLEF;	/* Bottom LFN part is the start of LFN sequence */
1435:Middlewares/Third_Party/FatFs/src/ff.c **** 	dir[LDIR_Ord] = ord;			/* Set the LFN order */
1436:Middlewares/Third_Party/FatFs/src/ff.c **** }
1437:Middlewares/Third_Party/FatFs/src/ff.c **** 
1438:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1439:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1440:Middlewares/Third_Party/FatFs/src/ff.c **** 
1441:Middlewares/Third_Party/FatFs/src/ff.c **** 
1442:Middlewares/Third_Party/FatFs/src/ff.c **** 
1443:Middlewares/Third_Party/FatFs/src/ff.c **** 
1444:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1445:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create numbered name                                                  */
1446:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1447:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1448:Middlewares/Third_Party/FatFs/src/ff.c **** static
1449:Middlewares/Third_Party/FatFs/src/ff.c **** void gen_numname (
1450:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE* dst,			/* Pointer to the buffer to store numbered SFN */
1451:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* src,	/* Pointer to SFN */
1452:Middlewares/Third_Party/FatFs/src/ff.c **** 	const WCHAR* lfn,	/* Pointer to LFN */
1453:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT seq			/* Sequence number */
1454:Middlewares/Third_Party/FatFs/src/ff.c **** )
1455:Middlewares/Third_Party/FatFs/src/ff.c **** {
1456:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ns[8], c;
1457:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
1458:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR wc;
1459:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sr;
1460:Middlewares/Third_Party/FatFs/src/ff.c **** 
1461:Middlewares/Third_Party/FatFs/src/ff.c **** 
1462:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(dst, src, 11);
1463:Middlewares/Third_Party/FatFs/src/ff.c **** 
1464:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (seq > 5) {	/* On many collisions, generate a hash number instead of sequential number */
1465:Middlewares/Third_Party/FatFs/src/ff.c **** 		sr = seq;
1466:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (*lfn) {	/* Create a CRC */
1467:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = *lfn++;
1468:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (i = 0; i < 16; i++) {
1469:Middlewares/Third_Party/FatFs/src/ff.c **** 				sr = (sr << 1) + (wc & 1);
1470:Middlewares/Third_Party/FatFs/src/ff.c **** 				wc >>= 1;
1471:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sr & 0x10000) sr ^= 0x11021;
1472:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1473:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1474:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq = (UINT)sr;
1475:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1476:Middlewares/Third_Party/FatFs/src/ff.c **** 
1477:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* itoa (hexdecimal) */
1478:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = 7;
ARM GAS  /tmp/cckAXl85.s 			page 42


1479:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1480:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (seq % 16) + '0';
1481:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c > '9') c += 7;
1482:Middlewares/Third_Party/FatFs/src/ff.c **** 		ns[i--] = c;
1483:Middlewares/Third_Party/FatFs/src/ff.c **** 		seq /= 16;
1484:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (seq);
1485:Middlewares/Third_Party/FatFs/src/ff.c **** 	ns[i] = '~';
1486:Middlewares/Third_Party/FatFs/src/ff.c **** 
1487:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Append the number */
1488:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (j = 0; j < i && dst[j] != ' '; j++) {
1489:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(dst[j])) {
1490:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (j == i - 1) break;
1491:Middlewares/Third_Party/FatFs/src/ff.c **** 			j++;
1492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1493:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1494:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1495:Middlewares/Third_Party/FatFs/src/ff.c **** 		dst[j++] = (i < 8) ? ns[i++] : ' ';
1496:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (j < 8);
1497:Middlewares/Third_Party/FatFs/src/ff.c **** }
1498:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1499:Middlewares/Third_Party/FatFs/src/ff.c **** 
1500:Middlewares/Third_Party/FatFs/src/ff.c **** 
1501:Middlewares/Third_Party/FatFs/src/ff.c **** 
1502:Middlewares/Third_Party/FatFs/src/ff.c **** 
1503:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1504:Middlewares/Third_Party/FatFs/src/ff.c **** /* Calculate sum of an SFN                                               */
1505:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1506:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1507:Middlewares/Third_Party/FatFs/src/ff.c **** static
1508:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE sum_sfn (
1509:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE* dir		/* Pointer to the SFN entry */
1510:Middlewares/Third_Party/FatFs/src/ff.c **** )
1511:Middlewares/Third_Party/FatFs/src/ff.c **** {
1512:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sum = 0;
1513:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n = 11;
1514:Middlewares/Third_Party/FatFs/src/ff.c **** 
1515:Middlewares/Third_Party/FatFs/src/ff.c **** 	do sum = (sum >> 1) + (sum << 7) + *dir++; while (--n);
1516:Middlewares/Third_Party/FatFs/src/ff.c **** 	return sum;
1517:Middlewares/Third_Party/FatFs/src/ff.c **** }
1518:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1519:Middlewares/Third_Party/FatFs/src/ff.c **** 
1520:Middlewares/Third_Party/FatFs/src/ff.c **** 
1521:Middlewares/Third_Party/FatFs/src/ff.c **** 
1522:Middlewares/Third_Party/FatFs/src/ff.c **** 
1523:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1524:Middlewares/Third_Party/FatFs/src/ff.c **** /* Directory handling - Find an object in the directory                  */
1525:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1526:Middlewares/Third_Party/FatFs/src/ff.c **** 
1527:Middlewares/Third_Party/FatFs/src/ff.c **** static
1528:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_find (
1529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp			/* Pointer to the directory object linked to the file name */
1530:Middlewares/Third_Party/FatFs/src/ff.c **** )
1531:Middlewares/Third_Party/FatFs/src/ff.c **** {
1532:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1533:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE c, *dir;
1534:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1535:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, ord, sum;
ARM GAS  /tmp/cckAXl85.s 			page 43


1536:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1537:Middlewares/Third_Party/FatFs/src/ff.c **** 
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, 0);			/* Rewind directory object */
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
1540:Middlewares/Third_Party/FatFs/src/ff.c **** 
1541:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1542:Middlewares/Third_Party/FatFs/src/ff.c **** 	ord = sum = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1543:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1544:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1549:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1550:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1551:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1552:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || ((a & AM_VOL) && a != AM_LFN)) {	/* An entry without valid data */
1553:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1554:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1555:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1556:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->lfn) {
1557:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c & LLEF) {		/* Is it start of LFN sequence? */
1558:Middlewares/Third_Party/FatFs/src/ff.c **** 						sum = dir[LDIR_Chksum];
1559:Middlewares/Third_Party/FatFs/src/ff.c **** 						c &= ~LLEF; ord = c;	/* LFN start order */
1560:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lfn_idx = dp->index;	/* Start index of LFN */
1561:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
1562:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Check validity of the LFN entry and compare it with given name */
1563:Middlewares/Third_Party/FatFs/src/ff.c **** 					ord = (c == ord && sum == dir[LDIR_Chksum] && cmp_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1564:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1565:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1566:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!ord && sum == sum_sfn(dir)) break;	/* LFN matched? */
1567:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!(dp->fn[NSFLAG] & NS_LOSS) && !mem_cmp(dir, dp->fn, 11)) break;	/* SFN matched? */
1568:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = 0xFF; dp->lfn_idx = 0xFFFF;	/* Reset LFN sequence */
1569:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1570:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1571:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(dir[DIR_Attr] & AM_VOL) && !mem_cmp(dir, dp->fn, 11)) /* Is it a valid entry? */
1573:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1574:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);		/* Next entry */
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
1577:Middlewares/Third_Party/FatFs/src/ff.c **** 
1578:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1579:Middlewares/Third_Party/FatFs/src/ff.c **** }
1580:Middlewares/Third_Party/FatFs/src/ff.c **** 
1581:Middlewares/Third_Party/FatFs/src/ff.c **** 
1582:Middlewares/Third_Party/FatFs/src/ff.c **** 
1583:Middlewares/Third_Party/FatFs/src/ff.c **** 
1584:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1585:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read an object from the directory                                     */
1586:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1587:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2
1588:Middlewares/Third_Party/FatFs/src/ff.c **** static
1589:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_read (
1590:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the directory object */
1591:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol			/* Filtered by 0:file/directory or 1:volume label */
1592:Middlewares/Third_Party/FatFs/src/ff.c **** )
ARM GAS  /tmp/cckAXl85.s 			page 44


1593:Middlewares/Third_Party/FatFs/src/ff.c **** {
1594:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1595:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE a, c, *dir;
1596:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1597:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE ord = 0xFF, sum = 0xFF;
1598:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1599:Middlewares/Third_Party/FatFs/src/ff.c **** 
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = FR_NO_FILE;
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
1607:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
1608:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == DDEM || (!_FS_RPATH && c == '.') || (int)((a & ~AM_ARC) == AM_VOL) != vol) {	/* An entry
1610:Middlewares/Third_Party/FatFs/src/ff.c **** 			ord = 0xFF;
1611:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
1612:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (a == AM_LFN) {			/* An LFN entry is found */
1613:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c & LLEF) {			/* Is it start of LFN sequence? */
1614:Middlewares/Third_Party/FatFs/src/ff.c **** 					sum = dir[LDIR_Chksum];
1615:Middlewares/Third_Party/FatFs/src/ff.c **** 					c &= ~LLEF; ord = c;
1616:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = dp->index;
1617:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
1618:Middlewares/Third_Party/FatFs/src/ff.c **** 				/* Check LFN validity and capture it */
1619:Middlewares/Third_Party/FatFs/src/ff.c **** 				ord = (c == ord && sum == dir[LDIR_Chksum] && pick_lfn(dp->lfn, dir)) ? ord - 1 : 0xFF;
1620:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* An SFN entry is found */
1621:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ord || sum != sum_sfn(dir))	/* Is there a valid LFN? */
1622:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->lfn_idx = 0xFFFF;		/* It has no LFN. */
1623:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
1624:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1625:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1626:Middlewares/Third_Party/FatFs/src/ff.c **** #else		/* Non LFN configuration */
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != DDEM && (_FS_RPATH || c != '.') && a != AM_LFN && (int)((a & ~AM_ARC) == AM_VOL) == vol)
1628:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
1629:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_next(dp, 0);				/* Next entry */
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
1632:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1633:Middlewares/Third_Party/FatFs/src/ff.c **** 
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->sect = 0;
1635:Middlewares/Third_Party/FatFs/src/ff.c **** 
1636:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1637:Middlewares/Third_Party/FatFs/src/ff.c **** }
1638:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
1639:Middlewares/Third_Party/FatFs/src/ff.c **** 
1640:Middlewares/Third_Party/FatFs/src/ff.c **** 
1641:Middlewares/Third_Party/FatFs/src/ff.c **** 
1642:Middlewares/Third_Party/FatFs/src/ff.c **** 
1643:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1644:Middlewares/Third_Party/FatFs/src/ff.c **** /* Register an object to the directory                                   */
1645:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1646:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
1647:Middlewares/Third_Party/FatFs/src/ff.c **** static
1648:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_register (	/* FR_OK:Successful, FR_DENIED:No free entry or too many SFN collision, FR_D
1649:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Target directory with object name to be created */
ARM GAS  /tmp/cckAXl85.s 			page 45


1650:Middlewares/Third_Party/FatFs/src/ff.c **** )
1651:Middlewares/Third_Party/FatFs/src/ff.c **** {
1652:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1653:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1654:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT n, nent;
1655:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sn[12], *fn, sum;
1656:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR *lfn;
1657:Middlewares/Third_Party/FatFs/src/ff.c **** 
1658:Middlewares/Third_Party/FatFs/src/ff.c **** 
1659:Middlewares/Third_Party/FatFs/src/ff.c **** 	fn = dp->fn; lfn = dp->lfn;
1660:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(sn, fn, 12);
1661:Middlewares/Third_Party/FatFs/src/ff.c **** 
1662:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_FS_RPATH && (sn[NSFLAG] & NS_DOT))		/* Cannot create dot entry */
1663:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_NAME;
1664:Middlewares/Third_Party/FatFs/src/ff.c **** 
1665:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LOSS) {			/* When LFN is out of 8.3 format, generate a numbered name */
1666:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = 0; dp->lfn = 0;			/* Find only SFN */
1667:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < 100; n++) {
1668:Middlewares/Third_Party/FatFs/src/ff.c **** 			gen_numname(fn, sn, lfn, n);	/* Generate a numbered name */
1669:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Check if the name collides with existing SFN */
1670:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1671:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1672:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (n == 100) return FR_DENIED;		/* Abort if too many collisions */
1673:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_NO_FILE) return res;	/* Abort if the result is other than 'not collided' */
1674:Middlewares/Third_Party/FatFs/src/ff.c **** 		fn[NSFLAG] = sn[NSFLAG]; dp->lfn = lfn;
1675:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1676:Middlewares/Third_Party/FatFs/src/ff.c **** 
1677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sn[NSFLAG] & NS_LFN) {			/* When LFN is to be created, allocate entries for an SFN + LFNs. */
1678:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 0; lfn[n]; n++) ;
1679:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = (n + 25) / 13;
1680:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {						/* Otherwise allocate an entry for an SFN  */
1681:Middlewares/Third_Party/FatFs/src/ff.c **** 		nent = 1;
1682:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1683:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, nent);		/* Allocate entries */
1684:Middlewares/Third_Party/FatFs/src/ff.c **** 
1685:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && --nent) {	/* Set LFN entry if needed */
1686:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, dp->index - nent);
1687:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1688:Middlewares/Third_Party/FatFs/src/ff.c **** 			sum = sum_sfn(dp->fn);	/* Sum value of the SFN tied to the LFN */
1689:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {					/* Store LFN entries in bottom first */
1690:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = move_window(dp->fs, dp->sect);
1691:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
1692:Middlewares/Third_Party/FatFs/src/ff.c **** 				fit_lfn(dp->lfn, dp->dir, (BYTE)nent, sum);
1693:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->fs->wflag = 1;
1694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);	/* Next entry */
1695:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK && --nent);
1696:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1697:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1698:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non LFN configuration */
1699:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_alloc(dp, 1);		/* Allocate an entry for SFN */
1700:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1701:Middlewares/Third_Party/FatFs/src/ff.c **** 
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {				/* Set SFN entry */
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
1706:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
ARM GAS  /tmp/cckAXl85.s 			page 46


1707:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1708:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->dir[DIR_NTres] = dp->fn[NSFLAG] & (NS_BODY | NS_EXT);	/* Put NT flag */
1709:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1711:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1712:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1713:Middlewares/Third_Party/FatFs/src/ff.c **** 
1714:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1715:Middlewares/Third_Party/FatFs/src/ff.c **** }
1716:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
1717:Middlewares/Third_Party/FatFs/src/ff.c **** 
1718:Middlewares/Third_Party/FatFs/src/ff.c **** 
1719:Middlewares/Third_Party/FatFs/src/ff.c **** 
1720:Middlewares/Third_Party/FatFs/src/ff.c **** 
1721:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1722:Middlewares/Third_Party/FatFs/src/ff.c **** /* Remove an object from the directory                                   */
1723:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && !_FS_MINIMIZE
1725:Middlewares/Third_Party/FatFs/src/ff.c **** static
1726:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT dir_remove (	/* FR_OK: Successful, FR_DISK_ERR: A disk error */
1727:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp				/* Directory object pointing the entry to be removed */
1728:Middlewares/Third_Party/FatFs/src/ff.c **** )
1729:Middlewares/Third_Party/FatFs/src/ff.c **** {
1730:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
1731:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1732:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1733:Middlewares/Third_Party/FatFs/src/ff.c **** 
1734:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = dp->index;	/* SFN index */
1735:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, (dp->lfn_idx == 0xFFFF) ? i : dp->lfn_idx);	/* Goto the SFN or top of the LFN en
1736:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1737:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
1738:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(dp->fs, dp->sect);
1739:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
1740:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1741:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1742:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1743:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->index >= i) break;	/* When reached SFN, all entries of the object has been deleted. */
1744:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_next(dp, 0);		/* Next entry */
1745:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
1746:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_INT_ERR;
1747:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1748:Middlewares/Third_Party/FatFs/src/ff.c **** 
1749:Middlewares/Third_Party/FatFs/src/ff.c **** #else			/* Non LFN configuration */
1750:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(dp, dp->index);
1751:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
1756:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
1757:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1758:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1759:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1760:Middlewares/Third_Party/FatFs/src/ff.c **** 
1761:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
1762:Middlewares/Third_Party/FatFs/src/ff.c **** }
1763:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
ARM GAS  /tmp/cckAXl85.s 			page 47


1764:Middlewares/Third_Party/FatFs/src/ff.c **** 
1765:Middlewares/Third_Party/FatFs/src/ff.c **** 
1766:Middlewares/Third_Party/FatFs/src/ff.c **** 
1767:Middlewares/Third_Party/FatFs/src/ff.c **** 
1768:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1769:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get file information from directory entry                             */
1770:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1771:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1 || _FS_RPATH >= 2
1772:Middlewares/Third_Party/FatFs/src/ff.c **** static
1773:Middlewares/Third_Party/FatFs/src/ff.c **** void get_fileinfo (		/* No return code */
1774:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1775:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	 	/* Pointer to the file information to be filled */
1776:Middlewares/Third_Party/FatFs/src/ff.c **** )
1777:Middlewares/Third_Party/FatFs/src/ff.c **** {
 841              		.loc 1 1777 0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 846              	.LVL98:
 847 0000 30B4     		push	{r4, r5}
 848              	.LCFI12:
 849              		.cfi_def_cfa_offset 8
 850              		.cfi_offset 4, -8
 851              		.cfi_offset 5, -4
1778:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
1779:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *p, c;
1780:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
1781:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1782:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1783:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1784:Middlewares/Third_Party/FatFs/src/ff.c **** 
1785:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = fno->fname;
 852              		.loc 1 1785 0
 853 0002 01F10904 		add	r4, r1, #9
 854              	.LVL99:
1786:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->sect) {		/* Get SFN */
 855              		.loc 1 1786 0
 856 0006 0369     		ldr	r3, [r0, #16]
 857 0008 63B3     		cbz	r3, .L92
1787:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;
 858              		.loc 1 1787 0
 859 000a 4069     		ldr	r0, [r0, #20]
 860              	.LVL100:
1788:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 861              		.loc 1 1788 0
 862 000c 0023     		movs	r3, #0
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (i < 11) {		/* Copy name body and extension */
 863              		.loc 1 1789 0
 864 000e 04E0     		b	.L93
 865              	.LVL101:
 866              	.L95:
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == ' ') continue;				/* Skip padding spaces */
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
1793:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
 867              		.loc 1 1793 0
ARM GAS  /tmp/cckAXl85.s 			page 48


 868 0010 092A     		cmp	r2, #9
 869 0012 0CD0     		beq	.L100
 870              	.L96:
 871              	.LVL102:
1794:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1795:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c) && (dir[DIR_NTres] & (i >= 9 ? NS_EXT : NS_BODY)))
1796:Middlewares/Third_Party/FatFs/src/ff.c **** 				c += 0x20;			/* To lower */
1797:Middlewares/Third_Party/FatFs/src/ff.c **** #if _LFN_UNICODE
1798:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(c) && i != 8 && i != 11 && IsDBCS2(dir[i]))
1799:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = c << 8 | dir[i++];
1800:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ff_convert(c, 1);	/* OEM -> Unicode */
1801:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!c) c = '?';
1802:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1803:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1804:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p++ = c;
 872              		.loc 1 1804 0
 873 0014 2370     		strb	r3, [r4]
 874 0016 0134     		adds	r4, r4, #1
 875              	.LVL103:
 876              	.L94:
 877 0018 1346     		mov	r3, r2
 878              	.LVL104:
 879              	.L93:
1789:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
 880              		.loc 1 1789 0
 881 001a 0A2B     		cmp	r3, #10
 882 001c 0BD8     		bhi	.L101
1790:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (TCHAR)dir[i++];
 883              		.loc 1 1790 0
 884 001e 5A1C     		adds	r2, r3, #1
 885              	.LVL105:
 886 0020 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 887              	.LVL106:
1791:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == RDDEM) c = (TCHAR)DDEM;	/* Restore replaced DDEM character */
 888              		.loc 1 1791 0
 889 0022 202B     		cmp	r3, #32
 890 0024 F8D0     		beq	.L94
1792:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == 9) *p++ = '.';				/* Insert a . if extension is exist */
 891              		.loc 1 1792 0
 892 0026 052B     		cmp	r3, #5
 893 0028 F2D1     		bne	.L95
 894 002a E523     		movs	r3, #229
 895              	.LVL107:
 896 002c F0E7     		b	.L95
 897              	.LVL108:
 898              	.L100:
1793:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 899              		.loc 1 1793 0 discriminator 1
 900 002e 2E25     		movs	r5, #46
 901 0030 2570     		strb	r5, [r4]
 902 0032 0134     		adds	r4, r4, #1
 903              	.LVL109:
 904 0034 EEE7     		b	.L96
 905              	.LVL110:
 906              	.L101:
1805:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1806:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fattrib = dir[DIR_Attr];				/* Attribute */
ARM GAS  /tmp/cckAXl85.s 			page 49


 907              		.loc 1 1806 0
 908 0036 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 909              	.LVL111:
 910 0038 0B72     		strb	r3, [r1, #8]
1807:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fsize = LD_DWORD(dir + DIR_FileSize);	/* Size */
 911              		.loc 1 1807 0
 912 003a C27F     		ldrb	r2, [r0, #31]	@ zero_extendqisi2
 913 003c 837F     		ldrb	r3, [r0, #30]	@ zero_extendqisi2
 914 003e 1B04     		lsls	r3, r3, #16
 915 0040 43EA0263 		orr	r3, r3, r2, lsl #24
 916 0044 427F     		ldrb	r2, [r0, #29]	@ zero_extendqisi2
 917 0046 43EA0223 		orr	r3, r3, r2, lsl #8
 918 004a 027F     		ldrb	r2, [r0, #28]	@ zero_extendqisi2
 919 004c 1343     		orrs	r3, r3, r2
 920 004e 0B60     		str	r3, [r1]
1808:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->fdate = LD_WORD(dir + DIR_WrtDate);	/* Date */
 921              		.loc 1 1808 0
 922 0050 427E     		ldrb	r2, [r0, #25]	@ zero_extendqisi2
 923 0052 037E     		ldrb	r3, [r0, #24]	@ zero_extendqisi2
 924 0054 43EA0223 		orr	r3, r3, r2, lsl #8
 925 0058 8B80     		strh	r3, [r1, #4]	@ movhi
1809:Middlewares/Third_Party/FatFs/src/ff.c **** 		fno->ftime = LD_WORD(dir + DIR_WrtTime);	/* Time */
 926              		.loc 1 1809 0
 927 005a C27D     		ldrb	r2, [r0, #23]	@ zero_extendqisi2
 928 005c 837D     		ldrb	r3, [r0, #22]	@ zero_extendqisi2
 929 005e 43EA0223 		orr	r3, r3, r2, lsl #8
 930 0062 CB80     		strh	r3, [r1, #6]	@ movhi
 931              	.LVL112:
 932              	.L92:
1810:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1811:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;		/* Terminate SFN string by a \0 */
 933              		.loc 1 1811 0
 934 0064 0023     		movs	r3, #0
 935 0066 2370     		strb	r3, [r4]
1812:Middlewares/Third_Party/FatFs/src/ff.c **** 
1813:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
1814:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fno->lfname) {
1815:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0; p = fno->lfname;
1816:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->sect && fno->lfsize && dp->lfn_idx != 0xFFFF) {	/* Get LFN if available */
1817:Middlewares/Third_Party/FatFs/src/ff.c **** 			lfn = dp->lfn;
1818:Middlewares/Third_Party/FatFs/src/ff.c **** 			while ((w = *lfn++) != 0) {		/* Get an LFN character */
1819:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1820:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = ff_convert(w, 0);		/* Unicode -> OEM */
1821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!w) { i = 0; break; }	/* No LFN if it could not be converted */
1822:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (_DF1S && w >= 0x100)	/* Put 1st byte if it is a DBC (always false on SBCS cfg) */
1823:Middlewares/Third_Party/FatFs/src/ff.c **** 					p[i++] = (TCHAR)(w >> 8);
1824:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1825:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i >= fno->lfsize - 1) { i = 0; break; }	/* No LFN if buffer overflow */
1826:Middlewares/Third_Party/FatFs/src/ff.c **** 				p[i++] = (TCHAR)w;
1827:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1828:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1829:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[i] = 0;	/* Terminate LFN string by a \0 */
1830:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1831:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1832:Middlewares/Third_Party/FatFs/src/ff.c **** }
 936              		.loc 1 1832 0
 937 0068 30BC     		pop	{r4, r5}
ARM GAS  /tmp/cckAXl85.s 			page 50


 938              	.LCFI13:
 939              		.cfi_restore 5
 940              		.cfi_restore 4
 941              		.cfi_def_cfa_offset 0
 942              	.LVL113:
 943 006a 7047     		bx	lr
 944              		.cfi_endproc
 945              	.LFE98:
 947              		.section	.text.create_name,"ax",%progbits
 948              		.align	1
 949              		.syntax unified
 950              		.thumb
 951              		.thumb_func
 952              		.fpu softvfp
 954              	create_name:
 955              	.LFB99:
1833:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 || _FS_RPATH >= 2 */
1834:Middlewares/Third_Party/FatFs/src/ff.c **** 
1835:Middlewares/Third_Party/FatFs/src/ff.c **** 
1836:Middlewares/Third_Party/FatFs/src/ff.c **** 
1837:Middlewares/Third_Party/FatFs/src/ff.c **** 
1838:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1839:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pattern matching                                                      */
1840:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND && _FS_MINIMIZE <= 1
1842:Middlewares/Third_Party/FatFs/src/ff.c **** static
1843:Middlewares/Third_Party/FatFs/src/ff.c **** WCHAR get_achar (		/* Get a character and advances ptr 1 or 2 */
1844:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** ptr	/* Pointer to pointer to the SBCS/DBCS/Unicode string */
1845:Middlewares/Third_Party/FatFs/src/ff.c **** )
1846:Middlewares/Third_Party/FatFs/src/ff.c **** {
1847:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR chr;
1848:Middlewares/Third_Party/FatFs/src/ff.c **** 
1849:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1850:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = (BYTE)*(*ptr)++;					/* Get a byte */
1851:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsLower(chr)) chr -= 0x20;			/* To upper ASCII char */
1852:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (IsDBCS1(chr) && IsDBCS2(**ptr))		/* Get DBC 2nd byte if needed */
1853:Middlewares/Third_Party/FatFs/src/ff.c **** 		chr = chr << 8 | (BYTE)*(*ptr)++;
1854:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
1855:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (chr >= 0x80) chr = ExCvt[chr - 0x80];	/* To upper SBCS extended char */
1856:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1857:Middlewares/Third_Party/FatFs/src/ff.c **** #else
1858:Middlewares/Third_Party/FatFs/src/ff.c **** 	chr = ff_wtoupper(*(*ptr)++);			/* Get a word and to upper */
1859:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1860:Middlewares/Third_Party/FatFs/src/ff.c **** 	return chr;
1861:Middlewares/Third_Party/FatFs/src/ff.c **** }
1862:Middlewares/Third_Party/FatFs/src/ff.c **** 
1863:Middlewares/Third_Party/FatFs/src/ff.c **** 
1864:Middlewares/Third_Party/FatFs/src/ff.c **** static
1865:Middlewares/Third_Party/FatFs/src/ff.c **** int pattern_matching (	/* Return value: 0:mismatched, 1:matched */
1866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pat,	/* Matching pattern */
1867:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* nam,	/* String to be tested */
1868:Middlewares/Third_Party/FatFs/src/ff.c **** 	int skip,			/* Number of pre-skip chars (number of ?s) */
1869:Middlewares/Third_Party/FatFs/src/ff.c **** 	int inf				/* Infinite search (* specified) */
1870:Middlewares/Third_Party/FatFs/src/ff.c **** )
1871:Middlewares/Third_Party/FatFs/src/ff.c **** {
1872:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *pp, *np;
1873:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR pc, nc;
ARM GAS  /tmp/cckAXl85.s 			page 51


1874:Middlewares/Third_Party/FatFs/src/ff.c **** 	int nm, nx;
1875:Middlewares/Third_Party/FatFs/src/ff.c **** 
1876:Middlewares/Third_Party/FatFs/src/ff.c **** 
1877:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (skip--) {				/* Pre-skip name chars */
1878:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!get_achar(&nam)) return 0;	/* Branch mismatched if less name chars */
1879:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1880:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!*pat && inf) return 1;		/* (short circuit) */
1881:Middlewares/Third_Party/FatFs/src/ff.c **** 
1882:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
1883:Middlewares/Third_Party/FatFs/src/ff.c **** 		pp = pat; np = nam;			/* Top of pattern and name to match */
1884:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
1885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*pp == '?' || *pp == '*') {	/* Wildcard? */
1886:Middlewares/Third_Party/FatFs/src/ff.c **** 				nm = nx = 0;
1887:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {				/* Analyze the wildcard chars */
1888:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (*pp++ == '?') nm++; else nx = 1;
1889:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (*pp == '?' || *pp == '*');
1890:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (pattern_matching(pp, np, nm, nx)) return 1;	/* Test new branch (recurs upto number of wildc
1891:Middlewares/Third_Party/FatFs/src/ff.c **** 				nc = *np; break;	/* Branch mismatched */
1892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1893:Middlewares/Third_Party/FatFs/src/ff.c **** 			pc = get_achar(&pp);	/* Get a pattern char */
1894:Middlewares/Third_Party/FatFs/src/ff.c **** 			nc = get_achar(&np);	/* Get a name char */
1895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (pc != nc) break;	/* Branch mismatched? */
1896:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!pc) return 1;		/* Branch matched? (matched at end of both strings) */
1897:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1898:Middlewares/Third_Party/FatFs/src/ff.c **** 		get_achar(&nam);			/* nam++ */
1899:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (inf && nc);			/* Retry until end of name if infinite search is specified */
1900:Middlewares/Third_Party/FatFs/src/ff.c **** 
1901:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 0;
1902:Middlewares/Third_Party/FatFs/src/ff.c **** }
1903:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FIND && _FS_MINIMIZE <= 1 */
1904:Middlewares/Third_Party/FatFs/src/ff.c **** 
1905:Middlewares/Third_Party/FatFs/src/ff.c **** 
1906:Middlewares/Third_Party/FatFs/src/ff.c **** 
1907:Middlewares/Third_Party/FatFs/src/ff.c **** 
1908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Pick a segment and create the object name in directory form           */
1910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
1911:Middlewares/Third_Party/FatFs/src/ff.c **** 
1912:Middlewares/Third_Party/FatFs/src/ff.c **** static
1913:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT create_name (
1914:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the directory object */
1915:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the segment in the path string */
1916:Middlewares/Third_Party/FatFs/src/ff.c **** )
1917:Middlewares/Third_Party/FatFs/src/ff.c **** {
 956              		.loc 1 1917 0
 957              		.cfi_startproc
 958              		@ args = 0, pretend = 0, frame = 0
 959              		@ frame_needed = 0, uses_anonymous_args = 0
 960              	.LVL114:
 961 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 962              	.LCFI14:
 963              		.cfi_def_cfa_offset 40
 964              		.cfi_offset 3, -40
 965              		.cfi_offset 4, -36
 966              		.cfi_offset 5, -32
 967              		.cfi_offset 6, -28
 968              		.cfi_offset 7, -24
ARM GAS  /tmp/cckAXl85.s 			page 52


 969              		.cfi_offset 8, -20
 970              		.cfi_offset 9, -16
 971              		.cfi_offset 10, -12
 972              		.cfi_offset 11, -8
 973              		.cfi_offset 14, -4
 974 0004 8946     		mov	r9, r1
1918:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
1919:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, cf;
1920:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w, *lfn;
1921:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, ni, si, di;
1922:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *p;
1923:Middlewares/Third_Party/FatFs/src/ff.c **** 
1924:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create LFN in Unicode */
1925:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
1926:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn = dp->lfn;
1927:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = di = 0;
1928:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1929:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = p[si++];					/* Get a character */
1930:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < ' ' || w == '/' || w == '\\') break;	/* Break on end of segment */
1931:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (di >= _MAX_LFN)				/* Reject too long name */
1932:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1933:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_LFN_UNICODE
1934:Middlewares/Third_Party/FatFs/src/ff.c **** 		w &= 0xFF;
1935:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(w)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
1936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _DF1S
1937:Middlewares/Third_Party/FatFs/src/ff.c **** 			b = (BYTE)p[si++];			/* Get 2nd byte */
1938:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (w << 8) + b;			/* Create a DBC */
1939:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(b))
1940:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;	/* Reject invalid sequence */
1941:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1942:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1943:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = ff_convert(w, 1);			/* Convert ANSI/OEM to Unicode */
1944:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) return FR_INVALID_NAME;	/* Reject invalid code */
1945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1946:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w < 0x80 && chk_chr("\"*:<>\?|\x7F", w)) /* Reject illegal characters for LFN */
1947:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;
1948:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di++] = w;					/* Store the Unicode character */
1949:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1950:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
1951:Middlewares/Third_Party/FatFs/src/ff.c **** 	cf = (w < ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
1952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
1953:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((di == 1 && lfn[di - 1] == '.') || /* Is this a dot entry? */
1954:Middlewares/Third_Party/FatFs/src/ff.c **** 		(di == 2 && lfn[di - 1] == '.' && lfn[di - 2] == '.')) {
1955:Middlewares/Third_Party/FatFs/src/ff.c **** 		lfn[di] = 0;
1956:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 11; i++)
1957:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i] = (i < di) ? '.' : ' ';
1958:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i] = cf | NS_DOT;		/* This is a dot entry */
1959:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
1960:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1961:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
1962:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di) {						/* Strip trailing spaces and dots */
1963:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[di - 1];
1964:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w != ' ' && w != '.') break;
1965:Middlewares/Third_Party/FatFs/src/ff.c **** 		di--;
1966:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
1967:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!di) return FR_INVALID_NAME;	/* Reject nul string */
1968:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 53


1969:Middlewares/Third_Party/FatFs/src/ff.c **** 	lfn[di] = 0;						/* LFN is created */
1970:Middlewares/Third_Party/FatFs/src/ff.c **** 
1971:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create SFN in directory form */
1972:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(dp->fn, ' ', 11);
1973:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (si = 0; lfn[si] == ' ' || lfn[si] == '.'; si++) ;	/* Strip leading spaces and dots */
1974:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (si) cf |= NS_LOSS | NS_LFN;
1975:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (di && lfn[di - 1] != '.') di--;	/* Find extension (di<=si: no extension) */
1976:Middlewares/Third_Party/FatFs/src/ff.c **** 
1977:Middlewares/Third_Party/FatFs/src/ff.c **** 	b = i = 0; ni = 8;
1978:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
1979:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = lfn[si++];					/* Get an LFN character */
1980:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!w) break;					/* Break on end of the LFN */
1981:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w == ' ' || (w == '.' && si != di)) {	/* Remove spaces and dots */
1982:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LOSS | NS_LFN; continue;
1983:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1984:Middlewares/Third_Party/FatFs/src/ff.c **** 
1985:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i >= ni || si == di) {		/* Extension or end of SFN */
1986:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni == 11) {				/* Long extension */
1987:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; break;
1988:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
1989:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si != di) cf |= NS_LOSS | NS_LFN;	/* Out of 8.3 format */
1990:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (si > di) break;			/* No extension */
1991:Middlewares/Third_Party/FatFs/src/ff.c **** 			si = di; i = 8; ni = 11;	/* Enter extension section */
1992:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
1993:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
1994:Middlewares/Third_Party/FatFs/src/ff.c **** 
1995:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (w >= 0x80) {				/* Non ASCII character */
1996:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
1997:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(w, 0);		/* Unicode -> OEM code */
1998:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w) w = ExCvt[w - 0x80];	/* Convert extended character to upper (SBCS) */
1999:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2000:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(w), 0);	/* Upper converted Unicode -> OEM code */
2001:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2002:Middlewares/Third_Party/FatFs/src/ff.c **** 			cf |= NS_LFN;				/* Force create LFN entry */
2003:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2004:Middlewares/Third_Party/FatFs/src/ff.c **** 
2005:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_DF1S && w >= 0x100) {		/* DBC (always false at SBCS cfg) */
2006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= ni - 1) {
2007:Middlewares/Third_Party/FatFs/src/ff.c **** 				cf |= NS_LOSS | NS_LFN; i = ni; continue;
2008:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2009:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fn[i++] = (BYTE)(w >> 8);
2010:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("+,;=[]", w)) {	/* Replace illegal characters for SFN */
2012:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = '_'; cf |= NS_LOSS | NS_LFN;/* Lossy conversion */
2013:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2014:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsUpper(w)) {		/* ASCII large capital */
2015:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 2;
2016:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2017:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsLower(w)) {	/* ASCII small capital */
2018:Middlewares/Third_Party/FatFs/src/ff.c **** 						b |= 1; w -= 0x20;
2019:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2020:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2021:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2022:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2023:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fn[i++] = (BYTE)w;
2024:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2025:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 54


2026:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (dp->fn[0] == DDEM) dp->fn[0] = RDDEM;	/* If the first character collides with deleted mark, re
2027:Middlewares/Third_Party/FatFs/src/ff.c **** 
2028:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2029:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x0C || (b & 0x03) == 0x03)	/* Create LFN entry when there are composite capital
2030:Middlewares/Third_Party/FatFs/src/ff.c **** 		cf |= NS_LFN;
2031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(cf & NS_LFN)) {						/* When LFN is in 8.3 format without extended character, NT flags are c
2032:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x03) == 0x01) cf |= NS_EXT;	/* NT flag (Extension has only small capital) */
2033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((b & 0x0C) == 0x04) cf |= NS_BODY;	/* NT flag (Filename has only small capital) */
2034:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2035:Middlewares/Third_Party/FatFs/src/ff.c **** 
2036:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->fn[NSFLAG] = cf;	/* SFN is created */
2037:Middlewares/Third_Party/FatFs/src/ff.c **** 
2038:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2039:Middlewares/Third_Party/FatFs/src/ff.c **** 
2040:Middlewares/Third_Party/FatFs/src/ff.c **** 
2041:Middlewares/Third_Party/FatFs/src/ff.c **** #else	/* Non-LFN configuration */
2042:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE b, c, d, *sfn;
2043:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT ni, si, i;
2044:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *p;
2045:Middlewares/Third_Party/FatFs/src/ff.c **** 
2046:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create file name in directory form */
2047:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (p = *path; *p == '/' || *p == '\\'; p++) ;	/* Strip duplicated separator */
 975              		.loc 1 2047 0
 976 0006 0C68     		ldr	r4, [r1]
 977              	.LVL115:
 978 0008 00E0     		b	.L103
 979              	.L104:
 980              		.loc 1 2047 0 is_stmt 0 discriminator 5
 981 000a 0134     		adds	r4, r4, #1
 982              	.LVL116:
 983              	.L103:
 984              		.loc 1 2047 0 discriminator 1
 985 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 986 000e 2F2B     		cmp	r3, #47
 987 0010 FBD0     		beq	.L104
 988              		.loc 1 2047 0 discriminator 4
 989 0012 5C2B     		cmp	r3, #92
 990 0014 F9D0     		beq	.L104
2048:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn = dp->fn;
 991              		.loc 1 2048 0 is_stmt 1
 992 0016 D0F818A0 		ldr	r10, [r0, #24]
 993              	.LVL117:
2049:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(sfn, ' ', 11);
 994              		.loc 1 2049 0
 995 001a 0B22     		movs	r2, #11
 996 001c 2021     		movs	r1, #32
 997              	.LVL118:
 998 001e 5046     		mov	r0, r10
 999              	.LVL119:
 1000 0020 FFF7FEFF 		bl	mem_set
 1001              	.LVL120:
2050:Middlewares/Third_Party/FatFs/src/ff.c **** 	si = i = b = 0; ni = 8;
 1002              		.loc 1 2050 0
 1003 0024 0026     		movs	r6, #0
 1004 0026 3346     		mov	r3, r6
 1005 0028 0827     		movs	r7, #8
 1006 002a B046     		mov	r8, r6
ARM GAS  /tmp/cckAXl85.s 			page 55


 1007              	.LVL121:
 1008              	.L105:
2051:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2052:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (p[si] == '.') { /* Is this a dot entry? */
2053:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2054:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (BYTE)p[si++];
2055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c != '.' || si >= 3) break;
2056:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2057:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2058:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
2059:Middlewares/Third_Party/FatFs/src/ff.c **** 		*path = &p[si];									/* Return pointer to the next segment */
2060:Middlewares/Third_Party/FatFs/src/ff.c **** 		sfn[NSFLAG] = (c <= ' ') ? NS_LAST | NS_DOT : NS_DOT;	/* Set last segment flag if end of path */
2061:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_OK;
2062:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2063:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2064:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
2065:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = (BYTE)p[si++];
 1009              		.loc 1 2065 0
 1010 002c 03F1010B 		add	fp, r3, #1
 1011              	.LVL122:
 1012 0030 E55C     		ldrb	r5, [r4, r3]	@ zero_extendqisi2
 1013              	.LVL123:
2066:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c <= ' ' || c == '/' || c == '\\') break;	/* Break on end of segment */
 1014              		.loc 1 2066 0
 1015 0032 202D     		cmp	r5, #32
 1016 0034 3AD9     		bls	.L106
 1017              		.loc 1 2066 0 is_stmt 0 discriminator 1
 1018 0036 2F2D     		cmp	r5, #47
 1019 0038 38D0     		beq	.L106
 1020              		.loc 1 2066 0 discriminator 2
 1021 003a 5C2D     		cmp	r5, #92
 1022 003c 36D0     		beq	.L106
2067:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '.' || i >= ni) {
 1023              		.loc 1 2067 0 is_stmt 1
 1024 003e 2E2D     		cmp	r5, #46
 1025 0040 01D0     		beq	.L107
 1026              		.loc 1 2067 0 is_stmt 0 discriminator 1
 1027 0042 B742     		cmp	r7, r6
 1028 0044 0DD8     		bhi	.L108
 1029              	.L107:
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ni != 8 || c != '.') return FR_INVALID_NAME;
 1030              		.loc 1 2068 0 is_stmt 1
 1031 0046 082F     		cmp	r7, #8
 1032 0048 5FD1     		bne	.L119
 1033              		.loc 1 2068 0 is_stmt 0 discriminator 2
 1034 004a 2E2D     		cmp	r5, #46
 1035 004c 02D0     		beq	.L125
 1036              		.loc 1 2068 0
 1037 004e 0620     		movs	r0, #6
 1038 0050 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1039              	.LVL124:
 1040              	.L125:
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
2070:Middlewares/Third_Party/FatFs/src/ff.c **** 			b <<= 2; continue;
 1041              		.loc 1 2070 0 is_stmt 1
 1042 0054 4FEA8808 		lsl	r8, r8, #2
 1043              	.LVL125:
ARM GAS  /tmp/cckAXl85.s 			page 56


 1044 0058 5FFA88F8 		uxtb	r8, r8
 1045              	.LVL126:
2069:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
 1046              		.loc 1 2069 0
 1047 005c 3E46     		mov	r6, r7
 1048 005e 0B27     		movs	r7, #11
 1049              		.loc 1 2070 0
 1050 0060 12E0     		b	.L110
 1051              	.LVL127:
 1052              	.L108:
2071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2072:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {				/* Extended character? */
 1053              		.loc 1 2072 0
 1054 0062 15F0800F 		tst	r5, #128
 1055 0066 11D1     		bne	.L126
 1056              	.L111:
2073:Middlewares/Third_Party/FatFs/src/ff.c **** 			b |= 3;						/* Eliminate NT flag */
2074:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
2075:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = ExCvt[c - 0x80];		/* To upper extended characters (SBCS cfg) */
2076:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2077:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_DF1S
2078:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INVALID_NAME;		/* Reject extended characters (ASCII cfg) */
2079:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2080:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2081:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2082:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {				/* Check if it is a DBC 1st byte (always false on SBCS cfg) */
2083:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (BYTE)p[si++];			/* Get 2nd byte */
2084:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!IsDBCS2(d) || i >= ni - 1)	/* Reject invalid DBC */
2085:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2086:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
2087:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = d;
2088:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* SBC */
2089:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))	/* Reject illegal chrs for SFN */
 1057              		.loc 1 2089 0
 1058 0068 2946     		mov	r1, r5
 1059 006a 2B48     		ldr	r0, .L132
 1060 006c FFF7FEFF 		bl	chk_chr
 1061              	.LVL128:
 1062 0070 0028     		cmp	r0, #0
 1063 0072 4DD1     		bne	.L121
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INVALID_NAME;
2091:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 1064              		.loc 1 2091 0
 1065 0074 A5F14103 		sub	r3, r5, #65
 1066 0078 DBB2     		uxtb	r3, r3
 1067 007a 192B     		cmp	r3, #25
 1068 007c 0CD8     		bhi	.L112
2092:Middlewares/Third_Party/FatFs/src/ff.c **** 				b |= 2;
 1069              		.loc 1 2092 0
 1070 007e 48F00208 		orr	r8, r8, #2
 1071              	.LVL129:
 1072              	.L113:
2093:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (IsLower(c)) {		/* ASCII small capital? */
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 1; c -= 0x20;
2096:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2097:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
ARM GAS  /tmp/cckAXl85.s 			page 57


2098:Middlewares/Third_Party/FatFs/src/ff.c **** 			sfn[i++] = c;
 1073              		.loc 1 2098 0
 1074 0082 0AF80650 		strb	r5, [r10, r6]
 1075 0086 0136     		adds	r6, r6, #1
 1076              	.LVL130:
 1077              	.L110:
 1078 0088 5B46     		mov	r3, fp
 1079 008a CFE7     		b	.L105
 1080              	.LVL131:
 1081              	.L126:
2073:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
 1082              		.loc 1 2073 0
 1083 008c 48F00308 		orr	r8, r8, #3
 1084              	.LVL132:
2075:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 1085              		.loc 1 2075 0
 1086 0090 803D     		subs	r5, r5, #128
 1087              	.LVL133:
 1088 0092 224B     		ldr	r3, .L132+4
 1089 0094 5D5D     		ldrb	r5, [r3, r5]	@ zero_extendqisi2
 1090              	.LVL134:
 1091 0096 E7E7     		b	.L111
 1092              	.L112:
2094:Middlewares/Third_Party/FatFs/src/ff.c **** 					b |= 1; c -= 0x20;
 1093              		.loc 1 2094 0
 1094 0098 A5F16103 		sub	r3, r5, #97
 1095 009c DBB2     		uxtb	r3, r3
 1096 009e 192B     		cmp	r3, #25
 1097 00a0 EFD8     		bhi	.L113
2095:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1098              		.loc 1 2095 0
 1099 00a2 48F00108 		orr	r8, r8, #1
 1100              	.LVL135:
 1101 00a6 203D     		subs	r5, r5, #32
 1102              	.LVL136:
 1103 00a8 EDB2     		uxtb	r5, r5
 1104              	.LVL137:
 1105 00aa EAE7     		b	.L113
 1106              	.L106:
2099:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2101:Middlewares/Third_Party/FatFs/src/ff.c **** 	*path = &p[si];						/* Return pointer to the next segment */
 1107              		.loc 1 2101 0
 1108 00ac 5C44     		add	r4, r4, fp
 1109              	.LVL138:
 1110 00ae C9F80040 		str	r4, [r9]
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = (c <= ' ') ? NS_LAST : 0;		/* Set last segment flag if end of path */
 1111              		.loc 1 2102 0
 1112 00b2 202D     		cmp	r5, #32
 1113 00b4 04D8     		bhi	.L122
 1114 00b6 0423     		movs	r3, #4
 1115              	.L114:
 1116              	.LVL139:
2103:Middlewares/Third_Party/FatFs/src/ff.c **** 
2104:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!i) return FR_INVALID_NAME;		/* Reject nul string */
 1117              		.loc 1 2104 0 discriminator 4
 1118 00b8 26B9     		cbnz	r6, .L127
ARM GAS  /tmp/cckAXl85.s 			page 58


 1119              		.loc 1 2104 0 is_stmt 0
 1120 00ba 0620     		movs	r0, #6
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* When first character collides with DDEM, replace it with RD
2106:Middlewares/Third_Party/FatFs/src/ff.c **** 
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (ni == 8) b <<= 2;
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
2110:Middlewares/Third_Party/FatFs/src/ff.c **** 
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 	sfn[NSFLAG] = c;		/* Store NT flag, File name is created */
2112:Middlewares/Third_Party/FatFs/src/ff.c **** 
2113:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2114:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2115:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1121              		.loc 1 2115 0 is_stmt 1
 1122 00bc BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1123              	.LVL140:
 1124              	.L122:
2102:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1125              		.loc 1 2102 0
 1126 00c0 0023     		movs	r3, #0
 1127 00c2 F9E7     		b	.L114
 1128              	.LVL141:
 1129              	.L127:
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfn[0] == DDEM) sfn[0] = RDDEM;	/* When first character collides with DDEM, replace it with RD
 1130              		.loc 1 2105 0
 1131 00c4 9AF80020 		ldrb	r2, [r10]	@ zero_extendqisi2
 1132 00c8 E52A     		cmp	r2, #229
 1133 00ca 0FD0     		beq	.L128
 1134              	.L115:
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 1135              		.loc 1 2107 0
 1136 00cc 082F     		cmp	r7, #8
 1137 00ce 11D0     		beq	.L129
 1138              	.L116:
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 1139              		.loc 1 2108 0
 1140 00d0 08F00302 		and	r2, r8, #3
 1141 00d4 012A     		cmp	r2, #1
 1142 00d6 12D0     		beq	.L130
 1143              	.L117:
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1144              		.loc 1 2109 0
 1145 00d8 08F00C08 		and	r8, r8, #12
 1146              	.LVL142:
 1147 00dc B8F1040F 		cmp	r8, #4
 1148 00e0 10D0     		beq	.L131
 1149              	.L118:
2111:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1150              		.loc 1 2111 0
 1151 00e2 8AF80B30 		strb	r3, [r10, #11]
2113:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1152              		.loc 1 2113 0
 1153 00e6 0020     		movs	r0, #0
 1154 00e8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1155              	.LVL143:
 1156              	.L128:
2105:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 59


 1157              		.loc 1 2105 0 discriminator 1
 1158 00ec 0522     		movs	r2, #5
 1159 00ee 8AF80020 		strb	r2, [r10]
 1160 00f2 EBE7     		b	.L115
 1161              	.L129:
2107:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x03) == 0x01) c |= NS_EXT;	/* NT flag (Name extension has only small capital) */
 1162              		.loc 1 2107 0 discriminator 1
 1163 00f4 4FEA8808 		lsl	r8, r8, #2
 1164              	.LVL144:
 1165 00f8 5FFA88F8 		uxtb	r8, r8
 1166              	.LVL145:
 1167 00fc E8E7     		b	.L116
 1168              	.L130:
2108:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((b & 0x0C) == 0x04) c |= NS_BODY;	/* NT flag (Name body has only small capital) */
 1169              		.loc 1 2108 0 discriminator 1
 1170 00fe 43F01003 		orr	r3, r3, #16
 1171              	.LVL146:
 1172 0102 E9E7     		b	.L117
 1173              	.LVL147:
 1174              	.L131:
2109:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1175              		.loc 1 2109 0 discriminator 1
 1176 0104 43F00803 		orr	r3, r3, #8
 1177              	.LVL148:
 1178 0108 EBE7     		b	.L118
 1179              	.LVL149:
 1180              	.L119:
2068:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = 8; ni = 11;
 1181              		.loc 1 2068 0
 1182 010a 0620     		movs	r0, #6
 1183 010c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1184              	.LVL150:
 1185              	.L121:
2090:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsUpper(c)) {			/* ASCII large capital? */
 1186              		.loc 1 2090 0
 1187 0110 0620     		movs	r0, #6
 1188 0112 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1189              	.LVL151:
 1190              	.L133:
 1191 0116 00BF     		.align	2
 1192              	.L132:
 1193 0118 00000000 		.word	.LC0
 1194 011c 00000000 		.word	.LANCHOR1
 1195              		.cfi_endproc
 1196              	.LFE99:
 1198              		.section	.text.get_ldnumber,"ax",%progbits
 1199              		.align	1
 1200              		.syntax unified
 1201              		.thumb
 1202              		.thumb_func
 1203              		.fpu softvfp
 1205              	get_ldnumber:
 1206              	.LFB101:
2116:Middlewares/Third_Party/FatFs/src/ff.c **** 
2117:Middlewares/Third_Party/FatFs/src/ff.c **** 
2118:Middlewares/Third_Party/FatFs/src/ff.c **** 
2119:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 60


2120:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2121:Middlewares/Third_Party/FatFs/src/ff.c **** /* Follow a file path                                                    */
2122:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2123:Middlewares/Third_Party/FatFs/src/ff.c **** 
2124:Middlewares/Third_Party/FatFs/src/ff.c **** static
2125:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT follow_path (	/* FR_OK(0): successful, !=0: error code */
2126:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Directory object to return last directory and found object */
2127:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Full-path string to find a file or directory */
2128:Middlewares/Third_Party/FatFs/src/ff.c **** )
2129:Middlewares/Third_Party/FatFs/src/ff.c **** {
2130:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2131:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, ns;
2132:Middlewares/Third_Party/FatFs/src/ff.c **** 
2133:Middlewares/Third_Party/FatFs/src/ff.c **** 
2134:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2135:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\') {	/* There is a heading separator */
2136:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;	dp->sclust = 0;				/* Strip it and start from the root directory */
2137:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* No heading separator */
2138:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sclust = dp->fs->cdir;			/* Start from the current directory */
2139:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2140:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path == '/' || *path == '\\')		/* Strip heading separator if exist */
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
2143:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
2144:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2145:Middlewares/Third_Party/FatFs/src/ff.c **** 
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((UINT)*path < ' ') {				/* Null path name is the origin directory itself */
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
2149:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
2150:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (;;) {
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = create_name(dp, &path);	/* Get a segment name of the path */
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the sagment name */
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
2157:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
2158:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->sclust = 0; dp->dir = 0;	/* it is the root directory and stay there */
2159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) continue;	/* Continue to follow if not last segment */
2160:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_OK;					/* Ended at the root directroy. Function completed. */
2161:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {							/* Could not find the object */
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!(ns & NS_LAST)) res = FR_NO_PATH;	/* Adjust error code if not last segment */
2163:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2164:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2165:Middlewares/Third_Party/FatFs/src/ff.c **** 				break;
2166:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ns & NS_LAST) break;			/* Last segment matched. Function completed. */
2168:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
2171:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->sclust = ld_clust(dp->fs, dir);
2173:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2174:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2175:Middlewares/Third_Party/FatFs/src/ff.c **** 
2176:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
ARM GAS  /tmp/cckAXl85.s 			page 61


2177:Middlewares/Third_Party/FatFs/src/ff.c **** }
2178:Middlewares/Third_Party/FatFs/src/ff.c **** 
2179:Middlewares/Third_Party/FatFs/src/ff.c **** 
2180:Middlewares/Third_Party/FatFs/src/ff.c **** 
2181:Middlewares/Third_Party/FatFs/src/ff.c **** 
2182:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2183:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get logical drive number from path name                               */
2184:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2185:Middlewares/Third_Party/FatFs/src/ff.c **** 
2186:Middlewares/Third_Party/FatFs/src/ff.c **** static
2187:Middlewares/Third_Party/FatFs/src/ff.c **** int get_ldnumber (		/* Returns logical drive number (-1:invalid drive) */
2188:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path	/* Pointer to pointer to the path name */
2189:Middlewares/Third_Party/FatFs/src/ff.c **** )
2190:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1207              		.loc 1 2190 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 0
 1210              		@ frame_needed = 0, uses_anonymous_args = 0
 1211              		@ link register save eliminated.
 1212              	.LVL152:
2191:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
2192:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2193:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol = -1;
2194:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
2195:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const char* const str[] = {_VOLUME_STRS};
2196:Middlewares/Third_Party/FatFs/src/ff.c **** 	const char *sp;
2197:Middlewares/Third_Party/FatFs/src/ff.c **** 	char c;
2198:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR tc;
2199:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2200:Middlewares/Third_Party/FatFs/src/ff.c **** 
2201:Middlewares/Third_Party/FatFs/src/ff.c **** 
2202:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (*path) {	/* If the pointer is not a null */
 1213              		.loc 1 2202 0
 1214 0000 0168     		ldr	r1, [r0]
 1215 0002 09B1     		cbz	r1, .L148
 1216 0004 0A46     		mov	r2, r1
 1217 0006 03E0     		b	.L135
 1218              	.L148:
2193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1219              		.loc 1 2193 0
 1220 0008 4FF0FF33 		mov	r3, #-1
 1221 000c 08E0     		b	.L145
 1222              	.LVL153:
 1223              	.L138:
2203:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (tt = *path; (UINT)*tt >= (_USE_LFN ? ' ' : '!') && *tt != ':'; tt++) ;	/* Find ':' in the pa
 1224              		.loc 1 2203 0 discriminator 4
 1225 000e 0132     		adds	r2, r2, #1
 1226              	.LVL154:
 1227              	.L135:
 1228              		.loc 1 2203 0 is_stmt 0 discriminator 1
 1229 0010 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1230 0012 202B     		cmp	r3, #32
 1231 0014 01D9     		bls	.L137
 1232              		.loc 1 2203 0 discriminator 3
 1233 0016 3A2B     		cmp	r3, #58
 1234 0018 F9D1     		bne	.L138
 1235              	.L137:
ARM GAS  /tmp/cckAXl85.s 			page 62


2204:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (*tt == ':') {	/* If a ':' is exist in the path name */
 1236              		.loc 1 2204 0 is_stmt 1
 1237 001a 3A2B     		cmp	r3, #58
 1238 001c 02D0     		beq	.L149
2205:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = *path;
2206:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = *tp++ - '0'; 
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2209:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2210:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = ++tt;
2211:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2212:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2213:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID
2214:Middlewares/Third_Party/FatFs/src/ff.c **** 			 else {	/* No numeric drive number, find string drive id */
2215:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; tt++;
2216:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
2217:Middlewares/Third_Party/FatFs/src/ff.c **** 					sp = str[i]; tp = *path;
2218:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {	/* Compare a string drive id with path name */
2219:Middlewares/Third_Party/FatFs/src/ff.c **** 						c = *sp++; tc = *tp++;
2220:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (IsLower(tc)) tc -= 0x20;
2221:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (c && (TCHAR)c == tc);
2222:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while ((c || tp != tt) && ++i < _VOLUMES);	/* Repeat for each id until pattern match */
2223:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
2224:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
2225:Middlewares/Third_Party/FatFs/src/ff.c **** 					*path = tt;
2226:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2227:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2228:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2229:Middlewares/Third_Party/FatFs/src/ff.c **** 			return vol;
2230:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2231:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH && _VOLUMES >= 2
2232:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = CurrVol;	/* Current drive */
2233:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2234:Middlewares/Third_Party/FatFs/src/ff.c **** 		vol = 0;		/* Drive 0 */
 1239              		.loc 1 2234 0
 1240 001e 0023     		movs	r3, #0
 1241              	.LVL155:
 1242              	.L145:
2235:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2236:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2237:Middlewares/Third_Party/FatFs/src/ff.c **** 	return vol;
2238:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1243              		.loc 1 2238 0
 1244 0020 1846     		mov	r0, r3
 1245              	.LVL156:
 1246 0022 7047     		bx	lr
 1247              	.LVL157:
 1248              	.L149:
2190:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *tp, *tt;
 1249              		.loc 1 2190 0
 1250 0024 10B4     		push	{r4}
 1251              	.LCFI15:
 1252              		.cfi_def_cfa_offset 4
 1253              		.cfi_offset 4, -4
 1254              	.LVL158:
2206:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < 10 && tp == tt) {	/* Is there a numeric drive id? */
 1255              		.loc 1 2206 0
ARM GAS  /tmp/cckAXl85.s 			page 63


 1256 0026 4C1C     		adds	r4, r1, #1
 1257              	.LVL159:
 1258 0028 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1259 002a 303B     		subs	r3, r3, #48
 1260              	.LVL160:
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1261              		.loc 1 2207 0
 1262 002c 092B     		cmp	r3, #9
 1263 002e 07D8     		bhi	.L141
2207:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (i < _VOLUMES) {	/* If a drive id is found, get the value and strip it */
 1264              		.loc 1 2207 0 is_stmt 0 discriminator 1
 1265 0030 A242     		cmp	r2, r4
 1266 0032 08D1     		bne	.L142
2208:Middlewares/Third_Party/FatFs/src/ff.c **** 					vol = (int)i;
 1267              		.loc 1 2208 0 is_stmt 1
 1268 0034 53B9     		cbnz	r3, .L143
 1269              	.LVL161:
2210:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1270              		.loc 1 2210 0
 1271 0036 0132     		adds	r2, r2, #1
 1272              	.LVL162:
 1273 0038 0260     		str	r2, [r0]
 1274              	.LVL163:
 1275              	.L134:
 1276              		.loc 1 2238 0
 1277 003a 1846     		mov	r0, r3
 1278              	.LVL164:
 1279 003c 10BC     		pop	{r4}
 1280              	.LCFI16:
 1281              		.cfi_remember_state
 1282              		.cfi_restore 4
 1283              		.cfi_def_cfa_offset 0
 1284              	.LVL165:
 1285 003e 7047     		bx	lr
 1286              	.LVL166:
 1287              	.L141:
 1288              	.LCFI17:
 1289              		.cfi_restore_state
2193:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STR_VOLUME_ID		/* Find string drive id */
 1290              		.loc 1 2193 0
 1291 0040 4FF0FF33 		mov	r3, #-1
 1292              	.LVL167:
 1293 0044 F9E7     		b	.L134
 1294              	.LVL168:
 1295              	.L142:
 1296 0046 4FF0FF33 		mov	r3, #-1
 1297              	.LVL169:
 1298 004a F6E7     		b	.L134
 1299              	.LVL170:
 1300              	.L143:
 1301 004c 4FF0FF33 		mov	r3, #-1
 1302              	.LVL171:
 1303 0050 F3E7     		b	.L134
 1304              		.cfi_endproc
 1305              	.LFE101:
 1307              		.section	.text.sync_window,"ax",%progbits
 1308              		.align	1
ARM GAS  /tmp/cckAXl85.s 			page 64


 1309              		.syntax unified
 1310              		.thumb
 1311              		.thumb_func
 1312              		.fpu softvfp
 1314              	sync_window:
 1315              	.LFB80:
 776:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD wsect;
 1316              		.loc 1 776 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 1320              	.LVL172:
 1321 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1322              	.LCFI18:
 1323              		.cfi_def_cfa_offset 24
 1324              		.cfi_offset 3, -24
 1325              		.cfi_offset 4, -20
 1326              		.cfi_offset 5, -16
 1327              		.cfi_offset 6, -12
 1328              		.cfi_offset 7, -8
 1329              		.cfi_offset 14, -4
 1330              	.LVL173:
 782:Middlewares/Third_Party/FatFs/src/ff.c **** 		wsect = fs->winsect;	/* Current sector number */
 1331              		.loc 1 782 0
 1332 0002 90F80432 		ldrb	r3, [r0, #516]	@ zero_extendqisi2
 1333 0006 0BB9     		cbnz	r3, .L158
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1334              		.loc 1 779 0
 1335 0008 0020     		movs	r0, #0
 1336              	.LVL174:
 1337 000a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1338              	.LVL175:
 1339              	.L158:
 1340 000c 0446     		mov	r4, r0
 783:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(fs->drv, fs->win.d8, wsect, 1) != RES_OK) {
 1341              		.loc 1 783 0
 1342 000e D0F83062 		ldr	r6, [r0, #560]
 1343              	.LVL176:
 784:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 1344              		.loc 1 784 0
 1345 0012 0746     		mov	r7, r0
 1346 0014 0123     		movs	r3, #1
 1347 0016 3246     		mov	r2, r6
 1348 0018 0146     		mov	r1, r0
 1349 001a 90F80102 		ldrb	r0, [r0, #513]	@ zero_extendqisi2
 1350              	.LVL177:
 1351 001e FFF7FEFF 		bl	disk_write
 1352              	.LVL178:
 1353 0022 D8B9     		cbnz	r0, .L155
 787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (wsect - fs->fatbase < fs->fsize) {		/* Is it in the FAT area? */
 1354              		.loc 1 787 0
 1355 0024 0023     		movs	r3, #0
 1356 0026 84F80432 		strb	r3, [r4, #516]
 788:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (nf = fs->n_fats; nf >= 2; nf--) {	/* Reflect the change to all FAT copies */
 1357              		.loc 1 788 0
 1358 002a D4F82432 		ldr	r3, [r4, #548]
 1359 002e F31A     		subs	r3, r6, r3
ARM GAS  /tmp/cckAXl85.s 			page 65


 1360 0030 D4F81C22 		ldr	r2, [r4, #540]
 1361 0034 9342     		cmp	r3, r2
 1362 0036 13D2     		bcs	.L156
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1363              		.loc 1 789 0
 1364 0038 94F80352 		ldrb	r5, [r4, #515]	@ zero_extendqisi2
 1365              	.LVL179:
 1366 003c 0AE0     		b	.L152
 1367              	.L153:
 790:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_write(fs->drv, fs->win.d8, wsect, 1);
 1368              		.loc 1 790 0 discriminator 3
 1369 003e D4F81C32 		ldr	r3, [r4, #540]
 1370 0042 1E44     		add	r6, r6, r3
 1371              	.LVL180:
 791:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 1372              		.loc 1 791 0 discriminator 3
 1373 0044 0123     		movs	r3, #1
 1374 0046 3246     		mov	r2, r6
 1375 0048 3946     		mov	r1, r7
 1376 004a 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1377 004e FFF7FEFF 		bl	disk_write
 1378              	.LVL181:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1379              		.loc 1 789 0 discriminator 3
 1380 0052 013D     		subs	r5, r5, #1
 1381              	.LVL182:
 1382              	.L152:
 789:Middlewares/Third_Party/FatFs/src/ff.c **** 					wsect += fs->fsize;
 1383              		.loc 1 789 0 is_stmt 0 discriminator 1
 1384 0054 012D     		cmp	r5, #1
 1385 0056 F2D8     		bhi	.L153
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1386              		.loc 1 779 0 is_stmt 1
 1387 0058 0020     		movs	r0, #0
 1388 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1389              	.LVL183:
 1390              	.L155:
 785:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 1391              		.loc 1 785 0
 1392 005c 0120     		movs	r0, #1
 1393 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1394              	.LVL184:
 1395              	.L156:
 779:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1396              		.loc 1 779 0
 1397 0060 0020     		movs	r0, #0
 1398              	.LVL185:
 797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1399              		.loc 1 797 0
 1400 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1401              		.cfi_endproc
 1402              	.LFE80:
 1404              		.section	.text.move_window,"ax",%progbits
 1405              		.align	1
 1406              		.syntax unified
 1407              		.thumb
 1408              		.thumb_func
ARM GAS  /tmp/cckAXl85.s 			page 66


 1409              		.fpu softvfp
 1411              	move_window:
 1412              	.LFB81:
 806:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res = FR_OK;
 1413              		.loc 1 806 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 0
 1416              		@ frame_needed = 0, uses_anonymous_args = 0
 1417              	.LVL186:
 1418 0000 70B5     		push	{r4, r5, r6, lr}
 1419              	.LCFI19:
 1420              		.cfi_def_cfa_offset 16
 1421              		.cfi_offset 4, -16
 1422              		.cfi_offset 5, -12
 1423              		.cfi_offset 6, -8
 1424              		.cfi_offset 14, -4
 1425              	.LVL187:
 810:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 1426              		.loc 1 810 0
 1427 0002 D0F83032 		ldr	r3, [r0, #560]
 1428 0006 8B42     		cmp	r3, r1
 1429 0008 15D0     		beq	.L162
 1430 000a 0446     		mov	r4, r0
 1431 000c 0D46     		mov	r5, r1
 812:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 1432              		.loc 1 812 0
 1433 000e FFF7FEFF 		bl	sync_window
 1434              	.LVL188:
 814:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fs->drv, fs->win.d8, sector, 1) != RES_OK) {
 1435              		.loc 1 814 0
 1436 0012 0646     		mov	r6, r0
 1437 0014 08B1     		cbz	r0, .L165
 1438              	.LVL189:
 1439              	.L160:
 823:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1440              		.loc 1 823 0
 1441 0016 3046     		mov	r0, r6
 1442 0018 70BD     		pop	{r4, r5, r6, pc}
 1443              	.LVL190:
 1444              	.L165:
 815:Middlewares/Third_Party/FatFs/src/ff.c **** 				sector = 0xFFFFFFFF;	/* Invalidate window if data is not reliable */
 1445              		.loc 1 815 0
 1446 001a 0123     		movs	r3, #1
 1447 001c 2A46     		mov	r2, r5
 1448 001e 2146     		mov	r1, r4
 1449 0020 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 1450              	.LVL191:
 1451 0024 FFF7FEFF 		bl	disk_read
 1452              	.LVL192:
 1453 0028 10B1     		cbz	r0, .L161
 817:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 1454              		.loc 1 817 0
 1455 002a 0126     		movs	r6, #1
 816:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DISK_ERR;
 1456              		.loc 1 816 0
 1457 002c 4FF0FF35 		mov	r5, #-1
 1458              	.LVL193:
ARM GAS  /tmp/cckAXl85.s 			page 67


 1459              	.L161:
 819:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1460              		.loc 1 819 0
 1461 0030 C4F83052 		str	r5, [r4, #560]
 1462 0034 EFE7     		b	.L160
 1463              	.LVL194:
 1464              	.L162:
 807:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1465              		.loc 1 807 0
 1466 0036 0026     		movs	r6, #0
 1467 0038 EDE7     		b	.L160
 1468              		.cfi_endproc
 1469              	.LFE81:
 1471              		.section	.text.check_fs,"ax",%progbits
 1472              		.align	1
 1473              		.syntax unified
 1474              		.thumb
 1475              		.thumb_func
 1476              		.fpu softvfp
 1478              	check_fs:
 1479              	.LFB102:
2239:Middlewares/Third_Party/FatFs/src/ff.c **** 
2240:Middlewares/Third_Party/FatFs/src/ff.c **** 
2241:Middlewares/Third_Party/FatFs/src/ff.c **** 
2242:Middlewares/Third_Party/FatFs/src/ff.c **** 
2243:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2244:Middlewares/Third_Party/FatFs/src/ff.c **** /* Load a sector and check if it is an FAT boot sector                   */
2245:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2246:Middlewares/Third_Party/FatFs/src/ff.c **** 
2247:Middlewares/Third_Party/FatFs/src/ff.c **** static
2248:Middlewares/Third_Party/FatFs/src/ff.c **** BYTE check_fs (	/* 0:FAT boor sector, 1:Valid boor sector but not FAT, 2:Not a boot sector, 3:Disk 
2249:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,	/* File system object */
2250:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sect	/* Sector# (lba) to check if it is an FAT boot record or not */
2251:Middlewares/Third_Party/FatFs/src/ff.c **** )
2252:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1480              		.loc 1 2252 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 0, uses_anonymous_args = 0
 1484              	.LVL195:
 1485 0000 10B5     		push	{r4, lr}
 1486              	.LCFI20:
 1487              		.cfi_def_cfa_offset 8
 1488              		.cfi_offset 4, -8
 1489              		.cfi_offset 14, -4
 1490 0002 0446     		mov	r4, r0
2253:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->wflag = 0; fs->winsect = 0xFFFFFFFF;	/* Invaidate window */
 1491              		.loc 1 2253 0
 1492 0004 0023     		movs	r3, #0
 1493 0006 80F80432 		strb	r3, [r0, #516]
 1494 000a 4FF0FF33 		mov	r3, #-1
 1495 000e C0F83032 		str	r3, [r0, #560]
2254:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (move_window(fs, sect) != FR_OK)			/* Load boot record */
 1496              		.loc 1 2254 0
 1497 0012 FFF7FEFF 		bl	move_window
 1498              	.LVL196:
 1499 0016 08B1     		cbz	r0, .L173
ARM GAS  /tmp/cckAXl85.s 			page 68


2255:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 3;
 1500              		.loc 1 2255 0
 1501 0018 0320     		movs	r0, #3
 1502 001a 10BD     		pop	{r4, pc}
 1503              	.LVL197:
 1504              	.L173:
2256:Middlewares/Third_Party/FatFs/src/ff.c **** 
2257:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(&fs->win.d8[BS_55AA]) != 0xAA55)	/* Check boot record signature (always placed at offs
 1505              		.loc 1 2257 0
 1506 001c 94F8FF21 		ldrb	r2, [r4, #511]	@ zero_extendqisi2
 1507 0020 94F8FE31 		ldrb	r3, [r4, #510]	@ zero_extendqisi2
 1508 0024 43EA0223 		orr	r3, r3, r2, lsl #8
 1509 0028 1BB2     		sxth	r3, r3
 1510 002a 184A     		ldr	r2, .L176
 1511 002c 9342     		cmp	r3, r2
 1512 002e 01D0     		beq	.L174
2258:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 2;
 1513              		.loc 1 2258 0
 1514 0030 0220     		movs	r0, #2
 1515 0032 10BD     		pop	{r4, pc}
 1516              	.LVL198:
 1517              	.L174:
2259:Middlewares/Third_Party/FatFs/src/ff.c **** 
2260:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType]) & 0xFFFFFF) == 0x544146)		/* Check "FAT" string */
 1518              		.loc 1 2260 0
 1519 0034 94F83920 		ldrb	r2, [r4, #57]	@ zero_extendqisi2
 1520 0038 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 1521 003c 1B04     		lsls	r3, r3, #16
 1522 003e 43EA0263 		orr	r3, r3, r2, lsl #24
 1523 0042 94F83720 		ldrb	r2, [r4, #55]	@ zero_extendqisi2
 1524 0046 43EA0223 		orr	r3, r3, r2, lsl #8
 1525 004a 94F83620 		ldrb	r2, [r4, #54]	@ zero_extendqisi2
 1526 004e 1343     		orrs	r3, r3, r2
 1527 0050 23F07F43 		bic	r3, r3, #-16777216
 1528 0054 0E4A     		ldr	r2, .L176+4
 1529 0056 9342     		cmp	r3, r2
 1530 0058 15D0     		beq	.L170
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
2262:Middlewares/Third_Party/FatFs/src/ff.c **** 	if ((LD_DWORD(&fs->win.d8[BS_FilSysType32]) & 0xFFFFFF) == 0x544146)	/* Check "FAT" string */
 1531              		.loc 1 2262 0
 1532 005a 94F85520 		ldrb	r2, [r4, #85]	@ zero_extendqisi2
 1533 005e 94F85430 		ldrb	r3, [r4, #84]	@ zero_extendqisi2
 1534 0062 1B04     		lsls	r3, r3, #16
 1535 0064 43EA0263 		orr	r3, r3, r2, lsl #24
 1536 0068 94F85320 		ldrb	r2, [r4, #83]	@ zero_extendqisi2
 1537 006c 43EA0223 		orr	r3, r3, r2, lsl #8
 1538 0070 94F85220 		ldrb	r2, [r4, #82]	@ zero_extendqisi2
 1539 0074 1343     		orrs	r3, r3, r2
 1540 0076 23F07F43 		bic	r3, r3, #-16777216
 1541 007a 054A     		ldr	r2, .L176+4
 1542 007c 9342     		cmp	r3, r2
 1543 007e 01D0     		beq	.L175
2263:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
2264:Middlewares/Third_Party/FatFs/src/ff.c **** 
2265:Middlewares/Third_Party/FatFs/src/ff.c **** 	return 1;
 1544              		.loc 1 2265 0
 1545 0080 0120     		movs	r0, #1
ARM GAS  /tmp/cckAXl85.s 			page 69


2266:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1546              		.loc 1 2266 0
 1547 0082 10BD     		pop	{r4, pc}
 1548              	.LVL199:
 1549              	.L175:
 1550 0084 10BD     		pop	{r4, pc}
 1551              	.LVL200:
 1552              	.L170:
2261:Middlewares/Third_Party/FatFs/src/ff.c **** 		return 0;
 1553              		.loc 1 2261 0
 1554 0086 0020     		movs	r0, #0
 1555 0088 10BD     		pop	{r4, pc}
 1556              	.LVL201:
 1557              	.L177:
 1558 008a 00BF     		.align	2
 1559              	.L176:
 1560 008c 55AAFFFF 		.word	-21931
 1561 0090 46415400 		.word	5521734
 1562              		.cfi_endproc
 1563              	.LFE102:
 1565              		.section	.text.lock_fs,"ax",%progbits
 1566              		.align	1
 1567              		.syntax unified
 1568              		.thumb
 1569              		.thumb_func
 1570              		.fpu softvfp
 1572              	lock_fs:
 1573              	.LFB73:
 632:Middlewares/Third_Party/FatFs/src/ff.c **** 	return ff_req_grant(fs->sobj);
 1574              		.loc 1 632 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              	.LVL202:
 1579 0000 08B5     		push	{r3, lr}
 1580              	.LCFI21:
 1581              		.cfi_def_cfa_offset 8
 1582              		.cfi_offset 3, -8
 1583              		.cfi_offset 14, -4
 633:Middlewares/Third_Party/FatFs/src/ff.c **** }
 1584              		.loc 1 633 0
 1585 0002 D0F80C02 		ldr	r0, [r0, #524]
 1586              	.LVL203:
 1587 0006 FFF7FEFF 		bl	ff_req_grant
 1588              	.LVL204:
 634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 1589              		.loc 1 634 0
 1590 000a 08BD     		pop	{r3, pc}
 1591              		.cfi_endproc
 1592              	.LFE73:
 1594              		.section	.text.find_volume,"ax",%progbits
 1595              		.align	1
 1596              		.syntax unified
 1597              		.thumb
 1598              		.thumb_func
 1599              		.fpu softvfp
 1601              	find_volume:
ARM GAS  /tmp/cckAXl85.s 			page 70


 1602              	.LFB103:
2267:Middlewares/Third_Party/FatFs/src/ff.c **** 
2268:Middlewares/Third_Party/FatFs/src/ff.c **** 
2269:Middlewares/Third_Party/FatFs/src/ff.c **** 
2270:Middlewares/Third_Party/FatFs/src/ff.c **** 
2271:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2272:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find logical drive and check if the volume is mounted                 */
2273:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2274:Middlewares/Third_Party/FatFs/src/ff.c **** 
2275:Middlewares/Third_Party/FatFs/src/ff.c **** static
2276:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT find_volume (	/* FR_OK(0): successful, !=0: any error occurred */
2277:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** rfs,		/* Pointer to pointer to the found file system object */
2278:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR** path,	/* Pointer to pointer to the path name (drive number) */
2279:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE wmode			/* !=0: Check write protection for write access */
2280:Middlewares/Third_Party/FatFs/src/ff.c **** )
2281:Middlewares/Third_Party/FatFs/src/ff.c **** {
 1603              		.loc 1 2281 0
 1604              		.cfi_startproc
 1605              		@ args = 0, pretend = 0, frame = 16
 1606              		@ frame_needed = 0, uses_anonymous_args = 0
 1607              	.LVL205:
 1608 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1609              	.LCFI22:
 1610              		.cfi_def_cfa_offset 20
 1611              		.cfi_offset 4, -20
 1612              		.cfi_offset 5, -16
 1613              		.cfi_offset 6, -12
 1614              		.cfi_offset 7, -8
 1615              		.cfi_offset 14, -4
 1616 0002 85B0     		sub	sp, sp, #20
 1617              	.LCFI23:
 1618              		.cfi_def_cfa_offset 40
 1619 0004 0446     		mov	r4, r0
 1620 0006 1746     		mov	r7, r2
2282:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, *pt;
2283:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2284:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
2285:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
2286:Middlewares/Third_Party/FatFs/src/ff.c **** 	WORD nrsv;
2287:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
2288:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
2289:Middlewares/Third_Party/FatFs/src/ff.c **** 
2290:Middlewares/Third_Party/FatFs/src/ff.c **** 
2291:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number from the path name */
2292:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = 0;
 1621              		.loc 1 2292 0
 1622 0008 0023     		movs	r3, #0
 1623 000a 0360     		str	r3, [r0]
2293:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(path);
 1624              		.loc 1 2293 0
 1625 000c 0846     		mov	r0, r1
 1626              	.LVL206:
 1627 000e FFF7FEFF 		bl	get_ldnumber
 1628              	.LVL207:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 1629              		.loc 1 2294 0
 1630 0012 061E     		subs	r6, r0, #0
ARM GAS  /tmp/cckAXl85.s 			page 71


 1631 0014 C0F28E81 		blt	.L198
2295:Middlewares/Third_Party/FatFs/src/ff.c **** 
2296:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check if the file system object is valid or not */
2297:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];					/* Get pointer to the file system object */
 1632              		.loc 1 2297 0
 1633 0018 C84B     		ldr	r3, .L233
 1634 001a 53F82650 		ldr	r5, [r3, r6, lsl #2]
 1635              	.LVL208:
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;		/* Is the file system object available? */
 1636              		.loc 1 2298 0
 1637 001e 002D     		cmp	r5, #0
 1638 0020 00F09681 		beq	.L199
2299:Middlewares/Third_Party/FatFs/src/ff.c **** 
2300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fs);						/* Lock the volume */
 1639              		.loc 1 2300 0
 1640 0024 2846     		mov	r0, r5
 1641              	.LVL209:
 1642 0026 FFF7FEFF 		bl	lock_fs
 1643              	.LVL210:
 1644 002a 08B9     		cbnz	r0, .L224
 1645 002c 0F20     		movs	r0, #15
 1646 002e 82E1     		b	.L181
 1647              	.L224:
2301:Middlewares/Third_Party/FatFs/src/ff.c **** 	*rfs = fs;							/* Return pointer to the file system object */
 1648              		.loc 1 2301 0
 1649 0030 2560     		str	r5, [r4]
2302:Middlewares/Third_Party/FatFs/src/ff.c **** 
2303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fs_type) {					/* If the volume has been mounted */
 1650              		.loc 1 2303 0
 1651 0032 95F80032 		ldrb	r3, [r5, #512]	@ zero_extendqisi2
 1652 0036 83B1     		cbz	r3, .L182
2304:Middlewares/Third_Party/FatFs/src/ff.c **** 		stat = disk_status(fs->drv);
 1653              		.loc 1 2304 0
 1654 0038 95F80102 		ldrb	r0, [r5, #513]	@ zero_extendqisi2
 1655 003c FFF7FEFF 		bl	disk_status
 1656              	.LVL211:
2305:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!(stat & STA_NOINIT)) {		/* and the physical drive is kept initialized */
 1657              		.loc 1 2305 0
 1658 0040 10F0010F 		tst	r0, #1
 1659 0044 09D1     		bne	.L182
2306:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check write protection if needed */
 1660              		.loc 1 2306 0
 1661 0046 002F     		cmp	r7, #0
 1662 0048 00F08481 		beq	.L201
 1663              		.loc 1 2306 0 is_stmt 0 discriminator 1
 1664 004c 10F0040F 		tst	r0, #4
 1665 0050 01D0     		beq	.L225
2307:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_WRITE_PROTECTED;
 1666              		.loc 1 2307 0 is_stmt 1
 1667 0052 0A20     		movs	r0, #10
 1668              	.LVL212:
 1669 0054 6FE1     		b	.L181
 1670              	.LVL213:
 1671              	.L225:
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_OK;				/* The file system object is valid */
 1672              		.loc 1 2308 0
 1673 0056 0020     		movs	r0, #0
ARM GAS  /tmp/cckAXl85.s 			page 72


 1674              	.LVL214:
 1675 0058 6DE1     		b	.L181
 1676              	.L182:
2309:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2310:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2311:Middlewares/Third_Party/FatFs/src/ff.c **** 
2312:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* The file system object is not valid. */
2313:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Following code attempts to mount the volume. (analyze BPB and initialize the fs object) */
2314:Middlewares/Third_Party/FatFs/src/ff.c **** 
2315:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;					/* Clear the file system object */
 1677              		.loc 1 2315 0
 1678 005a 0023     		movs	r3, #0
 1679 005c 85F80032 		strb	r3, [r5, #512]
2316:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->drv = LD2PD(vol);				/* Bind the logical drive and a physical drive */
 1680              		.loc 1 2316 0
 1681 0060 F0B2     		uxtb	r0, r6
 1682 0062 85F80102 		strb	r0, [r5, #513]
2317:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(fs->drv);	/* Initialize the physical drive */
 1683              		.loc 1 2317 0
 1684 0066 FFF7FEFF 		bl	disk_initialize
 1685              	.LVL215:
2318:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT)				/* Check if the initialization succeeded */
 1686              		.loc 1 2318 0
 1687 006a 10F0010F 		tst	r0, #1
 1688 006e 01D0     		beq	.L226
2319:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NOT_READY;			/* Failed to initialize due to no medium or hard error */
 1689              		.loc 1 2319 0
 1690 0070 0320     		movs	r0, #3
 1691              	.LVL216:
 1692 0072 60E1     		b	.L181
 1693              	.LVL217:
 1694              	.L226:
2320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!_FS_READONLY && wmode && (stat & STA_PROTECT))	/* Check disk write protection if needed */
 1695              		.loc 1 2320 0
 1696 0074 27B1     		cbz	r7, .L183
 1697              		.loc 1 2320 0 is_stmt 0 discriminator 1
 1698 0076 10F0040F 		tst	r0, #4
 1699 007a 01D0     		beq	.L183
2321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_WRITE_PROTECTED;
 1700              		.loc 1 2321 0 is_stmt 1
 1701 007c 0A20     		movs	r0, #10
 1702              	.LVL218:
 1703 007e 5AE1     		b	.L181
 1704              	.LVL219:
 1705              	.L183:
2322:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS						/* Get sector size (multiple sector size cfg only) */
2323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(fs->drv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK
2324:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| SS(fs) < _MIN_SS || SS(fs) > _MAX_SS) return FR_DISK_ERR;
2325:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Find an FAT partition on the drive. Supports only generic partitioning, FDISK and SFD. */
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	bsect = 0;
2328:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
 1706              		.loc 1 2328 0
 1707 0080 0021     		movs	r1, #0
 1708 0082 2846     		mov	r0, r5
 1709              	.LVL220:
 1710 0084 FFF7FEFF 		bl	check_fs
ARM GAS  /tmp/cckAXl85.s 			page 73


 1711              	.LVL221:
2329:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 1 || (!fmt && (LD2PT(vol)))) {	/* Not an FAT boot sector or forced partition number */
 1712              		.loc 1 2329 0
 1713 0088 0128     		cmp	r0, #1
 1714 008a 21D0     		beq	.L205
2327:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = check_fs(fs, bsect);					/* Load sector 0 and check if it is an FAT boot sector as SFD */
 1715              		.loc 1 2327 0
 1716 008c 0026     		movs	r6, #0
 1717              	.LVL222:
 1718              	.L185:
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			pt = fs->win.d8 + MBR_Table + i * SZ_PTE;
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
2333:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2334:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = LD2PT(vol);						/* Partition number: 0:auto, 1-4:forced */
2335:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i) i--;
2336:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {								/* Find an FAT volume */
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			bsect = br[i];
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
2340:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == 3) return FR_DISK_ERR;		/* An error occured in the disk I/O layer */
 1719              		.loc 1 2341 0
 1720 008e 0328     		cmp	r0, #3
 1721 0090 00F06281 		beq	.L208
2342:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 1722              		.loc 1 2342 0
 1723 0094 88B3     		cbz	r0, .L227
 1724 0096 0D20     		movs	r0, #13
 1725              	.LVL223:
 1726 0098 4DE1     		b	.L181
 1727              	.LVL224:
 1728              	.L206:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1729              		.loc 1 2332 0
 1730 009a 0023     		movs	r3, #0
 1731              	.LVL225:
 1732              	.L186:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1733              		.loc 1 2332 0 is_stmt 0 discriminator 4
 1734 009c 04AA     		add	r2, sp, #16
 1735 009e 02EB8102 		add	r2, r2, r1, lsl #2
 1736 00a2 42F8103C 		str	r3, [r2, #-16]
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
 1737              		.loc 1 2330 0 is_stmt 1 discriminator 4
 1738 00a6 0131     		adds	r1, r1, #1
 1739              	.LVL226:
 1740              	.L184:
2330:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; i < 4; i++) {			/* Get partition offset */
 1741              		.loc 1 2330 0 is_stmt 0 discriminator 2
 1742 00a8 0329     		cmp	r1, #3
 1743 00aa 13D8     		bhi	.L228
2331:Middlewares/Third_Party/FatFs/src/ff.c **** 			br[i] = pt[4] ? LD_DWORD(&pt[8]) : 0;
 1744              		.loc 1 2331 0 is_stmt 1
 1745 00ac 0B01     		lsls	r3, r1, #4
 1746 00ae 03F5DF73 		add	r3, r3, #446
 1747 00b2 2B44     		add	r3, r3, r5
ARM GAS  /tmp/cckAXl85.s 			page 74


 1748              	.LVL227:
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1749              		.loc 1 2332 0
 1750 00b4 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1751 00b6 002A     		cmp	r2, #0
 1752 00b8 EFD0     		beq	.L206
2332:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 1753              		.loc 1 2332 0 is_stmt 0 discriminator 1
 1754 00ba D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 1755 00bc 9A7A     		ldrb	r2, [r3, #10]	@ zero_extendqisi2
 1756 00be 1204     		lsls	r2, r2, #16
 1757 00c0 42EA0062 		orr	r2, r2, r0, lsl #24
 1758 00c4 587A     		ldrb	r0, [r3, #9]	@ zero_extendqisi2
 1759 00c6 42EA0022 		orr	r2, r2, r0, lsl #8
 1760 00ca 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1761              	.LVL228:
 1762 00cc 1343     		orrs	r3, r3, r2
 1763 00ce E5E7     		b	.L186
 1764              	.LVL229:
 1765              	.L205:
 1766 00d0 0021     		movs	r1, #0
 1767 00d2 E9E7     		b	.L184
 1768              	.LVL230:
 1769              	.L228:
 1770 00d4 0024     		movs	r4, #0
 1771              	.LVL231:
 1772              	.L189:
2337:Middlewares/Third_Party/FatFs/src/ff.c **** 			fmt = bsect ? check_fs(fs, bsect) : 2;	/* Check the partition */
 1773              		.loc 1 2337 0 is_stmt 1
 1774 00d6 04AB     		add	r3, sp, #16
 1775 00d8 03EB8403 		add	r3, r3, r4, lsl #2
 1776 00dc 53F8106C 		ldr	r6, [r3, #-16]
 1777              	.LVL232:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1778              		.loc 1 2338 0
 1779 00e0 36B9     		cbnz	r6, .L229
 1780 00e2 0220     		movs	r0, #2
 1781              	.L188:
 1782              	.LVL233:
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1783              		.loc 1 2339 0 discriminator 4
 1784 00e4 0028     		cmp	r0, #0
 1785 00e6 D2D0     		beq	.L185
2339:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 1786              		.loc 1 2339 0 is_stmt 0 discriminator 1
 1787 00e8 0134     		adds	r4, r4, #1
 1788              	.LVL234:
 1789 00ea 032C     		cmp	r4, #3
 1790 00ec F3D9     		bls	.L189
 1791 00ee CEE7     		b	.L185
 1792              	.LVL235:
 1793              	.L229:
2338:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (!LD2PT(vol) && fmt && ++i < 4);
 1794              		.loc 1 2338 0 is_stmt 1 discriminator 1
 1795 00f0 3146     		mov	r1, r6
 1796 00f2 2846     		mov	r0, r5
 1797 00f4 FFF7FEFF 		bl	check_fs
ARM GAS  /tmp/cckAXl85.s 			page 75


 1798              	.LVL236:
 1799 00f8 F4E7     		b	.L188
 1800              	.LVL237:
 1801              	.L227:
2343:Middlewares/Third_Party/FatFs/src/ff.c **** 
2344:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* An FAT volume is found. Following code initializes the file system object */
2345:Middlewares/Third_Party/FatFs/src/ff.c **** 
2346:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (LD_WORD(fs->win.d8 + BPB_BytsPerSec) != SS(fs))	/* (BPB_BytsPerSec must be equal to the physic
 1802              		.loc 1 2346 0
 1803 00fa 2A7B     		ldrb	r2, [r5, #12]	@ zero_extendqisi2
 1804 00fc EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 1805 00fe 43EA0223 		orr	r3, r3, r2, lsl #8
 1806 0102 1BB2     		sxth	r3, r3
 1807 0104 B3F5007F 		cmp	r3, #512
 1808 0108 01D0     		beq	.L230
2347:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1809              		.loc 1 2347 0
 1810 010a 0D20     		movs	r0, #13
 1811              	.LVL238:
 1812 010c 13E1     		b	.L181
 1813              	.LVL239:
 1814              	.L230:
2348:Middlewares/Third_Party/FatFs/src/ff.c **** 
2349:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize = LD_WORD(fs->win.d8 + BPB_FATSz16);			/* Number of sectors per FAT */
 1815              		.loc 1 2349 0
 1816 010e EB7D     		ldrb	r3, [r5, #23]	@ zero_extendqisi2
 1817 0110 AA7D     		ldrb	r2, [r5, #22]	@ zero_extendqisi2
 1818              	.LVL240:
2350:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fasize) fasize = LD_DWORD(fs->win.d8 + BPB_FATSz32);
 1819              		.loc 1 2350 0
 1820 0112 52EA0322 		orrs	r2, r2, r3, lsl #8
 1821              	.LVL241:
 1822 0116 0DD1     		bne	.L190
 1823              		.loc 1 2350 0 is_stmt 0 discriminator 1
 1824 0118 95F82730 		ldrb	r3, [r5, #39]	@ zero_extendqisi2
 1825 011c 95F82620 		ldrb	r2, [r5, #38]	@ zero_extendqisi2
 1826              	.LVL242:
 1827 0120 1204     		lsls	r2, r2, #16
 1828 0122 42EA0362 		orr	r2, r2, r3, lsl #24
 1829 0126 95F82530 		ldrb	r3, [r5, #37]	@ zero_extendqisi2
 1830 012a 42EA0322 		orr	r2, r2, r3, lsl #8
 1831 012e 95F82430 		ldrb	r3, [r5, #36]	@ zero_extendqisi2
 1832 0132 1A43     		orrs	r2, r2, r3
 1833              	.LVL243:
 1834              	.L190:
2351:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsize = fasize;
 1835              		.loc 1 2351 0 is_stmt 1
 1836 0134 C5F81C22 		str	r2, [r5, #540]
2352:Middlewares/Third_Party/FatFs/src/ff.c **** 
2353:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fats = fs->win.d8[BPB_NumFATs];					/* Number of FAT copies */
 1837              		.loc 1 2353 0
 1838 0138 297C     		ldrb	r1, [r5, #16]	@ zero_extendqisi2
 1839 013a 85F80312 		strb	r1, [r5, #515]
2354:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_fats != 1 && fs->n_fats != 2)				/* (Must be 1 or 2) */
 1840              		.loc 1 2354 0
 1841 013e 4B1E     		subs	r3, r1, #1
 1842 0140 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cckAXl85.s 			page 76


 1843 0142 012B     		cmp	r3, #1
 1844 0144 01D9     		bls	.L231
2355:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1845              		.loc 1 2355 0
 1846 0146 0D20     		movs	r0, #13
 1847              	.LVL244:
 1848 0148 F5E0     		b	.L181
 1849              	.LVL245:
 1850              	.L231:
2356:Middlewares/Third_Party/FatFs/src/ff.c **** 	fasize *= fs->n_fats;								/* Number of sectors for FAT area */
 1851              		.loc 1 2356 0
 1852 014a 01FB02F1 		mul	r1, r1, r2
 1853              	.LVL246:
2357:Middlewares/Third_Party/FatFs/src/ff.c **** 
2358:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->csize = fs->win.d8[BPB_SecPerClus];				/* Number of sectors per cluster */
 1854              		.loc 1 2358 0
 1855 014e 6C7B     		ldrb	r4, [r5, #13]	@ zero_extendqisi2
 1856 0150 85F80242 		strb	r4, [r5, #514]
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
 1857              		.loc 1 2359 0
 1858 0154 0CB9     		cbnz	r4, .L232
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
 1859              		.loc 1 2360 0
 1860 0156 0D20     		movs	r0, #13
 1861              	.LVL247:
 1862 0158 EDE0     		b	.L181
 1863              	.LVL248:
 1864              	.L232:
2359:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs->csize || (fs->csize & (fs->csize - 1)))	/* (Must be power of 2) */
 1865              		.loc 1 2359 0 discriminator 1
 1866 015a 631E     		subs	r3, r4, #1
 1867 015c 1C42     		tst	r4, r3
 1868 015e 40F0FD80 		bne	.L213
2361:Middlewares/Third_Party/FatFs/src/ff.c **** 
2362:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_rootdir = LD_WORD(fs->win.d8 + BPB_RootEntCnt);	/* Number of root directory entries */
 1869              		.loc 1 2362 0
 1870 0162 AB7C     		ldrb	r3, [r5, #18]	@ zero_extendqisi2
 1871 0164 687C     		ldrb	r0, [r5, #17]	@ zero_extendqisi2
 1872              	.LVL249:
 1873 0166 40EA0320 		orr	r0, r0, r3, lsl #8
 1874 016a A5F80802 		strh	r0, [r5, #520]	@ movhi
2363:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->n_rootdir % (SS(fs) / SZ_DIRE))				/* (Must be sector aligned) */
 1875              		.loc 1 2363 0
 1876 016e 10F00F0F 		tst	r0, #15
 1877 0172 40F0F580 		bne	.L214
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2365:Middlewares/Third_Party/FatFs/src/ff.c **** 
2366:Middlewares/Third_Party/FatFs/src/ff.c **** 	tsect = LD_WORD(fs->win.d8 + BPB_TotSec16);			/* Number of sectors on the volume */
 1878              		.loc 1 2366 0
 1879 0176 2F7D     		ldrb	r7, [r5, #20]	@ zero_extendqisi2
 1880 0178 EB7C     		ldrb	r3, [r5, #19]	@ zero_extendqisi2
 1881              	.LVL250:
2367:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!tsect) tsect = LD_DWORD(fs->win.d8 + BPB_TotSec32);
 1882              		.loc 1 2367 0
 1883 017a 53EA0723 		orrs	r3, r3, r7, lsl #8
 1884              	.LVL251:
 1885 017e 0DD1     		bne	.L191
ARM GAS  /tmp/cckAXl85.s 			page 77


 1886              		.loc 1 2367 0 is_stmt 0 discriminator 1
 1887 0180 95F82370 		ldrb	r7, [r5, #35]	@ zero_extendqisi2
 1888 0184 95F82230 		ldrb	r3, [r5, #34]	@ zero_extendqisi2
 1889              	.LVL252:
 1890 0188 1B04     		lsls	r3, r3, #16
 1891 018a 43EA0763 		orr	r3, r3, r7, lsl #24
 1892 018e 95F82170 		ldrb	r7, [r5, #33]	@ zero_extendqisi2
 1893 0192 43EA0723 		orr	r3, r3, r7, lsl #8
 1894 0196 95F82070 		ldrb	r7, [r5, #32]	@ zero_extendqisi2
 1895 019a 3B43     		orrs	r3, r3, r7
 1896              	.LVL253:
 1897              	.L191:
2368:Middlewares/Third_Party/FatFs/src/ff.c **** 
2369:Middlewares/Third_Party/FatFs/src/ff.c **** 	nrsv = LD_WORD(fs->win.d8 + BPB_RsvdSecCnt);			/* Number of reserved sectors */
 1898              		.loc 1 2369 0 is_stmt 1
 1899 019c 95F80FE0 		ldrb	lr, [r5, #15]	@ zero_extendqisi2
 1900 01a0 AF7B     		ldrb	r7, [r5, #14]	@ zero_extendqisi2
 1901              	.LVL254:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nrsv) return FR_NO_FILESYSTEM;					/* (Must not be 0) */
 1902              		.loc 1 2370 0
 1903 01a2 57EA0E27 		orrs	r7, r7, lr, lsl #8
 1904              	.LVL255:
 1905 01a6 00F0DD80 		beq	.L215
2371:Middlewares/Third_Party/FatFs/src/ff.c **** 
2372:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine the FAT sub type */
2373:Middlewares/Third_Party/FatFs/src/ff.c **** 	sysect = nrsv + fasize + fs->n_rootdir / (SS(fs) / SZ_DIRE);	/* RSV + FAT + DIR */
 1906              		.loc 1 2373 0
 1907 01aa 01EB070E 		add	lr, r1, r7
 1908              	.LVL256:
 1909 01ae 0EEB101E 		add	lr, lr, r0, lsr #4
 1910              	.LVL257:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (tsect < sysect) return FR_NO_FILESYSTEM;		/* (Invalid volume size) */
 1911              		.loc 1 2374 0
 1912 01b2 7345     		cmp	r3, lr
 1913 01b4 C0F0D880 		bcc	.L216
2375:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 1914              		.loc 1 2375 0
 1915 01b8 A3EB0E03 		sub	r3, r3, lr
 1916              	.LVL258:
 1917 01bc B3FBF4F3 		udiv	r3, r3, r4
 1918              	.LVL259:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!nclst) return FR_NO_FILESYSTEM;				/* (Invalid volume size) */
 1919              		.loc 1 2376 0
 1920 01c0 002B     		cmp	r3, #0
 1921 01c2 00F0D380 		beq	.L217
 1922              	.LVL260:
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT16) fmt = FS_FAT16;
 1923              		.loc 1 2378 0
 1924 01c6 40F6F574 		movw	r4, #4085
 1925 01ca A342     		cmp	r3, r4
 1926 01cc 00F2A180 		bhi	.L218
2377:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 1927              		.loc 1 2377 0
 1928 01d0 0124     		movs	r4, #1
 1929              	.L192:
 1930              	.LVL261:
ARM GAS  /tmp/cckAXl85.s 			page 78


2379:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 1931              		.loc 1 2379 0
 1932 01d2 4FF6F57C 		movw	ip, #65525
 1933 01d6 6345     		cmp	r3, ip
 1934 01d8 00D9     		bls	.L193
 1935 01da 0324     		movs	r4, #3
 1936              	.LVL262:
 1937              	.L193:
2380:Middlewares/Third_Party/FatFs/src/ff.c **** 
2381:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Boundaries and Limits */
2382:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->n_fatent = nclst + 2;							/* Number of FAT entries */
 1938              		.loc 1 2382 0
 1939 01dc 0233     		adds	r3, r3, #2
 1940              	.LVL263:
 1941 01de C5F81832 		str	r3, [r5, #536]
2383:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->volbase = bsect;								/* Volume start sector */
 1942              		.loc 1 2383 0
 1943 01e2 C5F82062 		str	r6, [r5, #544]
2384:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fatbase = bsect + nrsv; 						/* FAT start sector */
 1944              		.loc 1 2384 0
 1945 01e6 3744     		add	r7, r7, r6
 1946 01e8 C5F82472 		str	r7, [r5, #548]
2385:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->database = bsect + sysect;						/* Data start sector */
 1947              		.loc 1 2385 0
 1948 01ec B644     		add	lr, lr, r6
 1949              	.LVL264:
 1950 01ee C5F82CE2 		str	lr, [r5, #556]
2386:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 1951              		.loc 1 2386 0
 1952 01f2 032C     		cmp	r4, #3
 1953 01f4 40F08F80 		bne	.L194
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->n_rootdir) return FR_NO_FILESYSTEM;		/* (BPB_RootEntCnt must be 0) */
 1954              		.loc 1 2387 0
 1955 01f8 0028     		cmp	r0, #0
 1956 01fa 40F0B980 		bne	.L220
2388:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 1957              		.loc 1 2388 0
 1958 01fe 95F82F00 		ldrb	r0, [r5, #47]	@ zero_extendqisi2
 1959              	.LVL265:
 1960 0202 95F82E10 		ldrb	r1, [r5, #46]	@ zero_extendqisi2
 1961              	.LVL266:
 1962 0206 0904     		lsls	r1, r1, #16
 1963 0208 41EA0061 		orr	r1, r1, r0, lsl #24
 1964 020c 95F82D00 		ldrb	r0, [r5, #45]	@ zero_extendqisi2
 1965 0210 41EA0021 		orr	r1, r1, r0, lsl #8
 1966 0214 95F82C00 		ldrb	r0, [r5, #44]	@ zero_extendqisi2
 1967 0218 0143     		orrs	r1, r1, r0
 1968 021a C5F82812 		str	r1, [r5, #552]
2389:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = fs->n_fatent * 4;						/* (Needed FAT size) */
 1969              		.loc 1 2389 0
 1970 021e 9B00     		lsls	r3, r3, #2
 1971              	.LVL267:
 1972              	.L195:
2390:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fs->n_rootdir)	return FR_NO_FILESYSTEM;	/* (BPB_RootEntCnt must not be 0) */
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
2393:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
ARM GAS  /tmp/cckAXl85.s 			page 79


2394:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
2395:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2396:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs->fsize < (szbfat + (SS(fs) - 1)) / SS(fs))	/* (BPB_FATSz must not be less than the size nee
 1973              		.loc 1 2396 0
 1974 0220 03F2FF13 		addw	r3, r3, #511
 1975              	.LVL268:
 1976 0224 B2EB532F 		cmp	r2, r3, lsr #9
 1977 0228 C0F0A680 		bcc	.L222
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILESYSTEM;
2398:Middlewares/Third_Party/FatFs/src/ff.c **** 
2399:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2400:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize cluster allocation information */
2401:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->last_clust = fs->free_clust = 0xFFFFFFFF;
 1978              		.loc 1 2401 0
 1979 022c 4FF0FF33 		mov	r3, #-1
 1980              	.LVL269:
 1981 0230 C5F81432 		str	r3, [r5, #532]
 1982 0234 C5F81032 		str	r3, [r5, #528]
2402:Middlewares/Third_Party/FatFs/src/ff.c **** 
2403:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get fsinfo if available */
2404:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fsi_flag = 0x80;
 1983              		.loc 1 2404 0
 1984 0238 8023     		movs	r3, #128
 1985 023a 85F80532 		strb	r3, [r5, #517]
2405:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 3) != 3
2406:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32				/* Enable FSINFO only if FAT32 and BPB_FSInfo is 1 */
 1986              		.loc 1 2406 0
 1987 023e 032C     		cmp	r4, #3
 1988 0240 59D1     		bne	.L197
2407:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& LD_WORD(fs->win.d8 + BPB_FSInfo) == 1
 1989              		.loc 1 2407 0
 1990 0242 95F83120 		ldrb	r2, [r5, #49]	@ zero_extendqisi2
 1991              	.LVL270:
 1992 0246 95F83030 		ldrb	r3, [r5, #48]	@ zero_extendqisi2
 1993 024a 43EA0223 		orr	r3, r3, r2, lsl #8
 1994 024e 1BB2     		sxth	r3, r3
 1995 0250 012B     		cmp	r3, #1
 1996 0252 50D1     		bne	.L197
2408:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& move_window(fs, bsect + 1) == FR_OK)
 1997              		.loc 1 2408 0
 1998 0254 711C     		adds	r1, r6, #1
 1999 0256 2846     		mov	r0, r5
 2000 0258 FFF7FEFF 		bl	move_window
 2001              	.LVL271:
 2002 025c 0028     		cmp	r0, #0
 2003 025e 4AD1     		bne	.L197
2409:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2410:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fsi_flag = 0;
 2004              		.loc 1 2410 0
 2005 0260 0023     		movs	r3, #0
 2006 0262 85F80532 		strb	r3, [r5, #517]
2411:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) == 0xAA55	/* Load FSINFO data if available */
 2007              		.loc 1 2411 0
 2008 0266 95F8FF21 		ldrb	r2, [r5, #511]	@ zero_extendqisi2
 2009 026a 95F8FE31 		ldrb	r3, [r5, #510]	@ zero_extendqisi2
 2010 026e 43EA0223 		orr	r3, r3, r2, lsl #8
 2011 0272 1BB2     		sxth	r3, r3
ARM GAS  /tmp/cckAXl85.s 			page 80


 2012 0274 324A     		ldr	r2, .L233+4
 2013 0276 9342     		cmp	r3, r2
 2014 0278 3DD1     		bne	.L197
2412:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_LeadSig) == 0x41615252
 2015              		.loc 1 2412 0
 2016 027a EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2017 027c AB78     		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2018 027e 1B04     		lsls	r3, r3, #16
 2019 0280 43EA0263 		orr	r3, r3, r2, lsl #24
 2020 0284 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2021 0286 43EA0223 		orr	r3, r3, r2, lsl #8
 2022 028a 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2023 028c 1343     		orrs	r3, r3, r2
 2024 028e 2D4A     		ldr	r2, .L233+8
 2025 0290 9342     		cmp	r3, r2
 2026 0292 30D1     		bne	.L197
2413:Middlewares/Third_Party/FatFs/src/ff.c **** 			&& LD_DWORD(fs->win.d8 + FSI_StrucSig) == 0x61417272)
 2027              		.loc 1 2413 0
 2028 0294 95F8E721 		ldrb	r2, [r5, #487]	@ zero_extendqisi2
 2029 0298 95F8E631 		ldrb	r3, [r5, #486]	@ zero_extendqisi2
 2030 029c 1B04     		lsls	r3, r3, #16
 2031 029e 43EA0263 		orr	r3, r3, r2, lsl #24
 2032 02a2 95F8E521 		ldrb	r2, [r5, #485]	@ zero_extendqisi2
 2033 02a6 43EA0223 		orr	r3, r3, r2, lsl #8
 2034 02aa 95F8E421 		ldrb	r2, [r5, #484]	@ zero_extendqisi2
 2035 02ae 1343     		orrs	r3, r3, r2
 2036 02b0 254A     		ldr	r2, .L233+12
 2037 02b2 9342     		cmp	r3, r2
 2038 02b4 1FD1     		bne	.L197
2414:Middlewares/Third_Party/FatFs/src/ff.c **** 		{
2415:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 1) == 0
2416:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = LD_DWORD(fs->win.d8 + FSI_Free_Count);
 2039              		.loc 1 2416 0
 2040 02b6 95F8EB21 		ldrb	r2, [r5, #491]	@ zero_extendqisi2
 2041 02ba 95F8EA31 		ldrb	r3, [r5, #490]	@ zero_extendqisi2
 2042 02be 1B04     		lsls	r3, r3, #16
 2043 02c0 43EA0263 		orr	r3, r3, r2, lsl #24
 2044 02c4 95F8E921 		ldrb	r2, [r5, #489]	@ zero_extendqisi2
 2045 02c8 43EA0223 		orr	r3, r3, r2, lsl #8
 2046 02cc 95F8E821 		ldrb	r2, [r5, #488]	@ zero_extendqisi2
 2047 02d0 1343     		orrs	r3, r3, r2
 2048 02d2 C5F81432 		str	r3, [r5, #532]
2417:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2418:Middlewares/Third_Party/FatFs/src/ff.c **** #if (_FS_NOFSINFO & 2) == 0
2419:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->last_clust = LD_DWORD(fs->win.d8 + FSI_Nxt_Free);
 2049              		.loc 1 2419 0
 2050 02d6 95F8EF21 		ldrb	r2, [r5, #495]	@ zero_extendqisi2
 2051 02da 95F8EE31 		ldrb	r3, [r5, #494]	@ zero_extendqisi2
 2052 02de 1B04     		lsls	r3, r3, #16
 2053 02e0 43EA0263 		orr	r3, r3, r2, lsl #24
 2054 02e4 95F8ED21 		ldrb	r2, [r5, #493]	@ zero_extendqisi2
 2055 02e8 43EA0223 		orr	r3, r3, r2, lsl #8
 2056 02ec 95F8EC21 		ldrb	r2, [r5, #492]	@ zero_extendqisi2
 2057 02f0 1343     		orrs	r3, r3, r2
 2058 02f2 C5F81032 		str	r3, [r5, #528]
 2059              	.L197:
2420:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cckAXl85.s 			page 81


2421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2422:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2423:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2424:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2425:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = fmt;	/* FAT sub-type */
 2060              		.loc 1 2425 0
 2061 02f6 85F80042 		strb	r4, [r5, #512]
2426:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->id = ++Fsid;	/* File system mount ID */
 2062              		.loc 1 2426 0
 2063 02fa 144A     		ldr	r2, .L233+16
 2064 02fc 1388     		ldrh	r3, [r2]
 2065 02fe 0133     		adds	r3, r3, #1
 2066 0300 9BB2     		uxth	r3, r3
 2067 0302 1380     		strh	r3, [r2]	@ movhi
 2068 0304 A5F80632 		strh	r3, [r5, #518]	@ movhi
2427:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
2428:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->cdir = 0;		/* Set current directory to root */
2429:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2430:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK			/* Clear file lock semaphores */
2431:Middlewares/Third_Party/FatFs/src/ff.c **** 	clear_lock(fs);
 2069              		.loc 1 2431 0
 2070 0308 2846     		mov	r0, r5
 2071 030a FFF7FEFF 		bl	clear_lock
 2072              	.LVL272:
2432:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2433:Middlewares/Third_Party/FatFs/src/ff.c **** 
2434:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 2073              		.loc 1 2434 0
 2074 030e 0020     		movs	r0, #0
 2075 0310 11E0     		b	.L181
 2076              	.LVL273:
 2077              	.L218:
2378:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (nclst >= MIN_FAT32) fmt = FS_FAT32;
 2078              		.loc 1 2378 0
 2079 0312 0224     		movs	r4, #2
 2080 0314 5DE7     		b	.L192
 2081              	.LVL274:
 2082              	.L194:
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 2083              		.loc 1 2391 0
 2084 0316 68B3     		cbz	r0, .L221
2392:Middlewares/Third_Party/FatFs/src/ff.c **** 		szbfat = (fmt == FS_FAT16) ?					/* (Needed FAT size) */
 2085              		.loc 1 2392 0
 2086 0318 3944     		add	r1, r1, r7
 2087              	.LVL275:
 2088 031a C5F82812 		str	r1, [r5, #552]
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2089              		.loc 1 2394 0
 2090 031e 022C     		cmp	r4, #2
 2091 0320 01D1     		bne	.L196
2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2092              		.loc 1 2394 0 is_stmt 0 discriminator 1
 2093 0322 5B00     		lsls	r3, r3, #1
 2094              	.LVL276:
 2095 0324 7CE7     		b	.L195
 2096              	.LVL277:
 2097              	.L196:
ARM GAS  /tmp/cckAXl85.s 			page 82


2394:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2098              		.loc 1 2394 0 discriminator 2
 2099 0326 03EB4301 		add	r1, r3, r3, lsl #1
 2100 032a 03F00103 		and	r3, r3, #1
 2101              	.LVL278:
 2102 032e 03EB5103 		add	r3, r3, r1, lsr #1
 2103 0332 75E7     		b	.L195
 2104              	.LVL279:
 2105              	.L198:
2294:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2106              		.loc 1 2294 0 is_stmt 1
 2107 0334 0B20     		movs	r0, #11
 2108              	.LVL280:
 2109              	.L181:
2435:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2110              		.loc 1 2435 0
 2111 0336 05B0     		add	sp, sp, #20
 2112              	.LCFI24:
 2113              		.cfi_remember_state
 2114              		.cfi_def_cfa_offset 20
 2115              		@ sp needed
 2116 0338 F0BD     		pop	{r4, r5, r6, r7, pc}
 2117              	.L234:
 2118 033a 00BF     		.align	2
 2119              	.L233:
 2120 033c 00000000 		.word	.LANCHOR2
 2121 0340 55AAFFFF 		.word	-21931
 2122 0344 52526141 		.word	1096897106
 2123 0348 72724161 		.word	1631679090
 2124 034c 00000000 		.word	.LANCHOR3
 2125              	.LVL281:
 2126              	.L199:
 2127              	.LCFI25:
 2128              		.cfi_restore_state
2298:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2129              		.loc 1 2298 0
 2130 0350 0C20     		movs	r0, #12
 2131              	.LVL282:
 2132 0352 F0E7     		b	.L181
 2133              	.LVL283:
 2134              	.L201:
2308:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2135              		.loc 1 2308 0
 2136 0354 0020     		movs	r0, #0
 2137              	.LVL284:
 2138 0356 EEE7     		b	.L181
 2139              	.LVL285:
 2140              	.L208:
2341:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt) return FR_NO_FILESYSTEM;		/* No FAT volume is found */
 2141              		.loc 1 2341 0
 2142 0358 0120     		movs	r0, #1
 2143              	.LVL286:
 2144 035a ECE7     		b	.L181
 2145              	.LVL287:
 2146              	.L213:
2360:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2147              		.loc 1 2360 0
ARM GAS  /tmp/cckAXl85.s 			page 83


 2148 035c 0D20     		movs	r0, #13
 2149              	.LVL288:
 2150 035e EAE7     		b	.L181
 2151              	.L214:
2364:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2152              		.loc 1 2364 0
 2153 0360 0D20     		movs	r0, #13
 2154 0362 E8E7     		b	.L181
 2155              	.LVL289:
 2156              	.L215:
2370:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2157              		.loc 1 2370 0
 2158 0364 0D20     		movs	r0, #13
 2159 0366 E6E7     		b	.L181
 2160              	.LVL290:
 2161              	.L216:
2374:Middlewares/Third_Party/FatFs/src/ff.c **** 	nclst = (tsect - sysect) / fs->csize;				/* Number of clusters */
 2162              		.loc 1 2374 0
 2163 0368 0D20     		movs	r0, #13
 2164 036a E4E7     		b	.L181
 2165              	.LVL291:
 2166              	.L217:
2376:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 2167              		.loc 1 2376 0
 2168 036c 0D20     		movs	r0, #13
 2169 036e E2E7     		b	.L181
 2170              	.LVL292:
 2171              	.L220:
2387:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = LD_DWORD(fs->win.d8 + BPB_RootClus);	/* Root directory start cluster */
 2172              		.loc 1 2387 0
 2173 0370 0D20     		movs	r0, #13
 2174              	.LVL293:
 2175 0372 E0E7     		b	.L181
 2176              	.LVL294:
 2177              	.L221:
2391:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->dirbase = fs->fatbase + fasize;				/* Root directory start sector */
 2178              		.loc 1 2391 0
 2179 0374 0D20     		movs	r0, #13
 2180              	.LVL295:
 2181 0376 DEE7     		b	.L181
 2182              	.LVL296:
 2183              	.L222:
2397:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2184              		.loc 1 2397 0
 2185 0378 0D20     		movs	r0, #13
 2186 037a DCE7     		b	.L181
 2187              		.cfi_endproc
 2188              	.LFE103:
 2190              		.section	.text.validate,"ax",%progbits
 2191              		.align	1
 2192              		.syntax unified
 2193              		.thumb
 2194              		.thumb_func
 2195              		.fpu softvfp
 2197              	validate:
 2198              	.LFB104:
2436:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 84


2437:Middlewares/Third_Party/FatFs/src/ff.c **** 
2438:Middlewares/Third_Party/FatFs/src/ff.c **** 
2439:Middlewares/Third_Party/FatFs/src/ff.c **** 
2440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2441:Middlewares/Third_Party/FatFs/src/ff.c **** /* Check if the file/directory object is valid or not                    */
2442:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2443:Middlewares/Third_Party/FatFs/src/ff.c **** 
2444:Middlewares/Third_Party/FatFs/src/ff.c **** static
2445:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT validate (	/* FR_OK(0): The object is valid, !=0: Invalid */
2446:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* obj		/* Pointer to the object FIL/DIR to check validity */
2447:Middlewares/Third_Party/FatFs/src/ff.c **** )
2448:Middlewares/Third_Party/FatFs/src/ff.c **** {
 2199              		.loc 1 2448 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203              	.LVL297:
2449:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
2450:Middlewares/Third_Party/FatFs/src/ff.c **** 
2451:Middlewares/Third_Party/FatFs/src/ff.c **** 
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (disk_status(fil->fs->drv) 
 2204              		.loc 1 2452 0
 2205 0000 F0B1     		cbz	r0, .L237
2448:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fil = (FIL*)obj;	/* Assuming offset of .fs and .id in the FIL/DIR structure is identical */
 2206              		.loc 1 2448 0 discriminator 1
 2207 0002 10B5     		push	{r4, lr}
 2208              	.LCFI26:
 2209              		.cfi_def_cfa_offset 8
 2210              		.cfi_offset 4, -8
 2211              		.cfi_offset 14, -4
 2212 0004 0446     		mov	r4, r0
 2213              		.loc 1 2452 0 discriminator 1
 2214 0006 0368     		ldr	r3, [r0]
 2215 0008 E3B1     		cbz	r3, .L238
 2216              		.loc 1 2452 0 is_stmt 0 discriminator 2
 2217 000a 93F80012 		ldrb	r1, [r3, #512]	@ zero_extendqisi2
 2218 000e 09B9     		cbnz	r1, .L247
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 2219              		.loc 1 2453 0 is_stmt 1
 2220 0010 0920     		movs	r0, #9
 2221              	.LVL298:
 2222 0012 10BD     		pop	{r4, pc}
 2223              	.LVL299:
 2224              	.L247:
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
 2225              		.loc 1 2452 0 discriminator 3
 2226 0014 B3F80602 		ldrh	r0, [r3, #518]
 2227              	.LVL300:
 2228 0018 A188     		ldrh	r1, [r4, #4]
 2229 001a 8842     		cmp	r0, r1
 2230 001c 01D0     		beq	.L248
 2231              		.loc 1 2453 0
 2232 001e 0920     		movs	r0, #9
 2233 0020 10BD     		pop	{r4, pc}
 2234              	.LVL301:
 2235              	.L248:
2452:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INVALID_OBJECT;
ARM GAS  /tmp/cckAXl85.s 			page 85


 2236              		.loc 1 2452 0 discriminator 4
 2237 0022 93F80102 		ldrb	r0, [r3, #513]	@ zero_extendqisi2
 2238 0026 FFF7FEFF 		bl	disk_status
 2239              	.LVL302:
 2240 002a 10F0010F 		tst	r0, #1
 2241 002e 01D0     		beq	.L249
 2242              		.loc 1 2453 0
 2243 0030 0920     		movs	r0, #9
 2244 0032 10BD     		pop	{r4, pc}
 2245              	.LVL303:
 2246              	.L249:
2454:Middlewares/Third_Party/FatFs/src/ff.c **** 
2455:Middlewares/Third_Party/FatFs/src/ff.c **** 	ENTER_FF(fil->fs);		/* Lock file system */
 2247              		.loc 1 2455 0
 2248 0034 2068     		ldr	r0, [r4]
 2249 0036 FFF7FEFF 		bl	lock_fs
 2250              	.LVL304:
 2251 003a 28B9     		cbnz	r0, .L242
 2252 003c 0F20     		movs	r0, #15
 2253 003e 10BD     		pop	{r4, pc}
 2254              	.LVL305:
 2255              	.L237:
 2256              	.LCFI27:
 2257              		.cfi_def_cfa_offset 0
 2258              		.cfi_restore 4
 2259              		.cfi_restore 14
2453:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2260              		.loc 1 2453 0
 2261 0040 0920     		movs	r0, #9
 2262              	.LVL306:
 2263 0042 7047     		bx	lr
 2264              	.LVL307:
 2265              	.L238:
 2266              	.LCFI28:
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 4, -8
 2269              		.cfi_offset 14, -4
 2270 0044 0920     		movs	r0, #9
 2271              	.LVL308:
 2272 0046 10BD     		pop	{r4, pc}
 2273              	.LVL309:
 2274              	.L242:
2456:Middlewares/Third_Party/FatFs/src/ff.c **** 
2457:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
 2275              		.loc 1 2457 0
 2276 0048 0020     		movs	r0, #0
2458:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2277              		.loc 1 2458 0
 2278 004a 10BD     		pop	{r4, pc}
 2279              		.cfi_endproc
 2280              	.LFE104:
 2282              		.section	.text.unlock_fs,"ax",%progbits
 2283              		.align	1
 2284              		.syntax unified
 2285              		.thumb
 2286              		.thumb_func
 2287              		.fpu softvfp
ARM GAS  /tmp/cckAXl85.s 			page 86


 2289              	unlock_fs:
 2290              	.LFB74:
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs &&
 2291              		.loc 1 642 0
 2292              		.cfi_startproc
 2293              		@ args = 0, pretend = 0, frame = 0
 2294              		@ frame_needed = 0, uses_anonymous_args = 0
 2295              	.LVL310:
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_NOT_ENABLED &&
 2296              		.loc 1 643 0
 2297 0000 68B1     		cbz	r0, .L253
 642:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs &&
 2298              		.loc 1 642 0 discriminator 1
 2299 0002 08B5     		push	{r3, lr}
 2300              	.LCFI29:
 2301              		.cfi_def_cfa_offset 8
 2302              		.cfi_offset 3, -8
 2303              		.cfi_offset 14, -4
 643:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_NOT_ENABLED &&
 2304              		.loc 1 643 0 discriminator 1
 2305 0004 0C29     		cmp	r1, #12
 2306 0006 09D0     		beq	.L250
 644:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_DRIVE &&
 2307              		.loc 1 644 0
 2308 0008 0B29     		cmp	r1, #11
 2309 000a 07D0     		beq	.L250
 645:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_INVALID_OBJECT &&
 2310              		.loc 1 645 0
 2311 000c 0929     		cmp	r1, #9
 2312 000e 05D0     		beq	.L250
 646:Middlewares/Third_Party/FatFs/src/ff.c **** 		res != FR_TIMEOUT) {
 2313              		.loc 1 646 0
 2314 0010 0F29     		cmp	r1, #15
 2315 0012 03D0     		beq	.L250
 648:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2316              		.loc 1 648 0
 2317 0014 D0F80C02 		ldr	r0, [r0, #524]
 2318              	.LVL311:
 2319 0018 FFF7FEFF 		bl	ff_rel_grant
 2320              	.LVL312:
 2321              	.L250:
 2322 001c 08BD     		pop	{r3, pc}
 2323              	.LVL313:
 2324              	.L253:
 2325              	.LCFI30:
 2326              		.cfi_def_cfa_offset 0
 2327              		.cfi_restore 3
 2328              		.cfi_restore 14
 2329 001e 7047     		bx	lr
 2330              		.cfi_endproc
 2331              	.LFE74:
 2333              		.section	.text.sync_fs,"ax",%progbits
 2334              		.align	1
 2335              		.syntax unified
 2336              		.thumb
 2337              		.thumb_func
 2338              		.fpu softvfp
ARM GAS  /tmp/cckAXl85.s 			page 87


 2340              	sync_fs:
 2341              	.LFB82:
 836:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 2342              		.loc 1 836 0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 0
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 2346              	.LVL314:
 2347 0000 38B5     		push	{r3, r4, r5, lr}
 2348              	.LCFI31:
 2349              		.cfi_def_cfa_offset 16
 2350              		.cfi_offset 3, -16
 2351              		.cfi_offset 4, -12
 2352              		.cfi_offset 5, -8
 2353              		.cfi_offset 14, -4
 2354 0002 0446     		mov	r4, r0
 840:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 2355              		.loc 1 840 0
 2356 0004 FFF7FEFF 		bl	sync_window
 2357              	.LVL315:
 841:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update FSINFO sector if needed */
 2358              		.loc 1 841 0
 2359 0008 0546     		mov	r5, r0
 2360 000a 58B9     		cbnz	r0, .L257
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 2361              		.loc 1 843 0
 2362 000c 94F80032 		ldrb	r3, [r4, #512]	@ zero_extendqisi2
 2363 0010 032B     		cmp	r3, #3
 2364 0012 09D0     		beq	.L261
 2365              	.LVL316:
 2366              	.L258:
 857:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_DISK_ERR;
 2367              		.loc 1 857 0
 2368 0014 0022     		movs	r2, #0
 2369 0016 1146     		mov	r1, r2
 2370 0018 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 2371 001c FFF7FEFF 		bl	disk_ioctl
 2372              	.LVL317:
 2373 0020 00B1     		cbz	r0, .L257
 858:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2374              		.loc 1 858 0
 2375 0022 0125     		movs	r5, #1
 2376              	.L257:
 2377              	.LVL318:
 862:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 2378              		.loc 1 862 0
 2379 0024 2846     		mov	r0, r5
 2380 0026 38BD     		pop	{r3, r4, r5, pc}
 2381              	.LVL319:
 2382              	.L261:
 843:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Create FSINFO structure */
 2383              		.loc 1 843 0 discriminator 1
 2384 0028 94F80532 		ldrb	r3, [r4, #517]	@ zero_extendqisi2
 2385 002c 012B     		cmp	r3, #1
 2386 002e F1D1     		bne	.L258
 845:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);
 2387              		.loc 1 845 0
ARM GAS  /tmp/cckAXl85.s 			page 88


 2388 0030 4FF40072 		mov	r2, #512
 2389 0034 0021     		movs	r1, #0
 2390 0036 2046     		mov	r0, r4
 2391              	.LVL320:
 2392 0038 FFF7FEFF 		bl	mem_set
 2393              	.LVL321:
 846:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_LeadSig, 0x41615252);
 2394              		.loc 1 846 0
 2395 003c 5523     		movs	r3, #85
 2396 003e 84F8FE31 		strb	r3, [r4, #510]
 2397 0042 AA23     		movs	r3, #170
 2398 0044 84F8FF31 		strb	r3, [r4, #511]
 847:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_StrucSig, 0x61417272);
 2399              		.loc 1 847 0
 2400 0048 5223     		movs	r3, #82
 2401 004a 2370     		strb	r3, [r4]
 2402 004c 6370     		strb	r3, [r4, #1]
 2403 004e 6123     		movs	r3, #97
 2404 0050 A370     		strb	r3, [r4, #2]
 2405 0052 4122     		movs	r2, #65
 2406 0054 E270     		strb	r2, [r4, #3]
 848:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Free_Count, fs->free_clust);
 2407              		.loc 1 848 0
 2408 0056 7221     		movs	r1, #114
 2409 0058 84F8E411 		strb	r1, [r4, #484]
 2410 005c 84F8E511 		strb	r1, [r4, #485]
 2411 0060 84F8E621 		strb	r2, [r4, #486]
 2412 0064 84F8E731 		strb	r3, [r4, #487]
 849:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(fs->win.d8 + FSI_Nxt_Free, fs->last_clust);
 2413              		.loc 1 849 0
 2414 0068 D4F81432 		ldr	r3, [r4, #532]
 2415 006c 84F8E831 		strb	r3, [r4, #488]
 2416 0070 C3F30722 		ubfx	r2, r3, #8, #8
 2417 0074 84F8E921 		strb	r2, [r4, #489]
 2418 0078 C3F30742 		ubfx	r2, r3, #16, #8
 2419 007c 84F8EA21 		strb	r2, [r4, #490]
 2420 0080 1B0E     		lsrs	r3, r3, #24
 2421 0082 84F8EB31 		strb	r3, [r4, #491]
 850:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write it into the FSINFO sector */
 2422              		.loc 1 850 0
 2423 0086 D4F81032 		ldr	r3, [r4, #528]
 2424 008a 84F8EC31 		strb	r3, [r4, #492]
 2425 008e C3F30722 		ubfx	r2, r3, #8, #8
 2426 0092 84F8ED21 		strb	r2, [r4, #493]
 2427 0096 C3F30742 		ubfx	r2, r3, #16, #8
 2428 009a 84F8EE21 		strb	r2, [r4, #494]
 2429 009e 1B0E     		lsrs	r3, r3, #24
 2430 00a0 84F8EF31 		strb	r3, [r4, #495]
 852:Middlewares/Third_Party/FatFs/src/ff.c **** 			disk_write(fs->drv, fs->win.d8, fs->winsect, 1);
 2431              		.loc 1 852 0
 2432 00a4 D4F82022 		ldr	r2, [r4, #544]
 2433 00a8 0132     		adds	r2, r2, #1
 2434 00aa C4F83022 		str	r2, [r4, #560]
 853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag = 0;
 2435              		.loc 1 853 0
 2436 00ae 0123     		movs	r3, #1
 2437 00b0 2146     		mov	r1, r4
ARM GAS  /tmp/cckAXl85.s 			page 89


 2438 00b2 94F80102 		ldrb	r0, [r4, #513]	@ zero_extendqisi2
 2439 00b6 FFF7FEFF 		bl	disk_write
 2440              	.LVL322:
 854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2441              		.loc 1 854 0
 2442 00ba 0023     		movs	r3, #0
 2443 00bc 84F80532 		strb	r3, [r4, #517]
 2444 00c0 A8E7     		b	.L258
 2445              		.cfi_endproc
 2446              	.LFE82:
 2448              		.section	.text.clust2sect,"ax",%progbits
 2449              		.align	1
 2450              		.global	clust2sect
 2451              		.syntax unified
 2452              		.thumb
 2453              		.thumb_func
 2454              		.fpu softvfp
 2456              	clust2sect:
 2457              	.LFB83:
 877:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst -= 2;
 2458              		.loc 1 877 0
 2459              		.cfi_startproc
 2460              		@ args = 0, pretend = 0, frame = 0
 2461              		@ frame_needed = 0, uses_anonymous_args = 0
 2462              		@ link register save eliminated.
 2463              	.LVL323:
 878:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst >= fs->n_fatent - 2) return 0;		/* Invalid cluster# */
 2464              		.loc 1 878 0
 2465 0000 0239     		subs	r1, r1, #2
 2466              	.LVL324:
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 2467              		.loc 1 879 0
 2468 0002 D0F81832 		ldr	r3, [r0, #536]
 2469 0006 023B     		subs	r3, r3, #2
 2470 0008 9942     		cmp	r1, r3
 2471 000a 06D2     		bcs	.L264
 880:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2472              		.loc 1 880 0
 2473 000c 90F80232 		ldrb	r3, [r0, #514]	@ zero_extendqisi2
 2474 0010 D0F82C02 		ldr	r0, [r0, #556]
 2475              	.LVL325:
 2476 0014 03FB0100 		mla	r0, r3, r1, r0
 2477 0018 7047     		bx	lr
 2478              	.LVL326:
 2479              	.L264:
 879:Middlewares/Third_Party/FatFs/src/ff.c **** 	return clst * fs->csize + fs->database;
 2480              		.loc 1 879 0
 2481 001a 0020     		movs	r0, #0
 2482              	.LVL327:
 881:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2483              		.loc 1 881 0
 2484 001c 7047     		bx	lr
 2485              		.cfi_endproc
 2486              	.LFE83:
 2488              		.section	.text.get_fat,"ax",%progbits
 2489              		.align	1
 2490              		.global	get_fat
ARM GAS  /tmp/cckAXl85.s 			page 90


 2491              		.syntax unified
 2492              		.thumb
 2493              		.thumb_func
 2494              		.fpu softvfp
 2496              	get_fat:
 2497              	.LFB84:
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2498              		.loc 1 895 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 0
 2501              		@ frame_needed = 0, uses_anonymous_args = 0
 2502              	.LVL328:
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2503              		.loc 1 901 0
 2504 0000 0129     		cmp	r1, #1
 2505 0002 66D9     		bls	.L271
 895:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wc, bc;
 2506              		.loc 1 895 0 discriminator 1
 2507 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2508              	.LCFI32:
 2509              		.cfi_def_cfa_offset 24
 2510              		.cfi_offset 3, -24
 2511              		.cfi_offset 4, -20
 2512              		.cfi_offset 5, -16
 2513              		.cfi_offset 6, -12
 2514              		.cfi_offset 7, -8
 2515              		.cfi_offset 14, -4
 901:Middlewares/Third_Party/FatFs/src/ff.c **** 		val = 1;	/* Internal error */
 2516              		.loc 1 901 0 discriminator 1
 2517 0006 D0F81832 		ldr	r3, [r0, #536]
 2518 000a 9942     		cmp	r1, r3
 2519 000c 63D2     		bcs	.L272
 2520 000e 0C46     		mov	r4, r1
 2521 0010 0646     		mov	r6, r0
 2522              	.LVL329:
 907:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2523              		.loc 1 907 0
 2524 0012 90F80032 		ldrb	r3, [r0, #512]	@ zero_extendqisi2
 2525 0016 022B     		cmp	r3, #2
 2526 0018 2DD0     		beq	.L267
 2527 001a 032B     		cmp	r3, #3
 2528 001c 3ED0     		beq	.L268
 2529 001e 012B     		cmp	r3, #1
 2530 0020 01D0     		beq	.L283
 930:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2531              		.loc 1 930 0
 2532 0022 0120     		movs	r0, #1
 2533              	.LVL330:
 2534 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2535              	.LVL331:
 2536              	.L283:
 909:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2537              		.loc 1 909 0
 2538 0026 01EB5105 		add	r5, r1, r1, lsr #1
 2539              	.LVL332:
 910:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc = fs->win.d8[bc++ % SS(fs)];
 2540              		.loc 1 910 0
ARM GAS  /tmp/cckAXl85.s 			page 91


 2541 002a D0F82412 		ldr	r1, [r0, #548]
 2542              	.LVL333:
 2543 002e 01EB5521 		add	r1, r1, r5, lsr #9
 2544 0032 FFF7FEFF 		bl	move_window
 2545              	.LVL334:
 2546 0036 10B1     		cbz	r0, .L284
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2547              		.loc 1 905 0
 2548 0038 4FF0FF30 		mov	r0, #-1
 2549 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2550              	.LVL335:
 2551              	.L284:
 911:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (move_window(fs, fs->fatbase + (bc / SS(fs))) != FR_OK) break;
 2552              		.loc 1 911 0
 2553 003e 6F1C     		adds	r7, r5, #1
 2554              	.LVL336:
 2555 0040 C5F30805 		ubfx	r5, r5, #0, #9
 2556 0044 755D     		ldrb	r5, [r6, r5]	@ zero_extendqisi2
 2557              	.LVL337:
 912:Middlewares/Third_Party/FatFs/src/ff.c **** 			wc |= fs->win.d8[bc % SS(fs)] << 8;
 2558              		.loc 1 912 0
 2559 0046 D6F82412 		ldr	r1, [r6, #548]
 2560 004a 01EB5721 		add	r1, r1, r7, lsr #9
 2561 004e 3046     		mov	r0, r6
 2562 0050 FFF7FEFF 		bl	move_window
 2563              	.LVL338:
 2564 0054 10B1     		cbz	r0, .L285
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2565              		.loc 1 905 0
 2566 0056 4FF0FF30 		mov	r0, #-1
 2567 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2568              	.LVL339:
 2569              	.L285:
 913:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 2570              		.loc 1 913 0
 2571 005c C7F30807 		ubfx	r7, r7, #0, #9
 2572              	.LVL340:
 2573 0060 F05D     		ldrb	r0, [r6, r7]	@ zero_extendqisi2
 2574 0062 45EA0020 		orr	r0, r5, r0, lsl #8
 2575              	.LVL341:
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2576              		.loc 1 914 0
 2577 0066 14F0010F 		tst	r4, #1
 2578 006a 01D0     		beq	.L270
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2579              		.loc 1 914 0 is_stmt 0 discriminator 1
 2580 006c 0009     		lsrs	r0, r0, #4
 2581              	.LVL342:
 2582 006e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2583              	.LVL343:
 2584              	.L270:
 914:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2585              		.loc 1 914 0 discriminator 2
 2586 0070 C0F30B00 		ubfx	r0, r0, #0, #12
 2587              	.LVL344:
 2588 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2589              	.LVL345:
ARM GAS  /tmp/cckAXl85.s 			page 92


 2590              	.L267:
 918:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 2591              		.loc 1 918 0 is_stmt 1
 2592 0076 D0F82412 		ldr	r1, [r0, #548]
 2593              	.LVL346:
 2594 007a 01EB1421 		add	r1, r1, r4, lsr #8
 2595 007e FFF7FEFF 		bl	move_window
 2596              	.LVL347:
 2597 0082 10B1     		cbz	r0, .L286
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2598              		.loc 1 905 0
 2599 0084 4FF0FF30 		mov	r0, #-1
 2600 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2601              	.LVL348:
 2602              	.L286:
 919:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_WORD(p);
 2603              		.loc 1 919 0
 2604 008a 6100     		lsls	r1, r4, #1
 2605 008c 01F4FF71 		and	r1, r1, #510
 2606 0090 7318     		adds	r3, r6, r1
 2607              	.LVL349:
 920:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2608              		.loc 1 920 0
 2609 0092 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2610              	.LVL350:
 2611 0094 705C     		ldrb	r0, [r6, r1]	@ zero_extendqisi2
 2612 0096 40EA0320 		orr	r0, r0, r3, lsl #8
 2613              	.LVL351:
 921:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2614              		.loc 1 921 0
 2615 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2616              	.LVL352:
 2617              	.L268:
 924:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 2618              		.loc 1 924 0
 2619 009c D0F82412 		ldr	r1, [r0, #548]
 2620              	.LVL353:
 2621 00a0 01EBD411 		add	r1, r1, r4, lsr #7
 2622 00a4 FFF7FEFF 		bl	move_window
 2623              	.LVL354:
 2624 00a8 10B1     		cbz	r0, .L287
 905:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2625              		.loc 1 905 0
 2626 00aa 4FF0FF30 		mov	r0, #-1
 935:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2627              		.loc 1 935 0
 2628 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2629              	.LVL355:
 2630              	.L287:
 925:Middlewares/Third_Party/FatFs/src/ff.c **** 			val = LD_DWORD(p) & 0x0FFFFFFF;
 2631              		.loc 1 925 0
 2632 00b0 A100     		lsls	r1, r4, #2
 2633 00b2 01F4FE71 		and	r1, r1, #508
 2634 00b6 7218     		adds	r2, r6, r1
 2635              	.LVL356:
 926:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 2636              		.loc 1 926 0
ARM GAS  /tmp/cckAXl85.s 			page 93


 2637 00b8 D078     		ldrb	r0, [r2, #3]	@ zero_extendqisi2
 2638 00ba 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 2639 00bc 1B04     		lsls	r3, r3, #16
 2640 00be 43EA0063 		orr	r3, r3, r0, lsl #24
 2641 00c2 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
 2642 00c4 43EA0023 		orr	r3, r3, r0, lsl #8
 2643 00c8 705C     		ldrb	r0, [r6, r1]	@ zero_extendqisi2
 2644 00ca 1843     		orrs	r0, r0, r3
 2645 00cc 20F07040 		bic	r0, r0, #-268435456
 2646              	.LVL357:
 927:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2647              		.loc 1 927 0
 2648 00d0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2649              	.LVL358:
 2650              	.L271:
 2651              	.LCFI33:
 2652              		.cfi_def_cfa_offset 0
 2653              		.cfi_restore 3
 2654              		.cfi_restore 4
 2655              		.cfi_restore 5
 2656              		.cfi_restore 6
 2657              		.cfi_restore 7
 2658              		.cfi_restore 14
 902:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2659              		.loc 1 902 0
 2660 00d2 0120     		movs	r0, #1
 2661              	.LVL359:
 2662 00d4 7047     		bx	lr
 2663              	.LVL360:
 2664              	.L272:
 2665              	.LCFI34:
 2666              		.cfi_def_cfa_offset 24
 2667              		.cfi_offset 3, -24
 2668              		.cfi_offset 4, -20
 2669              		.cfi_offset 5, -16
 2670              		.cfi_offset 6, -12
 2671              		.cfi_offset 7, -8
 2672              		.cfi_offset 14, -4
 2673 00d6 0120     		movs	r0, #1
 2674              	.LVL361:
 2675 00d8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2676              		.cfi_endproc
 2677              	.LFE84:
 2679              		.section	.text.dir_sdi,"ax",%progbits
 2680              		.align	1
 2681              		.syntax unified
 2682              		.thumb
 2683              		.thumb_func
 2684              		.fpu softvfp
 2686              	dir_sdi:
 2687              	.LFB89:
1157:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
 2688              		.loc 1 1157 0
 2689              		.cfi_startproc
 2690              		@ args = 0, pretend = 0, frame = 0
 2691              		@ frame_needed = 0, uses_anonymous_args = 0
 2692              	.LVL362:
ARM GAS  /tmp/cckAXl85.s 			page 94


 2693 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2694              	.LCFI35:
 2695              		.cfi_def_cfa_offset 24
 2696              		.cfi_offset 3, -24
 2697              		.cfi_offset 4, -20
 2698              		.cfi_offset 5, -16
 2699              		.cfi_offset 6, -12
 2700              		.cfi_offset 7, -8
 2701              		.cfi_offset 14, -4
 2702 0002 0546     		mov	r5, r0
1162:Middlewares/Third_Party/FatFs/src/ff.c **** 	clst = dp->sclust;		/* Table start cluster (0:root) */
 2703              		.loc 1 1162 0
 2704 0004 C180     		strh	r1, [r0, #6]	@ movhi
1163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (clst == 1 || clst >= dp->fs->n_fatent)	/* Check start cluster range */
 2705              		.loc 1 1163 0
 2706 0006 8468     		ldr	r4, [r0, #8]
 2707              	.LVL363:
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2708              		.loc 1 1164 0
 2709 0008 012C     		cmp	r4, #1
 2710 000a 42D0     		beq	.L295
 2711 000c 0E46     		mov	r6, r1
1164:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_INT_ERR;
 2712              		.loc 1 1164 0 is_stmt 0 discriminator 1
 2713 000e 0368     		ldr	r3, [r0]
 2714 0010 D3F81822 		ldr	r2, [r3, #536]
 2715 0014 9442     		cmp	r4, r2
 2716 0016 01D3     		bcc	.L303
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 2717              		.loc 1 1165 0 is_stmt 1
 2718 0018 0220     		movs	r0, #2
 2719              	.LVL364:
 2720 001a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2721              	.LVL365:
 2722              	.L303:
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 2723              		.loc 1 1166 0
 2724 001c 1CB9     		cbnz	r4, .L290
1166:Middlewares/Third_Party/FatFs/src/ff.c **** 		clst = dp->fs->dirbase;
 2725              		.loc 1 1166 0 is_stmt 0 discriminator 1
 2726 001e 93F80022 		ldrb	r2, [r3, #512]	@ zero_extendqisi2
 2727 0022 032A     		cmp	r2, #3
 2728 0024 06D0     		beq	.L304
 2729              	.L290:
1169:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (idx >= dp->fs->n_rootdir)	/* Is index out of range? */
 2730              		.loc 1 1169 0 is_stmt 1
 2731 0026 74B9     		cbnz	r4, .L291
1170:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_INT_ERR;
 2732              		.loc 1 1170 0
 2733 0028 B3F80822 		ldrh	r2, [r3, #520]
 2734 002c 9642     		cmp	r6, r2
 2735 002e 04D3     		bcc	.L305
1171:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = dp->fs->dirbase;
 2736              		.loc 1 1171 0
 2737 0030 0220     		movs	r0, #2
 2738              	.LVL366:
 2739 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/cckAXl85.s 			page 95


 2740              	.LVL367:
 2741              	.L304:
1167:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2742              		.loc 1 1167 0
 2743 0034 D3F82842 		ldr	r4, [r3, #552]
 2744              	.LVL368:
 2745 0038 F5E7     		b	.L290
 2746              	.L305:
1172:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2747              		.loc 1 1172 0
 2748 003a D3F82802 		ldr	r0, [r3, #552]
 2749              	.LVL369:
 2750              	.L292:
1185:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!sect) return FR_INT_ERR;
 2751              		.loc 1 1185 0
 2752 003e EC60     		str	r4, [r5, #12]
1186:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sect = sect + idx / (SS(dp->fs) / SZ_DIRE);					/* Sector# of the directory entry */
 2753              		.loc 1 1186 0
 2754 0040 E0B9     		cbnz	r0, .L306
 2755 0042 0220     		movs	r0, #2
 2756              	.LVL370:
1191:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2757              		.loc 1 1191 0
 2758 0044 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2759              	.LVL371:
 2760              	.L291:
1175:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (idx >= ic) {	/* Follow cluster chain */
 2761              		.loc 1 1175 0
 2762 0046 93F80272 		ldrb	r7, [r3, #514]	@ zero_extendqisi2
 2763 004a 3F01     		lsls	r7, r7, #4
 2764              	.LVL372:
 2765              	.L293:
1176:Middlewares/Third_Party/FatFs/src/ff.c **** 			clst = get_fat(dp->fs, clst);				/* Get next cluster */
 2766              		.loc 1 1176 0
 2767 004c BE42     		cmp	r6, r7
 2768 004e 10D3     		bcc	.L307
1177:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst == 0xFFFFFFFF) return FR_DISK_ERR;	/* Disk error */
 2769              		.loc 1 1177 0
 2770 0050 2146     		mov	r1, r4
 2771 0052 2868     		ldr	r0, [r5]
 2772 0054 FFF7FEFF 		bl	get_fat
 2773              	.LVL373:
 2774 0058 0446     		mov	r4, r0
 2775              	.LVL374:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 2776              		.loc 1 1178 0
 2777 005a B0F1FF3F 		cmp	r0, #-1
 2778 005e 1AD0     		beq	.L298
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 2779              		.loc 1 1179 0
 2780 0060 0128     		cmp	r0, #1
 2781 0062 1AD9     		bls	.L299
1179:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_INT_ERR;
 2782              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2783 0064 2B68     		ldr	r3, [r5]
 2784 0066 D3F81832 		ldr	r3, [r3, #536]
 2785 006a 9842     		cmp	r0, r3
ARM GAS  /tmp/cckAXl85.s 			page 96


 2786 006c 17D2     		bcs	.L300
1181:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2787              		.loc 1 1181 0 is_stmt 1
 2788 006e F61B     		subs	r6, r6, r7
 2789              	.LVL375:
 2790 0070 ECE7     		b	.L293
 2791              	.LVL376:
 2792              	.L307:
1183:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 2793              		.loc 1 1183 0
 2794 0072 2146     		mov	r1, r4
 2795 0074 2868     		ldr	r0, [r5]
 2796 0076 FFF7FEFF 		bl	clust2sect
 2797              	.LVL377:
 2798 007a E0E7     		b	.L292
 2799              	.LVL378:
 2800              	.L306:
1187:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (idx % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Ptr to the entry in the se
 2801              		.loc 1 1187 0
 2802 007c 00EB1610 		add	r0, r0, r6, lsr #4
 2803              	.LVL379:
 2804 0080 2861     		str	r0, [r5, #16]
1188:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2805              		.loc 1 1188 0
 2806 0082 2B68     		ldr	r3, [r5]
 2807 0084 06F00F06 		and	r6, r6, #15
 2808              	.LVL380:
 2809 0088 03EB4616 		add	r6, r3, r6, lsl #5
 2810 008c 6E61     		str	r6, [r5, #20]
1190:Middlewares/Third_Party/FatFs/src/ff.c **** }
 2811              		.loc 1 1190 0
 2812 008e 0020     		movs	r0, #0
 2813 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2814              	.LVL381:
 2815              	.L295:
1165:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!clst && dp->fs->fs_type == FS_FAT32)	/* Replace cluster# 0 with root cluster# if in FAT32 */
 2816              		.loc 1 1165 0
 2817 0092 0220     		movs	r0, #2
 2818              	.LVL382:
 2819 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2820              	.LVL383:
 2821              	.L298:
1178:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst < 2 || clst >= dp->fs->n_fatent)	/* Reached to end of table or internal error */
 2822              		.loc 1 1178 0
 2823 0096 0120     		movs	r0, #1
 2824              	.LVL384:
 2825 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2826              	.LVL385:
 2827              	.L299:
1180:Middlewares/Third_Party/FatFs/src/ff.c **** 			idx -= ic;
 2828              		.loc 1 1180 0
 2829 009a 0220     		movs	r0, #2
 2830              	.LVL386:
 2831 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2832              	.LVL387:
 2833              	.L300:
 2834 009e 0220     		movs	r0, #2
ARM GAS  /tmp/cckAXl85.s 			page 97


 2835              	.LVL388:
 2836 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2837              		.cfi_endproc
 2838              	.LFE89:
 2840              		.section	.text.dir_remove,"ax",%progbits
 2841              		.align	1
 2842              		.syntax unified
 2843              		.thumb
 2844              		.thumb_func
 2845              		.fpu softvfp
 2847              	dir_remove:
 2848              	.LFB97:
1729:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 2849              		.loc 1 1729 0
 2850              		.cfi_startproc
 2851              		@ args = 0, pretend = 0, frame = 0
 2852              		@ frame_needed = 0, uses_anonymous_args = 0
 2853              	.LVL389:
 2854 0000 38B5     		push	{r3, r4, r5, lr}
 2855              	.LCFI36:
 2856              		.cfi_def_cfa_offset 16
 2857              		.cfi_offset 3, -16
 2858              		.cfi_offset 4, -12
 2859              		.cfi_offset 5, -8
 2860              		.cfi_offset 14, -4
 2861 0002 0446     		mov	r4, r0
1750:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 2862              		.loc 1 1750 0
 2863 0004 C188     		ldrh	r1, [r0, #6]
 2864 0006 FFF7FEFF 		bl	dir_sdi
 2865              	.LVL390:
1751:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 2866              		.loc 1 1751 0
 2867 000a 0546     		mov	r5, r0
 2868 000c 08B1     		cbz	r0, .L311
 2869              	.LVL391:
 2870              	.L309:
1762:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 2871              		.loc 1 1762 0
 2872 000e 2846     		mov	r0, r5
 2873 0010 38BD     		pop	{r3, r4, r5, pc}
 2874              	.LVL392:
 2875              	.L311:
1752:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 2876              		.loc 1 1752 0
 2877 0012 2169     		ldr	r1, [r4, #16]
 2878 0014 2068     		ldr	r0, [r4]
 2879              	.LVL393:
 2880 0016 FFF7FEFF 		bl	move_window
 2881              	.LVL394:
1753:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clear and mark the entry "deleted" */
 2882              		.loc 1 1753 0
 2883 001a 0546     		mov	r5, r0
 2884 001c 0028     		cmp	r0, #0
 2885 001e F6D1     		bne	.L309
1754:Middlewares/Third_Party/FatFs/src/ff.c **** 			*dp->dir = DDEM;
 2886              		.loc 1 1754 0
ARM GAS  /tmp/cckAXl85.s 			page 98


 2887 0020 2022     		movs	r2, #32
 2888 0022 0021     		movs	r1, #0
 2889 0024 6069     		ldr	r0, [r4, #20]
 2890              	.LVL395:
 2891 0026 FFF7FEFF 		bl	mem_set
 2892              	.LVL396:
1755:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs->wflag = 1;
 2893              		.loc 1 1755 0
 2894 002a 6369     		ldr	r3, [r4, #20]
 2895 002c E522     		movs	r2, #229
 2896 002e 1A70     		strb	r2, [r3]
1756:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2897              		.loc 1 1756 0
 2898 0030 2368     		ldr	r3, [r4]
 2899 0032 0122     		movs	r2, #1
 2900 0034 83F80422 		strb	r2, [r3, #516]
 2901 0038 E9E7     		b	.L309
 2902              		.cfi_endproc
 2903              	.LFE97:
 2905              		.section	.text.put_fat,"ax",%progbits
 2906              		.align	1
 2907              		.global	put_fat
 2908              		.syntax unified
 2909              		.thumb
 2910              		.thumb_func
 2911              		.fpu softvfp
 2913              	put_fat:
 2914              	.LFB85:
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2915              		.loc 1 951 0
 2916              		.cfi_startproc
 2917              		@ args = 0, pretend = 0, frame = 0
 2918              		@ frame_needed = 0, uses_anonymous_args = 0
 2919              	.LVL397:
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 2920              		.loc 1 957 0
 2921 0000 0129     		cmp	r1, #1
 2922 0002 40F28C80 		bls	.L321
 957:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 2923              		.loc 1 957 0 is_stmt 0 discriminator 1
 2924 0006 D0F81832 		ldr	r3, [r0, #536]
 2925 000a 9942     		cmp	r1, r3
 2926 000c 01D3     		bcc	.L329
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 2927              		.loc 1 958 0 is_stmt 1
 2928 000e 0223     		movs	r3, #2
 2929 0010 86E0     		b	.L326
 2930              	.L329:
 951:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bc;
 2931              		.loc 1 951 0
 2932 0012 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2933              	.LCFI37:
 2934              		.cfi_def_cfa_offset 24
 2935              		.cfi_offset 4, -24
 2936              		.cfi_offset 5, -20
 2937              		.cfi_offset 6, -16
 2938              		.cfi_offset 7, -12
ARM GAS  /tmp/cckAXl85.s 			page 99


 2939              		.cfi_offset 8, -8
 2940              		.cfi_offset 14, -4
 2941 0016 1646     		mov	r6, r2
 2942 0018 0C46     		mov	r4, r1
 2943 001a 0546     		mov	r5, r0
 961:Middlewares/Third_Party/FatFs/src/ff.c **** 		case FS_FAT12 :
 2944              		.loc 1 961 0
 2945 001c 90F80032 		ldrb	r3, [r0, #512]	@ zero_extendqisi2
 2946 0020 022B     		cmp	r3, #2
 2947 0022 45D0     		beq	.L314
 2948 0024 032B     		cmp	r3, #3
 2949 0026 58D0     		beq	.L315
 2950 0028 012B     		cmp	r3, #1
 2951 002a 03D0     		beq	.L330
 994:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 2952              		.loc 1 994 0
 2953 002c 0223     		movs	r3, #2
 2954              	.LVL398:
 2955              	.L313:
 999:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 2956              		.loc 1 999 0
 2957 002e 1846     		mov	r0, r3
 2958 0030 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2959              	.LVL399:
 2960              	.L330:
 963:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2961              		.loc 1 963 0
 2962 0034 01EB5107 		add	r7, r1, r1, lsr #1
 2963              	.LVL400:
 964:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2964              		.loc 1 964 0
 2965 0038 D0F82412 		ldr	r1, [r0, #548]
 2966              	.LVL401:
 2967 003c 01EB5721 		add	r1, r1, r7, lsr #9
 2968 0040 FFF7FEFF 		bl	move_window
 2969              	.LVL402:
 965:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc++ % SS(fs)];
 2970              		.loc 1 965 0
 2971 0044 0346     		mov	r3, r0
 2972 0046 0028     		cmp	r0, #0
 2973 0048 F1D1     		bne	.L313
 966:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
 2974              		.loc 1 966 0
 2975 004a 07F10108 		add	r8, r7, #1
 2976              	.LVL403:
 2977 004e C7F30807 		ubfx	r7, r7, #0, #9
 2978              	.LVL404:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2979              		.loc 1 967 0
 2980 0052 14F00104 		ands	r4, r4, #1
 2981              	.LVL405:
 2982 0056 20D0     		beq	.L317
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2983              		.loc 1 967 0 is_stmt 0 discriminator 1
 2984 0058 EB57     		ldrsb	r3, [r5, r7]
 2985 005a 03F00F03 		and	r3, r3, #15
 2986 005e 3201     		lsls	r2, r6, #4
ARM GAS  /tmp/cckAXl85.s 			page 100


 2987 0060 02F47F62 		and	r2, r2, #4080
 2988 0064 1343     		orrs	r3, r3, r2
 2989 0066 DBB2     		uxtb	r3, r3
 2990              	.L318:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 2991              		.loc 1 967 0 discriminator 4
 2992 0068 EB55     		strb	r3, [r5, r7]
 968:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fs, fs->fatbase + (bc / SS(fs)));
 2993              		.loc 1 968 0 is_stmt 1 discriminator 4
 2994 006a 0123     		movs	r3, #1
 2995 006c 85F80432 		strb	r3, [r5, #516]
 969:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 2996              		.loc 1 969 0 discriminator 4
 2997 0070 D5F82412 		ldr	r1, [r5, #548]
 2998 0074 01EB5821 		add	r1, r1, r8, lsr #9
 2999 0078 2846     		mov	r0, r5
 3000              	.LVL406:
 3001 007a FFF7FEFF 		bl	move_window
 3002              	.LVL407:
 970:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[bc % SS(fs)];
 3003              		.loc 1 970 0 discriminator 4
 3004 007e 0346     		mov	r3, r0
 3005 0080 0028     		cmp	r0, #0
 3006 0082 D4D1     		bne	.L313
 971:Middlewares/Third_Party/FatFs/src/ff.c **** 			*p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F));
 3007              		.loc 1 971 0
 3008 0084 C8F30808 		ubfx	r8, r8, #0, #9
 3009              	.LVL408:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3010              		.loc 1 972 0
 3011 0088 4CB1     		cbz	r4, .L319
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3012              		.loc 1 972 0 is_stmt 0 discriminator 1
 3013 008a C6F30712 		ubfx	r2, r6, #4, #8
 3014              	.LVL409:
 3015              	.L320:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3016              		.loc 1 972 0 discriminator 4
 3017 008e 05F80820 		strb	r2, [r5, r8]
 973:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3018              		.loc 1 973 0 is_stmt 1 discriminator 4
 3019 0092 0122     		movs	r2, #1
 3020 0094 85F80422 		strb	r2, [r5, #516]
 974:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3021              		.loc 1 974 0 discriminator 4
 3022 0098 C9E7     		b	.L313
 3023              	.LVL410:
 3024              	.L317:
 967:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3025              		.loc 1 967 0 discriminator 2
 3026 009a F3B2     		uxtb	r3, r6
 3027 009c E4E7     		b	.L318
 3028              	.LVL411:
 3029              	.L319:
 972:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3030              		.loc 1 972 0 discriminator 2
 3031 009e 15F90820 		ldrsb	r2, [r5, r8]
ARM GAS  /tmp/cckAXl85.s 			page 101


 3032 00a2 22F00F02 		bic	r2, r2, #15
 3033 00a6 C6F30326 		ubfx	r6, r6, #8, #4
 3034              	.LVL412:
 3035 00aa 3243     		orrs	r2, r2, r6
 3036 00ac D2B2     		uxtb	r2, r2
 3037 00ae EEE7     		b	.L320
 3038              	.LVL413:
 3039              	.L314:
 977:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3040              		.loc 1 977 0
 3041 00b0 D0F82412 		ldr	r1, [r0, #548]
 3042              	.LVL414:
 3043 00b4 01EB1421 		add	r1, r1, r4, lsr #8
 3044 00b8 FFF7FEFF 		bl	move_window
 3045              	.LVL415:
 978:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 2 % SS(fs)];
 3046              		.loc 1 978 0
 3047 00bc 0346     		mov	r3, r0
 3048 00be 0028     		cmp	r0, #0
 3049 00c0 B5D1     		bne	.L313
 979:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(p, (WORD)val);
 3050              		.loc 1 979 0
 3051 00c2 6100     		lsls	r1, r4, #1
 3052 00c4 01F4FF71 		and	r1, r1, #510
 3053 00c8 6818     		adds	r0, r5, r1
 3054              	.LVL416:
 980:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3055              		.loc 1 980 0
 3056 00ca 6E54     		strb	r6, [r5, r1]
 3057 00cc C6F30722 		ubfx	r2, r6, #8, #8
 3058 00d0 4270     		strb	r2, [r0, #1]
 981:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3059              		.loc 1 981 0
 3060 00d2 0122     		movs	r2, #1
 3061 00d4 85F80422 		strb	r2, [r5, #516]
 982:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3062              		.loc 1 982 0
 3063 00d8 A9E7     		b	.L313
 3064              	.LVL417:
 3065              	.L315:
 985:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3066              		.loc 1 985 0
 3067 00da D0F82412 		ldr	r1, [r0, #548]
 3068              	.LVL418:
 3069 00de 01EBD411 		add	r1, r1, r4, lsr #7
 3070 00e2 FFF7FEFF 		bl	move_window
 3071              	.LVL419:
 986:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = &fs->win.d8[clst * 4 % SS(fs)];
 3072              		.loc 1 986 0
 3073 00e6 0346     		mov	r3, r0
 3074 00e8 0028     		cmp	r0, #0
 3075 00ea A0D1     		bne	.L313
 987:Middlewares/Third_Party/FatFs/src/ff.c **** 			val |= LD_DWORD(p) & 0xF0000000;
 3076              		.loc 1 987 0
 3077 00ec A100     		lsls	r1, r4, #2
 3078 00ee 01F4FE71 		and	r1, r1, #508
 3079 00f2 6818     		adds	r0, r5, r1
ARM GAS  /tmp/cckAXl85.s 			page 102


 3080              	.LVL420:
 988:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(p, val);
 3081              		.loc 1 988 0
 3082 00f4 C478     		ldrb	r4, [r0, #3]	@ zero_extendqisi2
 3083              	.LVL421:
 3084 00f6 8278     		ldrb	r2, [r0, #2]	@ zero_extendqisi2
 3085 00f8 1204     		lsls	r2, r2, #16
 3086 00fa 42EA0462 		orr	r2, r2, r4, lsl #24
 3087 00fe 02F07042 		and	r2, r2, #-268435456
 3088 0102 3243     		orrs	r2, r2, r6
 3089              	.LVL422:
 989:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->wflag = 1;
 3090              		.loc 1 989 0
 3091 0104 6A54     		strb	r2, [r5, r1]
 3092 0106 C2F30721 		ubfx	r1, r2, #8, #8
 3093 010a 4170     		strb	r1, [r0, #1]
 3094 010c C2F30741 		ubfx	r1, r2, #16, #8
 3095 0110 8170     		strb	r1, [r0, #2]
 3096 0112 120E     		lsrs	r2, r2, #24
 3097              	.LVL423:
 3098 0114 C270     		strb	r2, [r0, #3]
 990:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3099              		.loc 1 990 0
 3100 0116 0122     		movs	r2, #1
 3101 0118 85F80422 		strb	r2, [r5, #516]
 991:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3102              		.loc 1 991 0
 3103 011c 87E7     		b	.L313
 3104              	.LVL424:
 3105              	.L321:
 3106              	.LCFI38:
 3107              		.cfi_def_cfa_offset 0
 3108              		.cfi_restore 4
 3109              		.cfi_restore 5
 3110              		.cfi_restore 6
 3111              		.cfi_restore 7
 3112              		.cfi_restore 8
 3113              		.cfi_restore 14
 958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3114              		.loc 1 958 0
 3115 011e 0223     		movs	r3, #2
 3116              	.L326:
 3117              	.LVL425:
 999:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 3118              		.loc 1 999 0
 3119 0120 1846     		mov	r0, r3
 3120              	.LVL426:
 3121 0122 7047     		bx	lr
 3122              		.cfi_endproc
 3123              	.LFE85:
 3125              		.section	.text.create_chain,"ax",%progbits
 3126              		.align	1
 3127              		.syntax unified
 3128              		.thumb
 3129              		.thumb_func
 3130              		.fpu softvfp
 3132              	create_chain:
ARM GAS  /tmp/cckAXl85.s 			page 103


 3133              	.LFB87:
1067:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cs, ncl, scl;
 3134              		.loc 1 1067 0
 3135              		.cfi_startproc
 3136              		@ args = 0, pretend = 0, frame = 0
 3137              		@ frame_needed = 0, uses_anonymous_args = 0
 3138              	.LVL427:
 3139 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3140              	.LCFI39:
 3141              		.cfi_def_cfa_offset 24
 3142              		.cfi_offset 3, -24
 3143              		.cfi_offset 4, -20
 3144              		.cfi_offset 5, -16
 3145              		.cfi_offset 6, -12
 3146              		.cfi_offset 7, -8
 3147              		.cfi_offset 14, -4
 3148 0002 0546     		mov	r5, r0
1072:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = fs->last_clust;			/* Get suggested start point */
 3149              		.loc 1 1072 0
 3150 0004 0F46     		mov	r7, r1
 3151 0006 41B9     		cbnz	r1, .L332
1073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!scl || scl >= fs->n_fatent) scl = 1;
 3152              		.loc 1 1073 0
 3153 0008 D0F81062 		ldr	r6, [r0, #528]
 3154              	.LVL428:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3155              		.loc 1 1074 0
 3156 000c 9EB1     		cbz	r6, .L340
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3157              		.loc 1 1074 0 is_stmt 0 discriminator 2
 3158 000e D0F81832 		ldr	r3, [r0, #536]
 3159 0012 9E42     		cmp	r6, r3
 3160 0014 10D3     		bcc	.L333
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3161              		.loc 1 1074 0
 3162 0016 0126     		movs	r6, #1
 3163              	.LVL429:
 3164 0018 0EE0     		b	.L333
 3165              	.LVL430:
 3166              	.L332:
1077:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < 2) return 1;			/* Invalid value */
 3167              		.loc 1 1077 0 is_stmt 1
 3168 001a FFF7FEFF 		bl	get_fat
 3169              	.LVL431:
 3170 001e 0346     		mov	r3, r0
 3171              	.LVL432:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3172              		.loc 1 1078 0
 3173 0020 0128     		cmp	r0, #1
 3174 0022 4BD9     		bls	.L342
1079:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs < fs->n_fatent) return cs;	/* It is already followed by next cluster */
 3175              		.loc 1 1079 0
 3176 0024 B0F1FF3F 		cmp	r0, #-1
 3177 0028 4DD0     		beq	.L331
1080:Middlewares/Third_Party/FatFs/src/ff.c **** 		scl = clst;
 3178              		.loc 1 1080 0
 3179 002a D5F81822 		ldr	r2, [r5, #536]
ARM GAS  /tmp/cckAXl85.s 			page 104


 3180 002e 9042     		cmp	r0, r2
 3181 0030 49D3     		bcc	.L331
1081:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3182              		.loc 1 1081 0
 3183 0032 3E46     		mov	r6, r7
 3184 0034 00E0     		b	.L333
 3185              	.LVL433:
 3186              	.L340:
1074:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3187              		.loc 1 1074 0
 3188 0036 0126     		movs	r6, #1
 3189              	.LVL434:
 3190              	.L333:
1084:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
 3191              		.loc 1 1084 0
 3192 0038 3446     		mov	r4, r6
 3193 003a 0CE0     		b	.L337
 3194              	.LVL435:
 3195              	.L335:
1091:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0) break;				/* Found a free cluster */
 3196              		.loc 1 1091 0
 3197 003c 2146     		mov	r1, r4
 3198 003e 2846     		mov	r0, r5
 3199 0040 FFF7FEFF 		bl	get_fat
 3200              	.LVL436:
1092:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF || cs == 1)/* An error occurred */
 3201              		.loc 1 1092 0
 3202 0044 0346     		mov	r3, r0
 3203 0046 78B1     		cbz	r0, .L336
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 3204              		.loc 1 1093 0
 3205 0048 B0F1FF3F 		cmp	r0, #-1
 3206 004c 3BD0     		beq	.L331
1093:Middlewares/Third_Party/FatFs/src/ff.c **** 			return cs;
 3207              		.loc 1 1093 0 is_stmt 0 discriminator 1
 3208 004e 0128     		cmp	r0, #1
 3209 0050 39D0     		beq	.L331
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3210              		.loc 1 1095 0 is_stmt 1
 3211 0052 B442     		cmp	r4, r6
 3212 0054 36D0     		beq	.L348
 3213              	.LVL437:
 3214              	.L337:
1086:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ncl >= fs->n_fatent) {		/* Check wrap around */
 3215              		.loc 1 1086 0
 3216 0056 0134     		adds	r4, r4, #1
 3217              	.LVL438:
1087:Middlewares/Third_Party/FatFs/src/ff.c **** 			ncl = 2;
 3218              		.loc 1 1087 0
 3219 0058 D5F81832 		ldr	r3, [r5, #536]
 3220 005c 9C42     		cmp	r4, r3
 3221 005e EDD3     		bcc	.L335
 3222              	.LVL439:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3223              		.loc 1 1089 0
 3224 0060 012E     		cmp	r6, #1
 3225 0062 2DD9     		bls	.L343
ARM GAS  /tmp/cckAXl85.s 			page 105


1088:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ncl > scl) return 0;	/* No free cluster */
 3226              		.loc 1 1088 0
 3227 0064 0224     		movs	r4, #2
 3228 0066 E9E7     		b	.L335
 3229              	.LVL440:
 3230              	.L336:
1098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && clst != 0) {
 3231              		.loc 1 1098 0
 3232 0068 6FF07042 		mvn	r2, #-268435456
 3233 006c 2146     		mov	r1, r4
 3234 006e 2846     		mov	r0, r5
 3235              	.LVL441:
 3236 0070 FFF7FEFF 		bl	put_fat
 3237              	.LVL442:
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 3238              		.loc 1 1099 0
 3239 0074 0346     		mov	r3, r0
 3240 0076 00B9     		cbnz	r0, .L338
1099:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = put_fat(fs, clst, ncl);	/* Link it to the previous one if needed */
 3241              		.loc 1 1099 0 is_stmt 0 discriminator 1
 3242 0078 97B9     		cbnz	r7, .L349
 3243              	.LVL443:
 3244              	.L338:
1102:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->last_clust = ncl;			/* Update FSINFO */
 3245              		.loc 1 1102 0 is_stmt 1
 3246 007a C3B9     		cbnz	r3, .L339
1103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust != 0xFFFFFFFF) {
 3247              		.loc 1 1103 0
 3248 007c C5F81042 		str	r4, [r5, #528]
1104:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust--;
 3249              		.loc 1 1104 0
 3250 0080 D5F81432 		ldr	r3, [r5, #532]
 3251              	.LVL444:
 3252 0084 B3F1FF3F 		cmp	r3, #-1
 3253 0088 1FD0     		beq	.L345
1105:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 3254              		.loc 1 1105 0
 3255 008a 013B     		subs	r3, r3, #1
 3256 008c C5F81432 		str	r3, [r5, #532]
1106:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3257              		.loc 1 1106 0
 3258 0090 95F80532 		ldrb	r3, [r5, #517]	@ zero_extendqisi2
 3259 0094 43F00103 		orr	r3, r3, #1
 3260 0098 85F80532 		strb	r3, [r5, #517]
 3261 009c 2346     		mov	r3, r4
 3262 009e 12E0     		b	.L331
 3263              	.LVL445:
 3264              	.L349:
1100:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3265              		.loc 1 1100 0
 3266 00a0 2246     		mov	r2, r4
 3267 00a2 3946     		mov	r1, r7
 3268 00a4 2846     		mov	r0, r5
 3269              	.LVL446:
 3270 00a6 FFF7FEFF 		bl	put_fat
 3271              	.LVL447:
 3272 00aa 0346     		mov	r3, r0
ARM GAS  /tmp/cckAXl85.s 			page 106


 3273              	.LVL448:
 3274 00ac E5E7     		b	.L338
 3275              	.L339:
1109:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3276              		.loc 1 1109 0
 3277 00ae 012B     		cmp	r3, #1
 3278 00b0 01D0     		beq	.L350
 3279 00b2 0123     		movs	r3, #1
 3280              	.LVL449:
 3281 00b4 07E0     		b	.L331
 3282              	.LVL450:
 3283              	.L350:
 3284 00b6 4FF0FF33 		mov	r3, #-1
 3285              	.LVL451:
 3286 00ba 04E0     		b	.L331
 3287              	.LVL452:
 3288              	.L342:
1078:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (cs == 0xFFFFFFFF) return cs;	/* A disk error occurred */
 3289              		.loc 1 1078 0
 3290 00bc 0123     		movs	r3, #1
 3291 00be 02E0     		b	.L331
 3292              	.LVL453:
 3293              	.L343:
1089:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3294              		.loc 1 1089 0
 3295 00c0 0023     		movs	r3, #0
 3296 00c2 00E0     		b	.L331
 3297              	.LVL454:
 3298              	.L348:
1095:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3299              		.loc 1 1095 0
 3300 00c4 0023     		movs	r3, #0
 3301              	.LVL455:
 3302              	.L331:
1113:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 3303              		.loc 1 1113 0
 3304 00c6 1846     		mov	r0, r3
 3305 00c8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3306              	.LVL456:
 3307              	.L345:
 3308 00ca 2346     		mov	r3, r4
 3309 00cc FBE7     		b	.L331
 3310              		.cfi_endproc
 3311              	.LFE87:
 3313              		.section	.text.dir_next,"ax",%progbits
 3314              		.align	1
 3315              		.syntax unified
 3316              		.thumb
 3317              		.thumb_func
 3318              		.fpu softvfp
 3320              	dir_next:
 3321              	.LFB90:
1205:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst;
 3322              		.loc 1 1205 0
 3323              		.cfi_startproc
 3324              		@ args = 0, pretend = 0, frame = 0
 3325              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cckAXl85.s 			page 107


 3326              	.LVL457:
 3327 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3328              	.LCFI40:
 3329              		.cfi_def_cfa_offset 32
 3330              		.cfi_offset 3, -32
 3331              		.cfi_offset 4, -28
 3332              		.cfi_offset 5, -24
 3333              		.cfi_offset 6, -20
 3334              		.cfi_offset 7, -16
 3335              		.cfi_offset 8, -12
 3336              		.cfi_offset 9, -8
 3337              		.cfi_offset 14, -4
1213:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(i & 0xFFFF) || !dp->sect)	/* Report EOT when index has reached 65535 */
 3338              		.loc 1 1213 0
 3339 0004 C488     		ldrh	r4, [r0, #6]
 3340 0006 0134     		adds	r4, r4, #1
 3341              	.LVL458:
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 3342              		.loc 1 1214 0
 3343 0008 A3B2     		uxth	r3, r4
 3344 000a 13B9     		cbnz	r3, .L370
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3345              		.loc 1 1215 0
 3346 000c 0420     		movs	r0, #4
 3347              	.LVL459:
 3348 000e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3349              	.LVL460:
 3350              	.L370:
1214:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_NO_FILE;
 3351              		.loc 1 1214 0 discriminator 1
 3352 0012 0369     		ldr	r3, [r0, #16]
 3353 0014 13B9     		cbnz	r3, .L371
1215:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3354              		.loc 1 1215 0
 3355 0016 0420     		movs	r0, #4
 3356              	.LVL461:
 3357 0018 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3358              	.LVL462:
 3359              	.L371:
 3360 001c 0E46     		mov	r6, r1
 3361 001e 0546     		mov	r5, r0
1217:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->sect++;					/* Next sector */
 3362              		.loc 1 1217 0
 3363 0020 14F00F07 		ands	r7, r4, #15
 3364 0024 12D1     		bne	.L353
1218:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3365              		.loc 1 1218 0
 3366 0026 0133     		adds	r3, r3, #1
 3367 0028 0361     		str	r3, [r0, #16]
1220:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i >= dp->fs->n_rootdir)	/* Report EOT if it reached end of static table */
 3368              		.loc 1 1220 0
 3369 002a C168     		ldr	r1, [r0, #12]
 3370              	.LVL463:
 3371 002c 39B9     		cbnz	r1, .L354
1221:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_NO_FILE;
 3372              		.loc 1 1221 0
 3373 002e 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cckAXl85.s 			page 108


 3374 0030 B3F80832 		ldrh	r3, [r3, #520]
 3375 0034 9C42     		cmp	r4, r3
 3376 0036 09D3     		bcc	.L353
1222:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3377              		.loc 1 1222 0
 3378 0038 0420     		movs	r0, #4
 3379              	.LVL464:
 3380 003a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3381              	.LVL465:
 3382              	.L354:
1225:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = get_fat(dp->fs, dp->clust);				/* Get next cluster */
 3383              		.loc 1 1225 0
 3384 003e 0068     		ldr	r0, [r0]
 3385              	.LVL466:
 3386 0040 90F80232 		ldrb	r3, [r0, #514]	@ zero_extendqisi2
 3387 0044 013B     		subs	r3, r3, #1
 3388 0046 13EA1418 		ands	r8, r3, r4, lsr #4
 3389 004a 07D0     		beq	.L372
 3390              	.LVL467:
 3391              	.L353:
1257:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->dir = dp->fs->win.d8 + (i % (SS(dp->fs) / SZ_DIRE)) * SZ_DIRE;	/* Current entry in the window 
 3392              		.loc 1 1257 0
 3393 004c EC80     		strh	r4, [r5, #6]	@ movhi
1258:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3394              		.loc 1 1258 0
 3395 004e 2B68     		ldr	r3, [r5]
 3396 0050 03EB4713 		add	r3, r3, r7, lsl #5
 3397 0054 6B61     		str	r3, [r5, #20]
1260:Middlewares/Third_Party/FatFs/src/ff.c **** }
 3398              		.loc 1 1260 0
 3399 0056 0020     		movs	r0, #0
 3400 0058 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3401              	.LVL468:
 3402              	.L372:
1226:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) return FR_INT_ERR;
 3403              		.loc 1 1226 0
 3404 005c FFF7FEFF 		bl	get_fat
 3405              	.LVL469:
 3406 0060 8146     		mov	r9, r0
 3407              	.LVL470:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3408              		.loc 1 1227 0
 3409 0062 0128     		cmp	r0, #1
 3410 0064 4DD9     		bls	.L361
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 3411              		.loc 1 1228 0
 3412 0066 B0F1FF3F 		cmp	r0, #-1
 3413 006a 4DD0     		beq	.L362
1229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 3414              		.loc 1 1229 0
 3415 006c 2868     		ldr	r0, [r5]
 3416              	.LVL471:
 3417 006e D0F81832 		ldr	r3, [r0, #536]
 3418 0072 9945     		cmp	r9, r3
 3419 0074 3DD3     		bcc	.L355
1231:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(dp->fs, dp->clust);		/* Stretch cluster chain */
 3420              		.loc 1 1231 0
ARM GAS  /tmp/cckAXl85.s 			page 109


 3421 0076 16B9     		cbnz	r6, .L373
 3422 0078 0420     		movs	r0, #4
 3423 007a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3424              	.LVL472:
 3425              	.L373:
1232:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0) return FR_DENIED;			/* No free cluster */
 3426              		.loc 1 1232 0
 3427 007e E968     		ldr	r1, [r5, #12]
 3428 0080 FFF7FEFF 		bl	create_chain
 3429              	.LVL473:
1233:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) return FR_INT_ERR;
 3430              		.loc 1 1233 0
 3431 0084 8146     		mov	r9, r0
 3432 0086 10B9     		cbnz	r0, .L374
 3433 0088 0720     		movs	r0, #7
 3434              	.LVL474:
 3435 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3436              	.LVL475:
 3437              	.L374:
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3438              		.loc 1 1234 0
 3439 008e 0128     		cmp	r0, #1
 3440 0090 3DD0     		beq	.L365
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 3441              		.loc 1 1235 0
 3442 0092 B0F1FF3F 		cmp	r0, #-1
 3443 0096 3DD0     		beq	.L366
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
 3444              		.loc 1 1237 0
 3445 0098 2868     		ldr	r0, [r5]
 3446              	.LVL476:
 3447 009a FFF7FEFF 		bl	sync_window
 3448              	.LVL477:
 3449 009e 0028     		cmp	r0, #0
 3450 00a0 3BD1     		bne	.L367
1238:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->fs->winsect = clust2sect(dp->fs, clst);	/* Cluster start sector */
 3451              		.loc 1 1238 0
 3452 00a2 4FF40072 		mov	r2, #512
 3453 00a6 0021     		movs	r1, #0
 3454 00a8 2868     		ldr	r0, [r5]
 3455 00aa FFF7FEFF 		bl	mem_set
 3456              	.LVL478:
1239:Middlewares/Third_Party/FatFs/src/ff.c **** 					for (c = 0; c < dp->fs->csize; c++) {		/* Fill the new cluster with 0 */
 3457              		.loc 1 1239 0
 3458 00ae 2E68     		ldr	r6, [r5]
 3459              	.LVL479:
 3460 00b0 4946     		mov	r1, r9
 3461 00b2 3046     		mov	r0, r6
 3462 00b4 FFF7FEFF 		bl	clust2sect
 3463              	.LVL480:
 3464 00b8 C6F83002 		str	r0, [r6, #560]
 3465              	.LVL481:
 3466              	.L356:
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 3467              		.loc 1 1240 0 discriminator 1
 3468 00bc 2B68     		ldr	r3, [r5]
 3469 00be 93F80222 		ldrb	r2, [r3, #514]	@ zero_extendqisi2
ARM GAS  /tmp/cckAXl85.s 			page 110


 3470 00c2 9045     		cmp	r8, r2
 3471 00c4 0FD2     		bcs	.L375
1241:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (sync_window(dp->fs)) return FR_DISK_ERR;
 3472              		.loc 1 1241 0
 3473 00c6 0122     		movs	r2, #1
 3474 00c8 83F80422 		strb	r2, [r3, #516]
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 3475              		.loc 1 1242 0
 3476 00cc 2868     		ldr	r0, [r5]
 3477 00ce FFF7FEFF 		bl	sync_window
 3478              	.LVL482:
 3479 00d2 28BB     		cbnz	r0, .L368
1243:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3480              		.loc 1 1243 0 discriminator 2
 3481 00d4 2A68     		ldr	r2, [r5]
 3482 00d6 D2F83032 		ldr	r3, [r2, #560]
 3483 00da 0133     		adds	r3, r3, #1
 3484 00dc C2F83032 		str	r3, [r2, #560]
1240:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->wflag = 1;
 3485              		.loc 1 1240 0 discriminator 2
 3486 00e0 08F10108 		add	r8, r8, #1
 3487              	.LVL483:
 3488 00e4 EAE7     		b	.L356
 3489              	.L375:
1245:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 3490              		.loc 1 1245 0
 3491 00e6 D3F83022 		ldr	r2, [r3, #560]
 3492 00ea A2EB0802 		sub	r2, r2, r8
 3493 00ee C3F83022 		str	r2, [r3, #560]
 3494              	.LVL484:
 3495              	.L355:
1251:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = clust2sect(dp->fs, clst);
 3496              		.loc 1 1251 0
 3497 00f2 C5F80C90 		str	r9, [r5, #12]
1252:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3498              		.loc 1 1252 0
 3499 00f6 4946     		mov	r1, r9
 3500 00f8 2868     		ldr	r0, [r5]
 3501 00fa FFF7FEFF 		bl	clust2sect
 3502              	.LVL485:
 3503 00fe 2861     		str	r0, [r5, #16]
 3504 0100 A4E7     		b	.L353
 3505              	.LVL486:
 3506              	.L361:
1227:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3507              		.loc 1 1227 0
 3508 0102 0220     		movs	r0, #2
 3509              	.LVL487:
 3510 0104 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3511              	.LVL488:
 3512              	.L362:
1228:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst >= dp->fs->n_fatent) {					/* If it reached end of dynamic table, */
 3513              		.loc 1 1228 0
 3514 0108 0120     		movs	r0, #1
 3515              	.LVL489:
 3516 010a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3517              	.LVL490:
ARM GAS  /tmp/cckAXl85.s 			page 111


 3518              	.L365:
1234:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
 3519              		.loc 1 1234 0
 3520 010e 0220     		movs	r0, #2
 3521              	.LVL491:
 3522 0110 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3523              	.LVL492:
 3524              	.L366:
1235:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Clean-up stretched table */
 3525              		.loc 1 1235 0
 3526 0114 0120     		movs	r0, #1
 3527              	.LVL493:
 3528 0116 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3529              	.LVL494:
 3530              	.L367:
1237:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dp->fs->win.d8, 0, SS(dp->fs));		/* Clear window buffer */
 3531              		.loc 1 1237 0
 3532 011a 0120     		movs	r0, #1
 3533 011c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3534              	.LVL495:
 3535              	.L368:
1242:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->fs->winsect++;
 3536              		.loc 1 1242 0
 3537 0120 0120     		movs	r0, #1
1261:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3538              		.loc 1 1261 0
 3539 0122 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3540              		.cfi_endproc
 3541              	.LFE90:
 3543              		.section	.text.dir_find,"ax",%progbits
 3544              		.align	1
 3545              		.syntax unified
 3546              		.thumb
 3547              		.thumb_func
 3548              		.fpu softvfp
 3550              	dir_find:
 3551              	.LFB94:
1531:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3552              		.loc 1 1531 0
 3553              		.cfi_startproc
 3554              		@ args = 0, pretend = 0, frame = 0
 3555              		@ frame_needed = 0, uses_anonymous_args = 0
 3556              	.LVL496:
 3557 0000 38B5     		push	{r3, r4, r5, lr}
 3558              	.LCFI41:
 3559              		.cfi_def_cfa_offset 16
 3560              		.cfi_offset 3, -16
 3561              		.cfi_offset 4, -12
 3562              		.cfi_offset 5, -8
 3563              		.cfi_offset 14, -4
 3564 0002 0446     		mov	r4, r0
1538:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) return res;
 3565              		.loc 1 1538 0
 3566 0004 0021     		movs	r1, #0
 3567 0006 FFF7FEFF 		bl	dir_sdi
 3568              	.LVL497:
1539:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 112


 3569              		.loc 1 1539 0
 3570 000a 0546     		mov	r5, r0
 3571 000c 40B1     		cbz	r0, .L379
 3572              	.LVL498:
 3573              	.L377:
1579:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3574              		.loc 1 1579 0
 3575 000e 2846     		mov	r0, r5
 3576 0010 38BD     		pop	{r3, r4, r5, pc}
 3577              	.LVL499:
 3578              	.L378:
1575:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (res == FR_OK);
 3579              		.loc 1 1575 0
 3580 0012 0021     		movs	r1, #0
 3581 0014 2046     		mov	r0, r4
 3582 0016 FFF7FEFF 		bl	dir_next
 3583              	.LVL500:
1576:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3584              		.loc 1 1576 0
 3585 001a 0546     		mov	r5, r0
 3586 001c 0028     		cmp	r0, #0
 3587 001e F6D1     		bne	.L377
 3588              	.L379:
1545:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3589              		.loc 1 1545 0
 3590 0020 2169     		ldr	r1, [r4, #16]
 3591 0022 2068     		ldr	r0, [r4]
 3592              	.LVL501:
 3593 0024 FFF7FEFF 		bl	move_window
 3594              	.LVL502:
1546:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 3595              		.loc 1 1546 0
 3596 0028 0546     		mov	r5, r0
 3597 002a 0028     		cmp	r0, #0
 3598 002c EFD1     		bne	.L377
1547:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
 3599              		.loc 1 1547 0
 3600 002e 6069     		ldr	r0, [r4, #20]
 3601              	.LVL503:
1548:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3602              		.loc 1 1548 0
 3603 0030 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3604              	.LVL504:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3605              		.loc 1 1549 0
 3606 0032 53B1     		cbz	r3, .L380
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3607              		.loc 1 1572 0
 3608 0034 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 3609              	.LVL505:
 3610 0036 13F0080F 		tst	r3, #8
 3611 003a EAD1     		bne	.L378
1572:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3612              		.loc 1 1572 0 is_stmt 0 discriminator 1
 3613 003c 0B22     		movs	r2, #11
 3614 003e A169     		ldr	r1, [r4, #24]
 3615 0040 FFF7FEFF 		bl	mem_cmp
ARM GAS  /tmp/cckAXl85.s 			page 113


 3616              	.LVL506:
 3617 0044 0028     		cmp	r0, #0
 3618 0046 E4D1     		bne	.L378
 3619 0048 E1E7     		b	.L377
 3620              	.LVL507:
 3621              	.L380:
1549:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3622              		.loc 1 1549 0 is_stmt 1
 3623 004a 0425     		movs	r5, #4
 3624 004c DFE7     		b	.L377
 3625              		.cfi_endproc
 3626              	.LFE94:
 3628              		.section	.text.follow_path,"ax",%progbits
 3629              		.align	1
 3630              		.syntax unified
 3631              		.thumb
 3632              		.thumb_func
 3633              		.fpu softvfp
 3635              	follow_path:
 3636              	.LFB100:
2129:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3637              		.loc 1 2129 0
 3638              		.cfi_startproc
 3639              		@ args = 0, pretend = 0, frame = 8
 3640              		@ frame_needed = 0, uses_anonymous_args = 0
 3641              	.LVL508:
 3642 0000 10B5     		push	{r4, lr}
 3643              	.LCFI42:
 3644              		.cfi_def_cfa_offset 8
 3645              		.cfi_offset 4, -8
 3646              		.cfi_offset 14, -4
 3647 0002 82B0     		sub	sp, sp, #8
 3648              	.LCFI43:
 3649              		.cfi_def_cfa_offset 16
 3650 0004 0446     		mov	r4, r0
 3651 0006 0191     		str	r1, [sp, #4]
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
 3652              		.loc 1 2141 0
 3653 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 3654 000a 2F2B     		cmp	r3, #47
 3655 000c 21D0     		beq	.L383
2141:Middlewares/Third_Party/FatFs/src/ff.c **** 		path++;
 3656              		.loc 1 2141 0 is_stmt 0 discriminator 1
 3657 000e 5C2B     		cmp	r3, #92
 3658 0010 1FD0     		beq	.L383
 3659              	.LVL509:
 3660              	.L384:
2143:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3661              		.loc 1 2143 0 is_stmt 1
 3662 0012 0023     		movs	r3, #0
 3663 0014 A360     		str	r3, [r4, #8]
2146:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(dp, 0);
 3664              		.loc 1 2146 0
 3665 0016 019B     		ldr	r3, [sp, #4]
 3666 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3667 001a 1F2B     		cmp	r3, #31
 3668 001c 1CD9     		bls	.L391
ARM GAS  /tmp/cckAXl85.s 			page 114


 3669              	.LVL510:
 3670              	.L385:
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3671              		.loc 1 2151 0
 3672 001e 01A9     		add	r1, sp, #4
 3673 0020 2046     		mov	r0, r4
 3674 0022 FFF7FEFF 		bl	create_name
 3675              	.LVL511:
2152:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_find(dp);				/* Find an object with the sagment name */
 3676              		.loc 1 2152 0
 3677 0026 0346     		mov	r3, r0
 3678 0028 E8B9     		cbnz	r0, .L386
2153:Middlewares/Third_Party/FatFs/src/ff.c **** 			ns = dp->fn[NSFLAG];
 3679              		.loc 1 2153 0
 3680 002a 2046     		mov	r0, r4
 3681              	.LVL512:
 3682 002c FFF7FEFF 		bl	dir_find
 3683              	.LVL513:
2154:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {				/* Failed to find the object */
 3684              		.loc 1 2154 0
 3685 0030 A369     		ldr	r3, [r4, #24]
 3686 0032 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 3687              	.LVL514:
2155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {	/* Object is not found */
 3688              		.loc 1 2155 0
 3689 0034 0346     		mov	r3, r0
 3690 0036 C8B9     		cbnz	r0, .L392
2167:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dp->dir;						/* Follow the sub-directory */
 3691              		.loc 1 2167 0
 3692 0038 12F0040F 		tst	r2, #4
 3693 003c 13D1     		bne	.L386
2168:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(dir[DIR_Attr] & AM_DIR)) {	/* It is not a sub-directory and cannot follow */
 3694              		.loc 1 2168 0
 3695 003e 6169     		ldr	r1, [r4, #20]
 3696              	.LVL515:
2169:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_PATH; break;
 3697              		.loc 1 2169 0
 3698 0040 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 3699 0042 13F0100F 		tst	r3, #16
 3700 0046 18D0     		beq	.L389
2172:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3701              		.loc 1 2172 0
 3702 0048 2068     		ldr	r0, [r4]
 3703              	.LVL516:
 3704 004a FFF7FEFF 		bl	ld_clust
 3705              	.LVL517:
 3706 004e A060     		str	r0, [r4, #8]
2151:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3707              		.loc 1 2151 0
 3708 0050 E5E7     		b	.L385
 3709              	.LVL518:
 3710              	.L383:
2142:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->sclust = 0;							/* Always start from the root directory */
 3711              		.loc 1 2142 0
 3712 0052 0131     		adds	r1, r1, #1
 3713              	.LVL519:
 3714 0054 0191     		str	r1, [sp, #4]
ARM GAS  /tmp/cckAXl85.s 			page 115


 3715              	.LVL520:
 3716 0056 DCE7     		b	.L384
 3717              	.LVL521:
 3718              	.L391:
2147:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->dir = 0;
 3719              		.loc 1 2147 0
 3720 0058 0021     		movs	r1, #0
 3721 005a 2046     		mov	r0, r4
 3722              	.LVL522:
 3723 005c FFF7FEFF 		bl	dir_sdi
 3724              	.LVL523:
 3725 0060 0346     		mov	r3, r0
 3726              	.LVL524:
2148:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {								/* Follow path */
 3727              		.loc 1 2148 0
 3728 0062 0022     		movs	r2, #0
 3729 0064 6261     		str	r2, [r4, #20]
 3730              	.LVL525:
 3731              	.L386:
2177:Middlewares/Third_Party/FatFs/src/ff.c **** 
 3732              		.loc 1 2177 0
 3733 0066 1846     		mov	r0, r3
 3734 0068 02B0     		add	sp, sp, #8
 3735              	.LCFI44:
 3736              		.cfi_remember_state
 3737              		.cfi_def_cfa_offset 8
 3738              		@ sp needed
 3739 006a 10BD     		pop	{r4, pc}
 3740              	.LVL526:
 3741              	.L392:
 3742              	.LCFI45:
 3743              		.cfi_restore_state
2156:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (_FS_RPATH && (ns & NS_DOT)) {	/* If dot entry is not exist, */
 3744              		.loc 1 2156 0
 3745 006c 0428     		cmp	r0, #4
 3746 006e FAD1     		bne	.L386
2162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 3747              		.loc 1 2162 0
 3748 0070 12F0040F 		tst	r2, #4
 3749 0074 F7D1     		bne	.L386
 3750 0076 0523     		movs	r3, #5
 3751 0078 F5E7     		b	.L386
 3752              	.LVL527:
 3753              	.L389:
2170:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3754              		.loc 1 2170 0
 3755 007a 0523     		movs	r3, #5
 3756 007c F3E7     		b	.L386
 3757              		.cfi_endproc
 3758              	.LFE100:
 3760              		.section	.text.dir_alloc,"ax",%progbits
 3761              		.align	1
 3762              		.syntax unified
 3763              		.thumb
 3764              		.thumb_func
 3765              		.fpu softvfp
 3767              	dir_alloc:
ARM GAS  /tmp/cckAXl85.s 			page 116


 3768              	.LFB91:
1276:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3769              		.loc 1 1276 0
 3770              		.cfi_startproc
 3771              		@ args = 0, pretend = 0, frame = 0
 3772              		@ frame_needed = 0, uses_anonymous_args = 0
 3773              	.LVL528:
 3774 0000 70B5     		push	{r4, r5, r6, lr}
 3775              	.LCFI46:
 3776              		.cfi_def_cfa_offset 16
 3777              		.cfi_offset 4, -16
 3778              		.cfi_offset 5, -12
 3779              		.cfi_offset 6, -8
 3780              		.cfi_offset 14, -4
 3781 0002 0446     		mov	r4, r0
 3782 0004 0E46     		mov	r6, r1
1281:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 3783              		.loc 1 1281 0
 3784 0006 0021     		movs	r1, #0
 3785              	.LVL529:
 3786 0008 FFF7FEFF 		bl	dir_sdi
 3787              	.LVL530:
1282:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = 0;
 3788              		.loc 1 1282 0
 3789 000c 0246     		mov	r2, r0
 3790 000e C0B9     		cbnz	r0, .L394
 3791 0010 0025     		movs	r5, #0
 3792 0012 08E0     		b	.L397
 3793              	.LVL531:
 3794              	.L395:
1288:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 3795              		.loc 1 1288 0
 3796 0014 0135     		adds	r5, r5, #1
 3797              	.LVL532:
 3798 0016 B542     		cmp	r5, r6
 3799 0018 13D0     		beq	.L394
 3800              	.LVL533:
 3801              	.L396:
1292:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (res == FR_OK);
 3802              		.loc 1 1292 0
 3803 001a 0121     		movs	r1, #1
 3804 001c 2046     		mov	r0, r4
 3805              	.LVL534:
 3806 001e FFF7FEFF 		bl	dir_next
 3807              	.LVL535:
1293:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3808              		.loc 1 1293 0
 3809 0022 0246     		mov	r2, r0
 3810 0024 68B9     		cbnz	r0, .L394
 3811              	.LVL536:
 3812              	.L397:
1285:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 3813              		.loc 1 1285 0
 3814 0026 2169     		ldr	r1, [r4, #16]
 3815 0028 2068     		ldr	r0, [r4]
 3816              	.LVL537:
 3817 002a FFF7FEFF 		bl	move_window
ARM GAS  /tmp/cckAXl85.s 			page 117


 3818              	.LVL538:
1286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir[0] == DDEM || dp->dir[0] == 0) {	/* Is it a free entry? */
 3819              		.loc 1 1286 0
 3820 002e 0246     		mov	r2, r0
 3821 0030 38B9     		cbnz	r0, .L394
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
 3822              		.loc 1 1287 0
 3823 0032 6369     		ldr	r3, [r4, #20]
 3824 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3825 0036 E52B     		cmp	r3, #229
 3826 0038 ECD0     		beq	.L395
1287:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (++n == nent) break;	/* A block of contiguous free entries is found */
 3827              		.loc 1 1287 0 is_stmt 0 discriminator 1
 3828 003a 002B     		cmp	r3, #0
 3829 003c EAD0     		beq	.L395
1290:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 3830              		.loc 1 1290 0 is_stmt 1
 3831 003e 0025     		movs	r5, #0
 3832              	.LVL539:
 3833 0040 EBE7     		b	.L396
 3834              	.L394:
 3835              	.LVL540:
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3836              		.loc 1 1295 0
 3837 0042 042A     		cmp	r2, #4
 3838 0044 01D0     		beq	.L402
 3839              	.LVL541:
 3840              	.L398:
1297:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3841              		.loc 1 1297 0
 3842 0046 1046     		mov	r0, r2
 3843 0048 70BD     		pop	{r4, r5, r6, pc}
 3844              	.LVL542:
 3845              	.L402:
1295:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
 3846              		.loc 1 1295 0
 3847 004a 0722     		movs	r2, #7
 3848              	.LVL543:
 3849 004c FBE7     		b	.L398
 3850              		.cfi_endproc
 3851              	.LFE91:
 3853              		.section	.text.dir_register,"ax",%progbits
 3854              		.align	1
 3855              		.syntax unified
 3856              		.thumb
 3857              		.thumb_func
 3858              		.fpu softvfp
 3860              	dir_register:
 3861              	.LFB96:
1651:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3862              		.loc 1 1651 0
 3863              		.cfi_startproc
 3864              		@ args = 0, pretend = 0, frame = 0
 3865              		@ frame_needed = 0, uses_anonymous_args = 0
 3866              	.LVL544:
 3867 0000 38B5     		push	{r3, r4, r5, lr}
 3868              	.LCFI47:
ARM GAS  /tmp/cckAXl85.s 			page 118


 3869              		.cfi_def_cfa_offset 16
 3870              		.cfi_offset 3, -16
 3871              		.cfi_offset 4, -12
 3872              		.cfi_offset 5, -8
 3873              		.cfi_offset 14, -4
 3874 0002 0546     		mov	r5, r0
1699:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 3875              		.loc 1 1699 0
 3876 0004 0121     		movs	r1, #1
 3877 0006 FFF7FEFF 		bl	dir_alloc
 3878              	.LVL545:
1702:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3879              		.loc 1 1702 0
 3880 000a 0446     		mov	r4, r0
 3881 000c 08B1     		cbz	r0, .L406
 3882              	.LVL546:
 3883              	.L404:
1715:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
 3884              		.loc 1 1715 0
 3885 000e 2046     		mov	r0, r4
 3886 0010 38BD     		pop	{r3, r4, r5, pc}
 3887              	.LVL547:
 3888              	.L406:
1703:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 3889              		.loc 1 1703 0
 3890 0012 2969     		ldr	r1, [r5, #16]
 3891 0014 2868     		ldr	r0, [r5]
 3892              	.LVL548:
 3893 0016 FFF7FEFF 		bl	move_window
 3894              	.LVL549:
1704:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(dp->dir, 0, SZ_DIRE);	/* Clean the entry */
 3895              		.loc 1 1704 0
 3896 001a 0446     		mov	r4, r0
 3897 001c 0028     		cmp	r0, #0
 3898 001e F6D1     		bne	.L404
1705:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_cpy(dp->dir, dp->fn, 11);	/* Put SFN */
 3899              		.loc 1 1705 0
 3900 0020 2022     		movs	r2, #32
 3901 0022 0021     		movs	r1, #0
 3902 0024 6869     		ldr	r0, [r5, #20]
 3903              	.LVL550:
 3904 0026 FFF7FEFF 		bl	mem_set
 3905              	.LVL551:
1706:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
 3906              		.loc 1 1706 0
 3907 002a 0B22     		movs	r2, #11
 3908 002c A969     		ldr	r1, [r5, #24]
 3909 002e 6869     		ldr	r0, [r5, #20]
 3910 0030 FFF7FEFF 		bl	mem_cpy
 3911              	.LVL552:
1710:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 3912              		.loc 1 1710 0
 3913 0034 2B68     		ldr	r3, [r5]
 3914 0036 0122     		movs	r2, #1
 3915 0038 83F80422 		strb	r2, [r3, #516]
 3916 003c E7E7     		b	.L404
 3917              		.cfi_endproc
ARM GAS  /tmp/cckAXl85.s 			page 119


 3918              	.LFE96:
 3920              		.section	.text.dir_read,"ax",%progbits
 3921              		.align	1
 3922              		.syntax unified
 3923              		.thumb
 3924              		.thumb_func
 3925              		.fpu softvfp
 3927              	dir_read:
 3928              	.LFB95:
1593:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 3929              		.loc 1 1593 0
 3930              		.cfi_startproc
 3931              		@ args = 0, pretend = 0, frame = 0
 3932              		@ frame_needed = 0, uses_anonymous_args = 0
 3933              	.LVL553:
 3934 0000 70B5     		push	{r4, r5, r6, lr}
 3935              	.LCFI48:
 3936              		.cfi_def_cfa_offset 16
 3937              		.cfi_offset 4, -16
 3938              		.cfi_offset 5, -12
 3939              		.cfi_offset 6, -8
 3940              		.cfi_offset 14, -4
 3941 0002 0446     		mov	r4, r0
 3942 0004 0D46     		mov	r5, r1
 3943              	.LVL554:
1600:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (dp->sect) {
 3944              		.loc 1 1600 0
 3945 0006 0426     		movs	r6, #4
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3946              		.loc 1 1601 0
 3947 0008 05E0     		b	.L408
 3948              	.LVL555:
 3949              	.L410:
1630:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3950              		.loc 1 1630 0
 3951 000a 0021     		movs	r1, #0
 3952 000c 2046     		mov	r0, r4
 3953              	.LVL556:
 3954 000e FFF7FEFF 		bl	dir_next
 3955              	.LVL557:
1631:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 3956              		.loc 1 1631 0
 3957 0012 0646     		mov	r6, r0
 3958 0014 E0B9     		cbnz	r0, .L409
 3959              	.LVL558:
 3960              	.L408:
1601:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dp->fs, dp->sect);
 3961              		.loc 1 1601 0
 3962 0016 2169     		ldr	r1, [r4, #16]
 3963 0018 D1B1     		cbz	r1, .L409
1602:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) break;
 3964              		.loc 1 1602 0
 3965 001a 2068     		ldr	r0, [r4]
 3966 001c FFF7FEFF 		bl	move_window
 3967              	.LVL559:
1603:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dp->dir;					/* Ptr to the directory entry of current index */
 3968              		.loc 1 1603 0
ARM GAS  /tmp/cckAXl85.s 			page 120


 3969 0020 0646     		mov	r6, r0
 3970 0022 A8B9     		cbnz	r0, .L409
1604:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = dir[DIR_Name];
 3971              		.loc 1 1604 0
 3972 0024 6369     		ldr	r3, [r4, #20]
 3973              	.LVL560:
1605:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) { res = FR_NO_FILE; break; }	/* Reached to end of table */
 3974              		.loc 1 1605 0
 3975 0026 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3976              	.LVL561:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 3977              		.loc 1 1606 0
 3978 0028 8AB1     		cbz	r2, .L413
1607:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN	/* LFN configuration */
 3979              		.loc 1 1607 0
 3980 002a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 3981              	.LVL562:
 3982 002c 03F03F03 		and	r3, r3, #63
 3983              	.LVL563:
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3984              		.loc 1 1627 0
 3985 0030 E52A     		cmp	r2, #229
 3986 0032 EAD0     		beq	.L410
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3987              		.loc 1 1627 0 is_stmt 0 discriminator 1
 3988 0034 2E2A     		cmp	r2, #46
 3989 0036 E8D0     		beq	.L410
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3990              		.loc 1 1627 0 discriminator 2
 3991 0038 0F2B     		cmp	r3, #15
 3992 003a E6D0     		beq	.L410
1627:Middlewares/Third_Party/FatFs/src/ff.c **** 			break;
 3993              		.loc 1 1627 0 discriminator 3
 3994 003c 23F02003 		bic	r3, r3, #32
 3995              	.LVL564:
 3996 0040 082B     		cmp	r3, #8
 3997 0042 14BF     		ite	ne
 3998 0044 0023     		movne	r3, #0
 3999 0046 0123     		moveq	r3, #1
 4000 0048 AB42     		cmp	r3, r5
 4001 004a DED1     		bne	.L410
 4002 004c 00E0     		b	.L409
 4003              	.LVL565:
 4004              	.L413:
1606:Middlewares/Third_Party/FatFs/src/ff.c **** 		a = dir[DIR_Attr] & AM_MASK;
 4005              		.loc 1 1606 0 is_stmt 1
 4006 004e 0426     		movs	r6, #4
 4007              	.LVL566:
 4008              	.L409:
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4009              		.loc 1 1634 0
 4010 0050 0EB1     		cbz	r6, .L412
1634:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4011              		.loc 1 1634 0 is_stmt 0 discriminator 1
 4012 0052 0023     		movs	r3, #0
 4013 0054 2361     		str	r3, [r4, #16]
 4014              	.L412:
ARM GAS  /tmp/cckAXl85.s 			page 121


1637:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _FS_MINIMIZE <= 1 || _USE_LABEL || _FS_RPATH >= 2 */
 4015              		.loc 1 1637 0 is_stmt 1
 4016 0056 3046     		mov	r0, r6
 4017 0058 70BD     		pop	{r4, r5, r6, pc}
 4018              		.cfi_endproc
 4019              	.LFE95:
 4021              		.section	.text.remove_chain,"ax",%progbits
 4022              		.align	1
 4023              		.syntax unified
 4024              		.thumb
 4025              		.thumb_func
 4026              		.fpu softvfp
 4028              	remove_chain:
 4029              	.LFB86:
1014:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 4030              		.loc 1 1014 0
 4031              		.cfi_startproc
 4032              		@ args = 0, pretend = 0, frame = 0
 4033              		@ frame_needed = 0, uses_anonymous_args = 0
 4034              	.LVL567:
 4035 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4036              	.LCFI49:
 4037              		.cfi_def_cfa_offset 24
 4038              		.cfi_offset 3, -24
 4039              		.cfi_offset 4, -20
 4040              		.cfi_offset 5, -16
 4041              		.cfi_offset 6, -12
 4042              		.cfi_offset 7, -8
 4043              		.cfi_offset 14, -4
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 4044              		.loc 1 1021 0
 4045 0002 0129     		cmp	r1, #1
 4046 0004 2FD9     		bls	.L420
 4047 0006 0446     		mov	r4, r0
 4048 0008 0D46     		mov	r5, r1
1021:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = FR_INT_ERR;
 4049              		.loc 1 1021 0 is_stmt 0 discriminator 1
 4050 000a D0F81832 		ldr	r3, [r0, #536]
 4051 000e 9942     		cmp	r1, r3
 4052 0010 01D3     		bcc	.L425
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4053              		.loc 1 1022 0 is_stmt 1
 4054 0012 0227     		movs	r7, #2
 4055 0014 28E0     		b	.L416
 4056              	.L425:
 4057 0016 0027     		movs	r7, #0
 4058 0018 00E0     		b	.L417
 4059              	.LVL568:
 4060              	.L418:
 4061 001a 3546     		mov	r5, r6
 4062              	.LVL569:
 4063              	.L417:
1026:Middlewares/Third_Party/FatFs/src/ff.c **** 			nxt = get_fat(fs, clst);			/* Get cluster status */
 4064              		.loc 1 1026 0
 4065 001c D4F81832 		ldr	r3, [r4, #536]
 4066 0020 9D42     		cmp	r5, r3
 4067 0022 21D2     		bcs	.L416
ARM GAS  /tmp/cckAXl85.s 			page 122


1027:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0) break;				/* Empty cluster? */
 4068              		.loc 1 1027 0
 4069 0024 2946     		mov	r1, r5
 4070 0026 2046     		mov	r0, r4
 4071 0028 FFF7FEFF 		bl	get_fat
 4072              	.LVL570:
1028:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 1) { res = FR_INT_ERR; break; }	/* Internal error? */
 4073              		.loc 1 1028 0
 4074 002c 0646     		mov	r6, r0
 4075 002e D8B1     		cbz	r0, .L416
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 4076              		.loc 1 1029 0
 4077 0030 0128     		cmp	r0, #1
 4078 0032 1BD0     		beq	.L422
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 4079              		.loc 1 1030 0
 4080 0034 B0F1FF3F 		cmp	r0, #-1
 4081 0038 1AD0     		beq	.L423
1031:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
 4082              		.loc 1 1031 0
 4083 003a 0022     		movs	r2, #0
 4084 003c 2946     		mov	r1, r5
 4085 003e 2046     		mov	r0, r4
 4086              	.LVL571:
 4087 0040 FFF7FEFF 		bl	put_fat
 4088              	.LVL572:
1032:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fs->free_clust != 0xFFFFFFFF) {	/* Update FSINFO */
 4089              		.loc 1 1032 0
 4090 0044 0746     		mov	r7, r0
 4091 0046 78B9     		cbnz	r0, .L416
1033:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->free_clust++;
 4092              		.loc 1 1033 0
 4093 0048 D4F81432 		ldr	r3, [r4, #532]
 4094 004c B3F1FF3F 		cmp	r3, #-1
 4095 0050 E3D0     		beq	.L418
1034:Middlewares/Third_Party/FatFs/src/ff.c **** 				fs->fsi_flag |= 1;
 4096              		.loc 1 1034 0
 4097 0052 0133     		adds	r3, r3, #1
 4098 0054 C4F81432 		str	r3, [r4, #532]
1035:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4099              		.loc 1 1035 0
 4100 0058 94F80532 		ldrb	r3, [r4, #517]	@ zero_extendqisi2
 4101 005c 43F00103 		orr	r3, r3, #1
 4102 0060 84F80532 		strb	r3, [r4, #517]
 4103 0064 D9E7     		b	.L418
 4104              	.LVL573:
 4105              	.L420:
1022:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4106              		.loc 1 1022 0
 4107 0066 0227     		movs	r7, #2
 4108              	.LVL574:
 4109              	.L416:
1052:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4110              		.loc 1 1052 0
 4111 0068 3846     		mov	r0, r7
 4112 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4113              	.LVL575:
ARM GAS  /tmp/cckAXl85.s 			page 123


 4114              	.L422:
1029:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }	/* Disk error? */
 4115              		.loc 1 1029 0
 4116 006c 0227     		movs	r7, #2
 4117              	.LVL576:
 4118 006e FBE7     		b	.L416
 4119              	.LVL577:
 4120              	.L423:
1030:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = put_fat(fs, clst, 0);			/* Mark the cluster "empty" */
 4121              		.loc 1 1030 0
 4122 0070 0127     		movs	r7, #1
 4123              	.LVL578:
 4124 0072 F9E7     		b	.L416
 4125              		.cfi_endproc
 4126              	.LFE86:
 4128              		.section	.text.f_mount,"ax",%progbits
 4129              		.align	1
 4130              		.global	f_mount
 4131              		.syntax unified
 4132              		.thumb
 4133              		.thumb_func
 4134              		.fpu softvfp
 4136              	f_mount:
 4137              	.LFB105:
2459:Middlewares/Third_Party/FatFs/src/ff.c **** 
2460:Middlewares/Third_Party/FatFs/src/ff.c **** 
2461:Middlewares/Third_Party/FatFs/src/ff.c **** 
2462:Middlewares/Third_Party/FatFs/src/ff.c **** 
2463:Middlewares/Third_Party/FatFs/src/ff.c **** /*--------------------------------------------------------------------------
2464:Middlewares/Third_Party/FatFs/src/ff.c **** 
2465:Middlewares/Third_Party/FatFs/src/ff.c ****    Public Functions
2466:Middlewares/Third_Party/FatFs/src/ff.c **** 
2467:Middlewares/Third_Party/FatFs/src/ff.c **** --------------------------------------------------------------------------*/
2468:Middlewares/Third_Party/FatFs/src/ff.c **** 
2469:Middlewares/Third_Party/FatFs/src/ff.c **** 
2470:Middlewares/Third_Party/FatFs/src/ff.c **** 
2471:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2472:Middlewares/Third_Party/FatFs/src/ff.c **** /* Mount/Unmount a Logical Drive                                         */
2473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2474:Middlewares/Third_Party/FatFs/src/ff.c **** 
2475:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mount (
2476:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs,			/* Pointer to the file system object (NULL:unmount)*/
2477:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number to be mounted/unmounted */
2478:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE opt			/* 0:Do not mount (delayed mount), 1:Mount immediately */
2479:Middlewares/Third_Party/FatFs/src/ff.c **** )
2480:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4138              		.loc 1 2480 0
 4139              		.cfi_startproc
 4140              		@ args = 0, pretend = 0, frame = 16
 4141              		@ frame_needed = 0, uses_anonymous_args = 0
 4142              	.LVL579:
 4143 0000 70B5     		push	{r4, r5, r6, lr}
 4144              	.LCFI50:
 4145              		.cfi_def_cfa_offset 16
 4146              		.cfi_offset 4, -16
 4147              		.cfi_offset 5, -12
 4148              		.cfi_offset 6, -8
ARM GAS  /tmp/cckAXl85.s 			page 124


 4149              		.cfi_offset 14, -4
 4150 0002 84B0     		sub	sp, sp, #16
 4151              	.LCFI51:
 4152              		.cfi_def_cfa_offset 32
 4153 0004 0190     		str	r0, [sp, #4]
 4154 0006 0091     		str	r1, [sp]
 4155 0008 1646     		mov	r6, r2
2481:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *cfs;
2482:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2484:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR *rp = path;
 4156              		.loc 1 2484 0
 4157 000a 04A8     		add	r0, sp, #16
 4158              	.LVL580:
 4159 000c 40F8041D 		str	r1, [r0, #-4]!
2485:Middlewares/Third_Party/FatFs/src/ff.c **** 
2486:Middlewares/Third_Party/FatFs/src/ff.c **** 
2487:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&rp);
 4160              		.loc 1 2487 0
 4161 0010 FFF7FEFF 		bl	get_ldnumber
 4162              	.LVL581:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 4163              		.loc 1 2488 0
 4164 0014 051E     		subs	r5, r0, #0
 4165 0016 31DB     		blt	.L430
2489:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4166              		.loc 1 2489 0
 4167 0018 1B4B     		ldr	r3, .L438
 4168 001a 53F82540 		ldr	r4, [r3, r5, lsl #2]
 4169              	.LVL582:
2490:Middlewares/Third_Party/FatFs/src/ff.c **** 
2491:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (cfs) {
 4170              		.loc 1 2491 0
 4171 001e 64B1     		cbz	r4, .L428
2492:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2493:Middlewares/Third_Party/FatFs/src/ff.c **** 		clear_lock(cfs);
 4172              		.loc 1 2493 0
 4173 0020 2046     		mov	r0, r4
 4174              	.LVL583:
 4175 0022 FFF7FEFF 		bl	clear_lock
 4176              	.LVL584:
2494:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2495:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Discard sync object of the current volume */
2496:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_del_syncobj(cfs->sobj)) return FR_INT_ERR;
 4177              		.loc 1 2496 0
 4178 0026 D4F80C02 		ldr	r0, [r4, #524]
 4179 002a FFF7FEFF 		bl	ff_del_syncobj
 4180              	.LVL585:
 4181 002e 08B9     		cbnz	r0, .L436
 4182 0030 0224     		movs	r4, #2
 4183              	.LVL586:
 4184 0032 24E0     		b	.L427
 4185              	.LVL587:
 4186              	.L436:
2497:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2498:Middlewares/Third_Party/FatFs/src/ff.c **** 		cfs->fs_type = 0;				/* Clear old fs object */
 4187              		.loc 1 2498 0
ARM GAS  /tmp/cckAXl85.s 			page 125


 4188 0034 0023     		movs	r3, #0
 4189 0036 84F80032 		strb	r3, [r4, #512]
 4190              	.L428:
2499:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2500:Middlewares/Third_Party/FatFs/src/ff.c **** 
2501:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fs) {
 4191              		.loc 1 2501 0
 4192 003a 0199     		ldr	r1, [sp, #4]
 4193 003c 51B1     		cbz	r1, .L429
2502:Middlewares/Third_Party/FatFs/src/ff.c **** 		fs->fs_type = 0;				/* Clear new fs object */
 4194              		.loc 1 2502 0
 4195 003e 0023     		movs	r3, #0
 4196 0040 81F80032 		strb	r3, [r1, #512]
2503:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT						/* Create sync object for the new volume */
2504:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!ff_cre_syncobj((BYTE)vol, &fs->sobj)) return FR_INT_ERR;
 4197              		.loc 1 2504 0
 4198 0044 01F50371 		add	r1, r1, #524
 4199 0048 E8B2     		uxtb	r0, r5
 4200 004a FFF7FEFF 		bl	ff_cre_syncobj
 4201              	.LVL588:
 4202 004e 08B9     		cbnz	r0, .L429
 4203 0050 0224     		movs	r4, #2
 4204              	.LVL589:
 4205 0052 14E0     		b	.L427
 4206              	.LVL590:
 4207              	.L429:
2505:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2506:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2507:Middlewares/Third_Party/FatFs/src/ff.c **** 	FatFs[vol] = fs;					/* Register new fs object */
 4208              		.loc 1 2507 0
 4209 0054 019B     		ldr	r3, [sp, #4]
 4210 0056 0C4A     		ldr	r2, .L438
 4211 0058 42F82530 		str	r3, [r2, r5, lsl #2]
2508:Middlewares/Third_Party/FatFs/src/ff.c **** 
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs || opt != 1) return FR_OK;	/* Do not mount now, it will be mounted later */
 4212              		.loc 1 2509 0
 4213 005c 93B1     		cbz	r3, .L433
 4214              		.loc 1 2509 0 is_stmt 0 discriminator 2
 4215 005e 012E     		cmp	r6, #1
 4216 0060 01D0     		beq	.L437
 4217              		.loc 1 2509 0
 4218 0062 0024     		movs	r4, #0
 4219              	.LVL591:
 4220 0064 0BE0     		b	.L427
 4221              	.LVL592:
 4222              	.L437:
2510:Middlewares/Third_Party/FatFs/src/ff.c **** 
2511:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);	/* Force mounted the volume */
 4223              		.loc 1 2511 0 is_stmt 1
 4224 0066 0022     		movs	r2, #0
 4225 0068 6946     		mov	r1, sp
 4226 006a 01A8     		add	r0, sp, #4
 4227 006c FFF7FEFF 		bl	find_volume
 4228              	.LVL593:
 4229 0070 0446     		mov	r4, r0
 4230              	.LVL594:
2512:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
ARM GAS  /tmp/cckAXl85.s 			page 126


 4231              		.loc 1 2512 0
 4232 0072 0146     		mov	r1, r0
 4233 0074 0198     		ldr	r0, [sp, #4]
 4234              	.LVL595:
 4235 0076 FFF7FEFF 		bl	unlock_fs
 4236              	.LVL596:
 4237 007a 00E0     		b	.L427
 4238              	.LVL597:
 4239              	.L430:
2488:Middlewares/Third_Party/FatFs/src/ff.c **** 	cfs = FatFs[vol];					/* Pointer to fs object */
 4240              		.loc 1 2488 0
 4241 007c 0B24     		movs	r4, #11
 4242              	.LVL598:
 4243              	.L427:
2513:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4244              		.loc 1 2513 0
 4245 007e 2046     		mov	r0, r4
 4246 0080 04B0     		add	sp, sp, #16
 4247              	.LCFI52:
 4248              		.cfi_remember_state
 4249              		.cfi_def_cfa_offset 16
 4250              		@ sp needed
 4251 0082 70BD     		pop	{r4, r5, r6, pc}
 4252              	.LVL599:
 4253              	.L433:
 4254              	.LCFI53:
 4255              		.cfi_restore_state
2509:Middlewares/Third_Party/FatFs/src/ff.c **** 
 4256              		.loc 1 2509 0
 4257 0084 0024     		movs	r4, #0
 4258              	.LVL600:
 4259 0086 FAE7     		b	.L427
 4260              	.L439:
 4261              		.align	2
 4262              	.L438:
 4263 0088 00000000 		.word	.LANCHOR2
 4264              		.cfi_endproc
 4265              	.LFE105:
 4267              		.section	.text.f_open,"ax",%progbits
 4268              		.align	1
 4269              		.global	f_open
 4270              		.syntax unified
 4271              		.thumb
 4272              		.thumb_func
 4273              		.fpu softvfp
 4275              	f_open:
 4276              	.LFB106:
2514:Middlewares/Third_Party/FatFs/src/ff.c **** 
2515:Middlewares/Third_Party/FatFs/src/ff.c **** 
2516:Middlewares/Third_Party/FatFs/src/ff.c **** 
2517:Middlewares/Third_Party/FatFs/src/ff.c **** 
2518:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2519:Middlewares/Third_Party/FatFs/src/ff.c **** /* Open or Create a File                                                 */
2520:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2521:Middlewares/Third_Party/FatFs/src/ff.c **** 
2522:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_open (
2523:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the blank file object */
ARM GAS  /tmp/cckAXl85.s 			page 127


2524:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file name */
2525:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mode			/* Access mode and file open mode flags */
2526:Middlewares/Third_Party/FatFs/src/ff.c **** )
2527:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4277              		.loc 1 2527 0
 4278              		.cfi_startproc
 4279              		@ args = 0, pretend = 0, frame = 56
 4280              		@ frame_needed = 0, uses_anonymous_args = 0
 4281              	.LVL601:
 4282 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4283              	.LCFI54:
 4284              		.cfi_def_cfa_offset 28
 4285              		.cfi_offset 4, -28
 4286              		.cfi_offset 5, -24
 4287              		.cfi_offset 6, -20
 4288              		.cfi_offset 7, -16
 4289              		.cfi_offset 8, -12
 4290              		.cfi_offset 9, -8
 4291              		.cfi_offset 14, -4
 4292 0004 8FB0     		sub	sp, sp, #60
 4293              	.LCFI55:
 4294              		.cfi_def_cfa_offset 88
 4295 0006 0191     		str	r1, [sp, #4]
2528:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2529:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2530:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2531:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2532:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2533:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw, cl;
2534:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2535:Middlewares/Third_Party/FatFs/src/ff.c **** 
2536:Middlewares/Third_Party/FatFs/src/ff.c **** 
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fp) return FR_INVALID_OBJECT;
 4296              		.loc 1 2537 0
 4297 0008 0028     		cmp	r0, #0
 4298 000a 00F0DF80 		beq	.L451
 4299 000e 0446     		mov	r4, r0
 4300 0010 1646     		mov	r6, r2
2538:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 4301              		.loc 1 2538 0
 4302 0012 0023     		movs	r3, #0
 4303 0014 0360     		str	r3, [r0]
2539:Middlewares/Third_Party/FatFs/src/ff.c **** 
2540:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2541:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2542:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ | FA_WRITE | FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW;
 4304              		.loc 1 2542 0
 4305 0016 02F01F07 		and	r7, r2, #31
 4306              	.LVL602:
2543:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, (BYTE)(mode & ~FA_READ));
 4307              		.loc 1 2543 0
 4308 001a 02F01E02 		and	r2, r2, #30
 4309 001e 01A9     		add	r1, sp, #4
 4310              	.LVL603:
 4311 0020 06A8     		add	r0, sp, #24
 4312              	.LVL604:
 4313 0022 FFF7FEFF 		bl	find_volume
ARM GAS  /tmp/cckAXl85.s 			page 128


 4314              	.LVL605:
2544:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2545:Middlewares/Third_Party/FatFs/src/ff.c **** 	mode &= FA_READ;
2546:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2547:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2548:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 4315              		.loc 1 2548 0
 4316 0026 0546     		mov	r5, r0
 4317 0028 38B1     		cbz	r0, .L460
 4318              	.LVL606:
 4319              	.L442:
2549:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
2550:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
2551:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dj.dir;
2552:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir)	/* Default directory itself */
2555:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2556:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2557:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
2558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = chk_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2559:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2560:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2561:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create or Open a file */
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (mode & (FA_CREATE_ALWAYS | FA_OPEN_ALWAYS | FA_CREATE_NEW)) {
2563:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
2564:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
2565:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2566:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = enq_lock() ? dir_register(&dj) : FR_TOO_MANY_OPEN_FILES;
2567:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2568:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&dj);
2569:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA_CREATE_ALWAYS;		/* File is created */
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
2572:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2573:Middlewares/Third_Party/FatFs/src/ff.c **** 			else {								/* Any object is already existing */
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & (AM_RDO | AM_DIR)) {	/* Cannot overwrite it (R/O or DIR) */
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
2576:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (mode & FA_CREATE_NEW)	/* Cannot create as new file */
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_EXIST;
2579:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2580:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (mode & FA_CREATE_ALWAYS)) {	/* Truncate it if overwrite mode */
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_CrtTime, dw);
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = 0;				/* Reset attribute */
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, 0);/* size = 0 */
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, 0);				/* cluster = 0 */
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (cl) {						/* Remove the cluster chain if exist */
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 					dw = dj.fs->winsect;
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, cl);
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(dj.fs, dw);
ARM GAS  /tmp/cckAXl85.s 			page 129


2595:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
2596:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2597:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2598:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2599:Middlewares/Third_Party/FatFs/src/ff.c **** 		else {	/* Open an existing file */
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Follow succeeded */
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2603:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 					if ((mode & FA_WRITE) && (dir[DIR_Attr] & AM_RDO)) /* R/O violation */
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
2606:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2607:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2608:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2609:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA__WRITTEN;
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
2613:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dir;
2614:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2615:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->lockid = inc_lock(&dj, (mode & ~FA_READ) ? 1 : 0);
2616:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->lockid) res = FR_INT_ERR;
2617:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2618:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2619:Middlewares/Third_Party/FatFs/src/ff.c **** 
2620:Middlewares/Third_Party/FatFs/src/ff.c **** #else				/* R/O configuration */
2621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow succeeded */
2622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
2623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Current directory itself */
2624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
2625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
2626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR)	/* It is a directory */
2627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
2628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2629:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2630:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2631:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
2632:Middlewares/Third_Party/FatFs/src/ff.c **** 
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;					/* File access mode */
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;						/* Clear error flag */
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = LD_DWORD(dir + DIR_FileSize);	/* File size */
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;						/* File pointer */
2639:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = 0;
2640:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2641:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->cltbl = 0;						/* Normal seek mode */
2642:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fs = dj.fs;	 					/* Validate file object */
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->id = fp->fs->id;
2645:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2646:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2647:Middlewares/Third_Party/FatFs/src/ff.c **** 
2648:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
 4320              		.loc 1 2648 0
 4321 002a 2946     		mov	r1, r5
 4322 002c 0698     		ldr	r0, [sp, #24]
ARM GAS  /tmp/cckAXl85.s 			page 130


 4323 002e FFF7FEFF 		bl	unlock_fs
 4324              	.LVL607:
 4325              	.L441:
2649:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4326              		.loc 1 2649 0
 4327 0032 2846     		mov	r0, r5
 4328 0034 0FB0     		add	sp, sp, #60
 4329              	.LCFI56:
 4330              		.cfi_remember_state
 4331              		.cfi_def_cfa_offset 28
 4332              		@ sp needed
 4333 0036 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4334              	.LVL608:
 4335              	.L460:
 4336              	.LCFI57:
 4337              		.cfi_restore_state
2549:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 4338              		.loc 1 2549 0
 4339 003a 03AB     		add	r3, sp, #12
 4340 003c 0C93     		str	r3, [sp, #48]
2550:Middlewares/Third_Party/FatFs/src/ff.c **** 		dir = dj.dir;
 4341              		.loc 1 2550 0
 4342 003e 0199     		ldr	r1, [sp, #4]
 4343 0040 06A8     		add	r0, sp, #24
 4344              	.LVL609:
 4345 0042 FFF7FEFF 		bl	follow_path
 4346              	.LVL610:
2551:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY	/* R/W configuration */
 4347              		.loc 1 2551 0
 4348 0046 DDF82C80 		ldr	r8, [sp, #44]
 4349              	.LVL611:
2553:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir)	/* Default directory itself */
 4350              		.loc 1 2553 0
 4351 004a 0546     		mov	r5, r0
 4352 004c 58B9     		cbnz	r0, .L443
2554:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 4353              		.loc 1 2554 0
 4354 004e B8F1000F 		cmp	r8, #0
 4355 0052 52D0     		beq	.L452
2558:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4356              		.loc 1 2558 0
 4357 0054 37F00103 		bics	r3, r7, #1
 4358 0058 14BF     		ite	ne
 4359 005a 0121     		movne	r1, #1
 4360 005c 0021     		moveq	r1, #0
 4361 005e 06A8     		add	r0, sp, #24
 4362              	.LVL612:
 4363 0060 FFF7FEFF 		bl	chk_lock
 4364              	.LVL613:
 4365 0064 0546     		mov	r5, r0
 4366              	.LVL614:
 4367              	.L443:
2562:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {					/* No file, create new */
 4368              		.loc 1 2562 0
 4369 0066 16F01C0F 		tst	r6, #28
 4370 006a 00F09B80 		beq	.L444
2563:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE)			/* There is no file to open, create a new entry */
ARM GAS  /tmp/cckAXl85.s 			page 131


 4371              		.loc 1 2563 0
 4372 006e 002D     		cmp	r5, #0
 4373 0070 4FD0     		beq	.L445
2564:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 4374              		.loc 1 2564 0
 4375 0072 042D     		cmp	r5, #4
 4376 0074 43D0     		beq	.L461
 4377              	.LVL615:
 4378              	.L446:
2570:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;					/* New entry */
 4379              		.loc 1 2570 0
 4380 0076 47F00807 		orr	r7, r7, #8
 4381              	.LVL616:
2571:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4382              		.loc 1 2571 0
 4383 007a DDF82C80 		ldr	r8, [sp, #44]
 4384              	.LVL617:
 4385              	.L447:
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
 4386              		.loc 1 2581 0
 4387 007e 15B9     		cbnz	r5, .L448
2581:Middlewares/Third_Party/FatFs/src/ff.c **** 				dw = GET_FATTIME();				/* Created time */
 4388              		.loc 1 2581 0 is_stmt 0 discriminator 1
 4389 0080 17F0080F 		tst	r7, #8
 4390 0084 51D1     		bne	.L462
 4391              	.LVL618:
 4392              	.L448:
2609:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (mode & FA_CREATE_ALWAYS)		/* Set file change flag if created or overwritten */
 4393              		.loc 1 2609 0 is_stmt 1
 4394 0086 B5B9     		cbnz	r5, .L449
2610:Middlewares/Third_Party/FatFs/src/ff.c **** 				mode |= FA__WRITTEN;
 4395              		.loc 1 2610 0
 4396 0088 17F0080F 		tst	r7, #8
 4397 008c 01D0     		beq	.L450
2611:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_sect = dj.fs->winsect;		/* Pointer to the directory entry */
 4398              		.loc 1 2611 0
 4399 008e 47F02007 		orr	r7, r7, #32
 4400              	.LVL619:
 4401              	.L450:
2612:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dir_ptr = dir;
 4402              		.loc 1 2612 0
 4403 0092 0EA8     		add	r0, sp, #56
 4404 0094 50F8203D 		ldr	r3, [r0, #-32]!
 4405 0098 D3F83032 		ldr	r3, [r3, #560]
 4406 009c E361     		str	r3, [r4, #28]
2613:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 4407              		.loc 1 2613 0
 4408 009e C4F82080 		str	r8, [r4, #32]
2615:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!fp->lockid) res = FR_INT_ERR;
 4409              		.loc 1 2615 0
 4410 00a2 37F00103 		bics	r3, r7, #1
 4411 00a6 14BF     		ite	ne
 4412 00a8 0121     		movne	r1, #1
 4413 00aa 0021     		moveq	r1, #0
 4414 00ac FFF7FEFF 		bl	inc_lock
 4415              	.LVL620:
 4416 00b0 A062     		str	r0, [r4, #40]
ARM GAS  /tmp/cckAXl85.s 			page 132


2616:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4417              		.loc 1 2616 0
 4418 00b2 00B9     		cbnz	r0, .L449
 4419 00b4 0225     		movs	r5, #2
 4420              	.LVL621:
 4421              	.L449:
2633:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag = mode;					/* File access mode */
 4422              		.loc 1 2633 0
 4423 00b6 002D     		cmp	r5, #0
 4424 00b8 B7D1     		bne	.L442
2634:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->err = 0;						/* Clear error flag */
 4425              		.loc 1 2634 0
 4426 00ba A771     		strb	r7, [r4, #6]
2635:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->sclust = ld_clust(dj.fs, dir);	/* File start cluster */
 4427              		.loc 1 2635 0
 4428 00bc 0026     		movs	r6, #0
 4429 00be E671     		strb	r6, [r4, #7]
2636:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = LD_DWORD(dir + DIR_FileSize);	/* File size */
 4430              		.loc 1 2636 0
 4431 00c0 069F     		ldr	r7, [sp, #24]
 4432              	.LVL622:
 4433 00c2 4146     		mov	r1, r8
 4434 00c4 3846     		mov	r0, r7
 4435 00c6 FFF7FEFF 		bl	ld_clust
 4436              	.LVL623:
 4437 00ca 2061     		str	r0, [r4, #16]
2637:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = 0;						/* File pointer */
 4438              		.loc 1 2637 0
 4439 00cc 98F81F20 		ldrb	r2, [r8, #31]	@ zero_extendqisi2
 4440 00d0 98F81E30 		ldrb	r3, [r8, #30]	@ zero_extendqisi2
 4441 00d4 1B04     		lsls	r3, r3, #16
 4442 00d6 43EA0263 		orr	r3, r3, r2, lsl #24
 4443 00da 98F81D20 		ldrb	r2, [r8, #29]	@ zero_extendqisi2
 4444 00de 43EA0223 		orr	r3, r3, r2, lsl #8
 4445 00e2 98F81C20 		ldrb	r2, [r8, #28]	@ zero_extendqisi2
 4446 00e6 1343     		orrs	r3, r3, r2
 4447 00e8 E360     		str	r3, [r4, #12]
2638:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = 0;
 4448              		.loc 1 2638 0
 4449 00ea A660     		str	r6, [r4, #8]
2639:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
 4450              		.loc 1 2639 0
 4451 00ec A661     		str	r6, [r4, #24]
2641:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 4452              		.loc 1 2641 0
 4453 00ee 6662     		str	r6, [r4, #36]
2643:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->id = fp->fs->id;
 4454              		.loc 1 2643 0
 4455 00f0 2760     		str	r7, [r4]
2644:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4456              		.loc 1 2644 0
 4457 00f2 B7F80632 		ldrh	r3, [r7, #518]
 4458 00f6 A380     		strh	r3, [r4, #4]	@ movhi
 4459 00f8 97E7     		b	.L442
 4460              	.LVL624:
 4461              	.L452:
2555:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
ARM GAS  /tmp/cckAXl85.s 			page 133


 4462              		.loc 1 2555 0
 4463 00fa 0625     		movs	r5, #6
 4464 00fc B3E7     		b	.L443
 4465              	.LVL625:
 4466              	.L461:
2566:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4467              		.loc 1 2566 0
 4468 00fe FFF7FEFF 		bl	enq_lock
 4469              	.LVL626:
 4470 0102 08B9     		cbnz	r0, .L463
 4471 0104 1225     		movs	r5, #18
 4472              	.LVL627:
 4473 0106 B6E7     		b	.L446
 4474              	.LVL628:
 4475              	.L463:
2566:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4476              		.loc 1 2566 0 is_stmt 0 discriminator 1
 4477 0108 06A8     		add	r0, sp, #24
 4478 010a FFF7FEFF 		bl	dir_register
 4479              	.LVL629:
 4480 010e 0546     		mov	r5, r0
 4481              	.LVL630:
 4482 0110 B1E7     		b	.L446
 4483              	.LVL631:
 4484              	.L445:
2574:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;
 4485              		.loc 1 2574 0 is_stmt 1
 4486 0112 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 4487 0116 13F0110F 		tst	r3, #17
 4488 011a 04D1     		bne	.L454
2577:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_EXIST;
 4489              		.loc 1 2577 0
 4490 011c 16F0040F 		tst	r6, #4
 4491 0120 ADD0     		beq	.L447
2578:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4492              		.loc 1 2578 0
 4493 0122 0825     		movs	r5, #8
 4494              	.LVL632:
 4495 0124 ABE7     		b	.L447
 4496              	.LVL633:
 4497              	.L454:
2575:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4498              		.loc 1 2575 0
 4499 0126 0725     		movs	r5, #7
 4500              	.LVL634:
 4501 0128 A9E7     		b	.L447
 4502              	.LVL635:
 4503              	.L462:
2582:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_CrtTime, dw);
 4504              		.loc 1 2582 0
 4505 012a FFF7FEFF 		bl	get_fattime
 4506              	.LVL636:
2583:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = 0;				/* Reset attribute */
 4507              		.loc 1 2583 0
 4508 012e 88F80E00 		strb	r0, [r8, #14]
 4509 0132 C0F30723 		ubfx	r3, r0, #8, #8
 4510 0136 88F80F30 		strb	r3, [r8, #15]
ARM GAS  /tmp/cckAXl85.s 			page 134


 4511 013a C0F30743 		ubfx	r3, r0, #16, #8
 4512 013e 88F81030 		strb	r3, [r8, #16]
 4513 0142 000E     		lsrs	r0, r0, #24
 4514              	.LVL637:
 4515 0144 88F81100 		strb	r0, [r8, #17]
2584:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, 0);/* size = 0 */
 4516              		.loc 1 2584 0
 4517 0148 0026     		movs	r6, #0
 4518 014a 88F80B60 		strb	r6, [r8, #11]
2585:Middlewares/Third_Party/FatFs/src/ff.c **** 				cl = ld_clust(dj.fs, dir);		/* Get start cluster */
 4519              		.loc 1 2585 0
 4520 014e 88F81C60 		strb	r6, [r8, #28]
 4521 0152 88F81D60 		strb	r6, [r8, #29]
 4522 0156 88F81E60 		strb	r6, [r8, #30]
 4523 015a 88F81F60 		strb	r6, [r8, #31]
2586:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, 0);				/* cluster = 0 */
 4524              		.loc 1 2586 0
 4525 015e 4146     		mov	r1, r8
 4526 0160 0698     		ldr	r0, [sp, #24]
 4527 0162 FFF7FEFF 		bl	ld_clust
 4528              	.LVL638:
 4529 0166 8146     		mov	r9, r0
 4530              	.LVL639:
2587:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 4531              		.loc 1 2587 0
 4532 0168 3146     		mov	r1, r6
 4533 016a 4046     		mov	r0, r8
 4534              	.LVL640:
 4535 016c FFF7FEFF 		bl	st_clust
 4536              	.LVL641:
2588:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (cl) {						/* Remove the cluster chain if exist */
 4537              		.loc 1 2588 0
 4538 0170 0698     		ldr	r0, [sp, #24]
 4539 0172 0123     		movs	r3, #1
 4540 0174 80F80432 		strb	r3, [r0, #516]
2589:Middlewares/Third_Party/FatFs/src/ff.c **** 					dw = dj.fs->winsect;
 4541              		.loc 1 2589 0
 4542 0178 B9F1000F 		cmp	r9, #0
 4543 017c 83D0     		beq	.L448
2590:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, cl);
 4544              		.loc 1 2590 0
 4545 017e D0F83062 		ldr	r6, [r0, #560]
 4546              	.LVL642:
2591:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 4547              		.loc 1 2591 0
 4548 0182 4946     		mov	r1, r9
 4549 0184 FFF7FEFF 		bl	remove_chain
 4550              	.LVL643:
2592:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->last_clust = cl - 1;	/* Reuse the cluster hole */
 4551              		.loc 1 2592 0
 4552 0188 0546     		mov	r5, r0
 4553 018a 0028     		cmp	r0, #0
 4554 018c 7FF47BAF 		bne	.L448
2593:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(dj.fs, dw);
 4555              		.loc 1 2593 0
 4556 0190 0698     		ldr	r0, [sp, #24]
 4557              	.LVL644:
ARM GAS  /tmp/cckAXl85.s 			page 135


 4558 0192 09F1FF33 		add	r3, r9, #-1
 4559 0196 C0F81032 		str	r3, [r0, #528]
2594:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 4560              		.loc 1 2594 0
 4561 019a 3146     		mov	r1, r6
 4562 019c FFF7FEFF 		bl	move_window
 4563              	.LVL645:
 4564 01a0 0546     		mov	r5, r0
 4565              	.LVL646:
 4566 01a2 70E7     		b	.L448
 4567              	.LVL647:
 4568              	.L444:
2600:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_DIR) {	/* It is a directory */
 4569              		.loc 1 2600 0
 4570 01a4 002D     		cmp	r5, #0
 4571 01a6 7FF46EAF 		bne	.L448
2601:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_FILE;
 4572              		.loc 1 2601 0
 4573 01aa 98F80B30 		ldrb	r3, [r8, #11]	@ zero_extendqisi2
 4574 01ae 13F0100F 		tst	r3, #16
 4575 01b2 09D1     		bne	.L456
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4576              		.loc 1 2604 0
 4577 01b4 16F0020F 		tst	r6, #2
 4578 01b8 3FF465AF 		beq	.L448
2604:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
 4579              		.loc 1 2604 0 is_stmt 0 discriminator 1
 4580 01bc 13F0010F 		tst	r3, #1
 4581 01c0 3FF461AF 		beq	.L448
2605:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4582              		.loc 1 2605 0 is_stmt 1
 4583 01c4 0725     		movs	r5, #7
 4584              	.LVL648:
 4585 01c6 5EE7     		b	.L448
 4586              	.LVL649:
 4587              	.L456:
2602:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {
 4588              		.loc 1 2602 0
 4589 01c8 0425     		movs	r5, #4
 4590              	.LVL650:
 4591 01ca 5CE7     		b	.L448
 4592              	.LVL651:
 4593              	.L451:
2537:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->fs = 0;			/* Clear file object */
 4594              		.loc 1 2537 0
 4595 01cc 0925     		movs	r5, #9
 4596 01ce 30E7     		b	.L441
 4597              		.cfi_endproc
 4598              	.LFE106:
 4600              		.section	.text.f_read,"ax",%progbits
 4601              		.align	1
 4602              		.global	f_read
 4603              		.syntax unified
 4604              		.thumb
 4605              		.thumb_func
 4606              		.fpu softvfp
 4608              	f_read:
ARM GAS  /tmp/cckAXl85.s 			page 136


 4609              	.LFB107:
2650:Middlewares/Third_Party/FatFs/src/ff.c **** 
2651:Middlewares/Third_Party/FatFs/src/ff.c **** 
2652:Middlewares/Third_Party/FatFs/src/ff.c **** 
2653:Middlewares/Third_Party/FatFs/src/ff.c **** 
2654:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2655:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read File                                                             */
2656:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2657:Middlewares/Third_Party/FatFs/src/ff.c **** 
2658:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_read (
2659:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 		/* Pointer to the file object */
2660:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* buff,		/* Pointer to data buffer */
2661:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btr,		/* Number of bytes to read */
2662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* br		/* Pointer to number of bytes read */
2663:Middlewares/Third_Party/FatFs/src/ff.c **** )
2664:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4610              		.loc 1 2664 0
 4611              		.cfi_startproc
 4612              		@ args = 0, pretend = 0, frame = 8
 4613              		@ frame_needed = 0, uses_anonymous_args = 0
 4614              	.LVL652:
 4615 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4616              	.LCFI58:
 4617              		.cfi_def_cfa_offset 36
 4618              		.cfi_offset 4, -36
 4619              		.cfi_offset 5, -32
 4620              		.cfi_offset 6, -28
 4621              		.cfi_offset 7, -24
 4622              		.cfi_offset 8, -20
 4623              		.cfi_offset 9, -16
 4624              		.cfi_offset 10, -12
 4625              		.cfi_offset 11, -8
 4626              		.cfi_offset 14, -4
 4627 0004 83B0     		sub	sp, sp, #12
 4628              	.LCFI59:
 4629              		.cfi_def_cfa_offset 48
 4630 0006 0546     		mov	r5, r0
 4631 0008 8846     		mov	r8, r1
 4632 000a 1646     		mov	r6, r2
 4633 000c 9946     		mov	r9, r3
 4634              	.LVL653:
2665:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2666:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect, remain;
2667:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt, cc;
2668:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect, *rbuff = (BYTE*)buff;
2669:Middlewares/Third_Party/FatFs/src/ff.c **** 
2670:Middlewares/Third_Party/FatFs/src/ff.c **** 
2671:Middlewares/Third_Party/FatFs/src/ff.c **** 	*br = 0;	/* Clear read byte counter */
 4635              		.loc 1 2671 0
 4636 000e 0023     		movs	r3, #0
 4637              	.LVL654:
 4638 0010 C9F80030 		str	r3, [r9]
2672:Middlewares/Third_Party/FatFs/src/ff.c **** 
2673:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);							/* Check validity */
 4639              		.loc 1 2673 0
 4640 0014 FFF7FEFF 		bl	validate
 4641              	.LVL655:
ARM GAS  /tmp/cckAXl85.s 			page 137


2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4642              		.loc 1 2674 0
 4643 0018 0190     		str	r0, [sp, #4]
 4644 001a 60B9     		cbnz	r0, .L490
2675:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)								/* Check error */
 4645              		.loc 1 2675 0
 4646 001c E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 4647 001e 79B9     		cbnz	r1, .L491
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2677:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4648              		.loc 1 2677 0
 4649 0020 AB79     		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 4650 0022 13F0010F 		tst	r3, #1
 4651 0026 11D0     		beq	.L492
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
2679:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
 4652              		.loc 1 2679 0
 4653 0028 EB68     		ldr	r3, [r5, #12]
 4654 002a AA68     		ldr	r2, [r5, #8]
 4655 002c 9B1A     		subs	r3, r3, r2
 4656              	.LVL656:
2680:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btr > remain) btr = (UINT)remain;		/* Truncate btr by remaining bytes */
 4657              		.loc 1 2680 0
 4658 002e B342     		cmp	r3, r6
 4659 0030 6AD2     		bcs	.L470
 4660 0032 1E46     		mov	r6, r3
 4661              	.LVL657:
 4662 0034 68E0     		b	.L470
 4663              	.LVL658:
 4664              	.L490:
2674:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)								/* Check error */
 4665              		.loc 1 2674 0 discriminator 1
 4666 0036 0146     		mov	r1, r0
 4667 0038 2868     		ldr	r0, [r5]
 4668              	.LVL659:
 4669 003a FFF7FEFF 		bl	unlock_fs
 4670              	.LVL660:
 4671 003e 0BE0     		b	.L466
 4672              	.LVL661:
 4673              	.L491:
2676:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ)) 					/* Check access mode */
 4674              		.loc 1 2676 0
 4675 0040 2868     		ldr	r0, [r5]
 4676              	.LVL662:
 4677 0042 FFF7FEFF 		bl	unlock_fs
 4678              	.LVL663:
 4679 0046 EB79     		ldrb	r3, [r5, #7]	@ zero_extendqisi2
 4680 0048 0193     		str	r3, [sp, #4]
 4681 004a 05E0     		b	.L466
 4682              	.LVL664:
 4683              	.L492:
2678:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
 4684              		.loc 1 2678 0
 4685 004c 0721     		movs	r1, #7
 4686 004e 2868     		ldr	r0, [r5]
 4687              	.LVL665:
 4688 0050 FFF7FEFF 		bl	unlock_fs
ARM GAS  /tmp/cckAXl85.s 			page 138


 4689              	.LVL666:
 4690 0054 0723     		movs	r3, #7
 4691 0056 0193     		str	r3, [sp, #4]
 4692              	.LVL667:
 4693              	.L466:
2681:Middlewares/Third_Party/FatFs/src/ff.c **** 
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btr;								/* Repeat until all data read */
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
2689:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
2690:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2693:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2694:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, fp->clust);	/* Follow cluster chain on the FAT */
2696:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst < 2) ABORT(fp->fs, FR_INT_ERR);
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
2700:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
2704:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {							/* Read maximum contiguous sectors directly */
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
2709:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2710:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
2711:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->wflag && fp->fs->winsect - sect < cc)
2713:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win.d8, SS(fp->fs));
2714:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2715:Middlewares/Third_Party/FatFs/src/ff.c **** 				if ((fp->flag & FA__DIRTY) && fp->dsect - sect < cc)
2716:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->dsect - sect) * SS(fp->fs)), fp->buf.d8, SS(fp->fs));
2717:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2718:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 				rcnt = SS(fp->fs) * cc;			/* Number of bytes transferred */
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
2721:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2722:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2723:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {			/* Load data sector if not in cache */
2724:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2725:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
2726:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2727:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
2728:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
2729:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2730:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2731:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)	/* Fill sector cache */
2732:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
ARM GAS  /tmp/cckAXl85.s 			page 139


2733:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2734:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
2736:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));	/* Get partial sector data from sector buffer 
2738:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;
2739:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)		/* Move sector window */
2741:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2742:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->fs->win.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2743:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2744:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->buf.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
2745:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2746:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2747:Middlewares/Third_Party/FatFs/src/ff.c **** 
2748:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
2749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4694              		.loc 1 2749 0
 4695 0058 0198     		ldr	r0, [sp, #4]
 4696 005a 03B0     		add	sp, sp, #12
 4697              	.LCFI60:
 4698              		.cfi_remember_state
 4699              		.cfi_def_cfa_offset 36
 4700              		@ sp needed
 4701 005c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4702              	.LVL668:
 4703              	.L473:
 4704              	.LCFI61:
 4705              		.cfi_restore_state
2691:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 4706              		.loc 1 2691 0
 4707 0060 6B6A     		ldr	r3, [r5, #36]
 4708 0062 1BB1     		cbz	r3, .L475
2692:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
 4709              		.loc 1 2692 0
 4710 0064 2846     		mov	r0, r5
 4711              	.LVL669:
 4712 0066 FFF7FEFF 		bl	clmt_clust
 4713              	.LVL670:
 4714 006a 5FE0     		b	.L474
 4715              	.LVL671:
 4716              	.L475:
2695:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 4717              		.loc 1 2695 0
 4718 006c 6969     		ldr	r1, [r5, #20]
 4719              	.LVL672:
 4720 006e FFF7FEFF 		bl	get_fat
 4721              	.LVL673:
 4722 0072 5BE0     		b	.L474
 4723              	.L495:
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4724              		.loc 1 2697 0 discriminator 1
 4725 0074 0224     		movs	r4, #2
 4726 0076 EC71     		strb	r4, [r5, #7]
 4727 0078 2146     		mov	r1, r4
 4728 007a 2868     		ldr	r0, [r5]
 4729              	.LVL674:
ARM GAS  /tmp/cckAXl85.s 			page 140


 4730 007c FFF7FEFF 		bl	unlock_fs
 4731              	.LVL675:
 4732 0080 0194     		str	r4, [sp, #4]
 4733 0082 E9E7     		b	.L466
 4734              	.LVL676:
 4735              	.L496:
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4736              		.loc 1 2698 0 discriminator 1
 4737 0084 0124     		movs	r4, #1
 4738 0086 EC71     		strb	r4, [r5, #7]
 4739 0088 2146     		mov	r1, r4
 4740 008a 2868     		ldr	r0, [r5]
 4741              	.LVL677:
 4742 008c FFF7FEFF 		bl	unlock_fs
 4743              	.LVL678:
 4744 0090 0194     		str	r4, [sp, #4]
 4745 0092 E1E7     		b	.L466
 4746              	.LVL679:
 4747              	.L497:
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4748              		.loc 1 2702 0 discriminator 1
 4749 0094 0224     		movs	r4, #2
 4750 0096 EC71     		strb	r4, [r5, #7]
 4751 0098 2146     		mov	r1, r4
 4752 009a 5846     		mov	r0, fp
 4753              	.LVL680:
 4754 009c FFF7FEFF 		bl	unlock_fs
 4755              	.LVL681:
 4756 00a0 0194     		str	r4, [sp, #4]
 4757 00a2 D9E7     		b	.L466
 4758              	.LVL682:
 4759              	.L498:
2709:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY && _FS_MINIMIZE <= 2			/* Replace one of the read sectors with cached data if it 
 4760              		.loc 1 2709 0
 4761 00a4 0124     		movs	r4, #1
 4762              	.LVL683:
 4763 00a6 EC71     		strb	r4, [r5, #7]
 4764 00a8 2146     		mov	r1, r4
 4765 00aa 2868     		ldr	r0, [r5]
 4766 00ac FFF7FEFF 		bl	unlock_fs
 4767              	.LVL684:
 4768 00b0 0194     		str	r4, [sp, #4]
 4769 00b2 D1E7     		b	.L466
 4770              	.LVL685:
 4771              	.L499:
2713:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4772              		.loc 1 2713 0
 4773 00b4 4FF40072 		mov	r2, #512
 4774 00b8 08EB4020 		add	r0, r8, r0, lsl #9
 4775 00bc FFF7FEFF 		bl	mem_cpy
 4776              	.LVL686:
 4777 00c0 5FE0     		b	.L482
 4778              	.L479:
2735:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 4779              		.loc 1 2735 0
 4780 00c2 C5F818A0 		str	r10, [r5, #24]
 4781              	.LVL687:
ARM GAS  /tmp/cckAXl85.s 			page 141


 4782              	.L471:
2737:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btr) rcnt = btr;
 4783              		.loc 1 2737 0
 4784 00c6 AC68     		ldr	r4, [r5, #8]
 4785 00c8 C4F30804 		ubfx	r4, r4, #0, #9
 4786 00cc C4F50074 		rsb	r4, r4, #512
 4787              	.LVL688:
2738:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 4788              		.loc 1 2738 0
 4789 00d0 A642     		cmp	r6, r4
 4790 00d2 00D2     		bcs	.L484
 4791 00d4 3446     		mov	r4, r6
 4792              	.LVL689:
 4793              	.L484:
2740:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
 4794              		.loc 1 2740 0
 4795 00d6 A969     		ldr	r1, [r5, #24]
 4796 00d8 2868     		ldr	r0, [r5]
 4797 00da FFF7FEFF 		bl	move_window
 4798              	.LVL690:
 4799 00de 0028     		cmp	r0, #0
 4800 00e0 51D1     		bne	.L493
2742:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 4801              		.loc 1 2742 0
 4802 00e2 2968     		ldr	r1, [r5]
 4803 00e4 AB68     		ldr	r3, [r5, #8]
 4804 00e6 C3F30803 		ubfx	r3, r3, #0, #9
 4805 00ea 2246     		mov	r2, r4
 4806 00ec 1944     		add	r1, r1, r3
 4807 00ee 4046     		mov	r0, r8
 4808 00f0 FFF7FEFF 		bl	mem_cpy
 4809              	.LVL691:
 4810              	.L483:
2683:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {		/* On the sector boundary? */
 4811              		.loc 1 2683 0
 4812 00f4 A044     		add	r8, r8, r4
 4813              	.LVL692:
 4814 00f6 AB68     		ldr	r3, [r5, #8]
 4815 00f8 2344     		add	r3, r3, r4
 4816 00fa AB60     		str	r3, [r5, #8]
 4817 00fc D9F80030 		ldr	r3, [r9]
 4818 0100 2344     		add	r3, r3, r4
 4819 0102 C9F80030 		str	r3, [r9]
 4820 0106 361B     		subs	r6, r6, r4
 4821              	.LVL693:
 4822              	.L470:
2682:Middlewares/Third_Party/FatFs/src/ff.c **** 		rbuff += rcnt, fp->fptr += rcnt, *br += rcnt, btr -= rcnt) {
 4823              		.loc 1 2682 0
 4824 0108 002E     		cmp	r6, #0
 4825 010a 44D0     		beq	.L494
2684:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 4826              		.loc 1 2684 0
 4827 010c A968     		ldr	r1, [r5, #8]
 4828 010e C1F30803 		ubfx	r3, r1, #0, #9
 4829 0112 002B     		cmp	r3, #0
 4830 0114 D7D1     		bne	.L471
2685:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {						/* On the cluster boundary? */
ARM GAS  /tmp/cckAXl85.s 			page 142


 4831              		.loc 1 2685 0
 4832 0116 2868     		ldr	r0, [r5]
 4833 0118 90F80272 		ldrb	r7, [r0, #514]	@ zero_extendqisi2
 4834 011c 013F     		subs	r7, r7, #1
 4835 011e FFB2     		uxtb	r7, r7
 4836              	.LVL694:
2686:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {			/* On the top of the file? */
 4837              		.loc 1 2686 0
 4838 0120 17EA5127 		ands	r7, r7, r1, lsr #9
 4839              	.LVL695:
 4840 0124 08D1     		bne	.L472
2687:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;			/* Follow from the origin */
 4841              		.loc 1 2687 0
 4842 0126 0029     		cmp	r1, #0
 4843 0128 9AD1     		bne	.L473
2688:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {						/* Middle or end of the file */
 4844              		.loc 1 2688 0
 4845 012a 2869     		ldr	r0, [r5, #16]
 4846              	.LVL696:
 4847              	.L474:
2697:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 4848              		.loc 1 2697 0
 4849 012c 0128     		cmp	r0, #1
 4850 012e A1D9     		bls	.L495
2698:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;				/* Update current cluster */
 4851              		.loc 1 2698 0
 4852 0130 B0F1FF3F 		cmp	r0, #-1
 4853 0134 A6D0     		beq	.L496
2699:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4854              		.loc 1 2699 0
 4855 0136 6861     		str	r0, [r5, #20]
 4856              	.LVL697:
 4857              	.L472:
2701:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 4858              		.loc 1 2701 0
 4859 0138 D5F800B0 		ldr	fp, [r5]
 4860 013c 6969     		ldr	r1, [r5, #20]
 4861 013e 5846     		mov	r0, fp
 4862 0140 FFF7FEFF 		bl	clust2sect
 4863              	.LVL698:
2702:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 4864              		.loc 1 2702 0
 4865 0144 8246     		mov	r10, r0
 4866 0146 0028     		cmp	r0, #0
 4867 0148 A4D0     		beq	.L497
2703:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btr / SS(fp->fs);				/* When remaining bytes >= sector size, */
 4868              		.loc 1 2703 0
 4869 014a BA44     		add	r10, r10, r7
 4870              	.LVL699:
2705:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 4871              		.loc 1 2705 0
 4872 014c 740A     		lsrs	r4, r6, #9
 4873              	.LVL700:
 4874 014e B8D0     		beq	.L479
2706:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 4875              		.loc 1 2706 0
 4876 0150 3B19     		adds	r3, r7, r4
ARM GAS  /tmp/cckAXl85.s 			page 143


 4877 0152 9BF80222 		ldrb	r2, [fp, #514]	@ zero_extendqisi2
 4878 0156 9342     		cmp	r3, r2
 4879 0158 00D9     		bls	.L480
2707:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_read(fp->fs->drv, rbuff, sect, cc) != RES_OK)
 4880              		.loc 1 2707 0
 4881 015a D41B     		subs	r4, r2, r7
 4882              	.LVL701:
 4883              	.L480:
2708:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 4884              		.loc 1 2708 0
 4885 015c 2346     		mov	r3, r4
 4886 015e 5246     		mov	r2, r10
 4887 0160 4146     		mov	r1, r8
 4888 0162 9BF80102 		ldrb	r0, [fp, #513]	@ zero_extendqisi2
 4889 0166 FFF7FEFF 		bl	disk_read
 4890              	.LVL702:
 4891 016a 0028     		cmp	r0, #0
 4892 016c 9AD1     		bne	.L498
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win.d8, SS(fp->fs));
 4893              		.loc 1 2712 0
 4894 016e 2968     		ldr	r1, [r5]
 4895 0170 91F80432 		ldrb	r3, [r1, #516]	@ zero_extendqisi2
 4896 0174 2BB1     		cbz	r3, .L482
2712:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(rbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), fp->fs->win.d8, SS(fp->fs));
 4897              		.loc 1 2712 0 is_stmt 0 discriminator 1
 4898 0176 D1F83002 		ldr	r0, [r1, #560]
 4899 017a A0EB0A00 		sub	r0, r0, r10
 4900 017e 8442     		cmp	r4, r0
 4901 0180 98D8     		bhi	.L499
 4902              	.L482:
2719:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 4903              		.loc 1 2719 0 is_stmt 1
 4904 0182 6402     		lsls	r4, r4, #9
 4905              	.LVL703:
2720:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 4906              		.loc 1 2720 0
 4907 0184 B6E7     		b	.L483
 4908              	.LVL704:
 4909              	.L493:
2741:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(rbuff, &fp->fs->win.d8[fp->fptr % SS(fp->fs)], rcnt);	/* Pick partial sector */
 4910              		.loc 1 2741 0
 4911 0186 0124     		movs	r4, #1
 4912              	.LVL705:
 4913 0188 EC71     		strb	r4, [r5, #7]
 4914 018a 2146     		mov	r1, r4
 4915 018c 2868     		ldr	r0, [r5]
 4916 018e FFF7FEFF 		bl	unlock_fs
 4917              	.LVL706:
 4918 0192 0194     		str	r4, [sp, #4]
 4919 0194 60E7     		b	.L466
 4920              	.L494:
2748:Middlewares/Third_Party/FatFs/src/ff.c **** }
 4921              		.loc 1 2748 0
 4922 0196 0021     		movs	r1, #0
 4923 0198 2868     		ldr	r0, [r5]
 4924 019a FFF7FEFF 		bl	unlock_fs
 4925              	.LVL707:
ARM GAS  /tmp/cckAXl85.s 			page 144


 4926 019e 5BE7     		b	.L466
 4927              		.cfi_endproc
 4928              	.LFE107:
 4930              		.section	.text.f_write,"ax",%progbits
 4931              		.align	1
 4932              		.global	f_write
 4933              		.syntax unified
 4934              		.thumb
 4935              		.thumb_func
 4936              		.fpu softvfp
 4938              	f_write:
 4939              	.LFB108:
2750:Middlewares/Third_Party/FatFs/src/ff.c **** 
2751:Middlewares/Third_Party/FatFs/src/ff.c **** 
2752:Middlewares/Third_Party/FatFs/src/ff.c **** 
2753:Middlewares/Third_Party/FatFs/src/ff.c **** 
2754:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2755:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2756:Middlewares/Third_Party/FatFs/src/ff.c **** /* Write File                                                            */
2757:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2758:Middlewares/Third_Party/FatFs/src/ff.c **** 
2759:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_write (
2760:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
2761:Middlewares/Third_Party/FatFs/src/ff.c **** 	const void *buff,	/* Pointer to the data to be written */
2762:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btw,			/* Number of bytes to write */
2763:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bw			/* Pointer to number of bytes written */
2764:Middlewares/Third_Party/FatFs/src/ff.c **** )
2765:Middlewares/Third_Party/FatFs/src/ff.c **** {
 4940              		.loc 1 2765 0
 4941              		.cfi_startproc
 4942              		@ args = 0, pretend = 0, frame = 8
 4943              		@ frame_needed = 0, uses_anonymous_args = 0
 4944              	.LVL708:
 4945 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4946              	.LCFI62:
 4947              		.cfi_def_cfa_offset 36
 4948              		.cfi_offset 4, -36
 4949              		.cfi_offset 5, -32
 4950              		.cfi_offset 6, -28
 4951              		.cfi_offset 7, -24
 4952              		.cfi_offset 8, -20
 4953              		.cfi_offset 9, -16
 4954              		.cfi_offset 10, -12
 4955              		.cfi_offset 11, -8
 4956              		.cfi_offset 14, -4
 4957 0004 83B0     		sub	sp, sp, #12
 4958              	.LCFI63:
 4959              		.cfi_def_cfa_offset 48
 4960 0006 0446     		mov	r4, r0
 4961 0008 8846     		mov	r8, r1
 4962 000a 1646     		mov	r6, r2
 4963 000c 9946     		mov	r9, r3
 4964              	.LVL709:
2766:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2767:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, sect;
2768:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT wcnt, cc;
2769:Middlewares/Third_Party/FatFs/src/ff.c **** 	const BYTE *wbuff = (const BYTE*)buff;
ARM GAS  /tmp/cckAXl85.s 			page 145


2770:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
2771:Middlewares/Third_Party/FatFs/src/ff.c **** 
2772:Middlewares/Third_Party/FatFs/src/ff.c **** 
2773:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bw = 0;	/* Clear write byte counter */
 4965              		.loc 1 2773 0
 4966 000e 0023     		movs	r3, #0
 4967              	.LVL710:
 4968 0010 C9F80030 		str	r3, [r9]
2774:Middlewares/Third_Party/FatFs/src/ff.c **** 
2775:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity */
 4969              		.loc 1 2775 0
 4970 0014 FFF7FEFF 		bl	validate
 4971              	.LVL711:
2776:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 4972              		.loc 1 2776 0
 4973 0018 0190     		str	r0, [sp, #4]
 4974 001a 58B9     		cbnz	r0, .L531
2777:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)							/* Check error */
 4975              		.loc 1 2777 0
 4976 001c E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 4977 001e 71B9     		cbnz	r1, .L532
2778:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
2779:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_WRITE))				/* Check access mode */
 4978              		.loc 1 2779 0
 4979 0020 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 4980 0022 13F0020F 		tst	r3, #2
 4981 0026 10D0     		beq	.L533
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
2781:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr + btw < fp->fptr) btw = 0;	/* File size cannot reach 4GB */
 4982              		.loc 1 2781 0
 4983 0028 A368     		ldr	r3, [r4, #8]
 4984 002a F342     		cmn	r3, r6
 4985 002c C0F0B980 		bcc	.L506
 4986 0030 0026     		movs	r6, #0
 4987              	.LVL712:
 4988 0032 B6E0     		b	.L506
 4989              	.LVL713:
 4990              	.L531:
2776:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)							/* Check error */
 4991              		.loc 1 2776 0 discriminator 1
 4992 0034 0146     		mov	r1, r0
 4993 0036 2068     		ldr	r0, [r4]
 4994              	.LVL714:
 4995 0038 FFF7FEFF 		bl	unlock_fs
 4996              	.LVL715:
 4997 003c 0BE0     		b	.L502
 4998              	.LVL716:
 4999              	.L532:
2778:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
 5000              		.loc 1 2778 0
 5001 003e 2068     		ldr	r0, [r4]
 5002              	.LVL717:
 5003 0040 FFF7FEFF 		bl	unlock_fs
 5004              	.LVL718:
 5005 0044 E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 5006 0046 0193     		str	r3, [sp, #4]
 5007 0048 05E0     		b	.L502
ARM GAS  /tmp/cckAXl85.s 			page 146


 5008              	.LVL719:
 5009              	.L533:
2780:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
 5010              		.loc 1 2780 0
 5011 004a 0721     		movs	r1, #7
 5012 004c 2068     		ldr	r0, [r4]
 5013              	.LVL720:
 5014 004e FFF7FEFF 		bl	unlock_fs
 5015              	.LVL721:
 5016 0052 0723     		movs	r3, #7
 5017 0054 0193     		str	r3, [sp, #4]
 5018              	.LVL722:
 5019              	.L502:
2782:Middlewares/Third_Party/FatFs/src/ff.c **** 
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btw;							/* Repeat until all data written */
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
2790:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
2792:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* Middle or end of the file */
2793:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->cltbl)
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
2796:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
2797:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, fp->clust);	/* Follow or stretch cluster chain on the FAT */
2799:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) break;		/* Could not allocate a new cluster (disk full) */
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
2803:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
2805:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))	/* Write-back sector cache */
2808:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
2809:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {		/* Write-back sector cache */
2811:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2812:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2813:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
2814:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2815:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2816:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect = clust2sect(fp->fs, fp->clust);	/* Get current sector */
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
2818:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
2819:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cc) {						/* Write maximum contiguous sectors directly */
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
2824:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
2825:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
ARM GAS  /tmp/cckAXl85.s 			page 147


2826:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fs->winsect - sect < cc) {	/* Refill sector cache if it gets invalidated by the direct 
2828:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->fs->win.d8, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fs->wflag = 0;
2830:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2831:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2832:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->dsect - sect < cc) { /* Refill sector cache if it gets invalidated by the direct write 
2833:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->buf.d8, wbuff + ((fp->dsect - sect) * SS(fp->fs)), SS(fp->fs));
2834:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
2835:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
2836:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2837:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 				wcnt = SS(fp->fs) * cc;		/* Number of bytes transferred */
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
2840:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2841:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr >= fp->fsize) {	/* Avoid silly cache filling at growing edge */
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->winsect = sect;
2845:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2846:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2847:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->dsect != sect) {		/* Fill sector cache with file data */
2848:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr < fp->fsize &&
2849:Middlewares/Third_Party/FatFs/src/ff.c **** 					disk_read(fp->fs->drv, fp->buf.d8, sect, 1) != RES_OK)
2850:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
2851:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2852:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = sect;
2854:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		wcnt = SS(fp->fs) - ((UINT)fp->fptr % SS(fp->fs));/* Put partial sector into file I/O buffer */
2856:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;
2857:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, fp->dsect) != FR_OK)	/* Move sector window */
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->fs->win.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2861:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fs->wflag = 1;
2862:Middlewares/Third_Party/FatFs/src/ff.c **** #else
2863:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->buf.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
2864:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->flag |= FA__DIRTY;
2865:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2866:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2867:Middlewares/Third_Party/FatFs/src/ff.c **** 
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;	/* Update file size if needed */
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
2870:Middlewares/Third_Party/FatFs/src/ff.c **** 
2871:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
2872:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5020              		.loc 1 2872 0
 5021 0056 0198     		ldr	r0, [sp, #4]
 5022 0058 03B0     		add	sp, sp, #12
 5023              	.LCFI64:
 5024              		.cfi_remember_state
 5025              		.cfi_def_cfa_offset 36
 5026              		@ sp needed
 5027 005a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5028              	.LVL723:
 5029              	.L509:
ARM GAS  /tmp/cckAXl85.s 			page 148


 5030              	.LCFI65:
 5031              		.cfi_restore_state
2794:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = clmt_clust(fp, fp->fptr);	/* Get cluster# from the CLMT */
 5032              		.loc 1 2794 0
 5033 005e 626A     		ldr	r2, [r4, #36]
 5034 0060 002A     		cmp	r2, #0
 5035 0062 37D0     		beq	.L511
2795:Middlewares/Third_Party/FatFs/src/ff.c **** 					else
 5036              		.loc 1 2795 0
 5037 0064 2046     		mov	r0, r4
 5038 0066 FFF7FEFF 		bl	clmt_clust
 5039              	.LVL724:
 5040              	.L510:
2800:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 5041              		.loc 1 2800 0
 5042 006a 0028     		cmp	r0, #0
 5043 006c 00F0CB80 		beq	.L512
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5044              		.loc 1 2801 0
 5045 0070 0128     		cmp	r0, #1
 5046 0072 34D0     		beq	.L534
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5047              		.loc 1 2802 0
 5048 0074 B0F1FF3F 		cmp	r0, #-1
 5049 0078 39D0     		beq	.L535
2803:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->sclust == 0) fp->sclust = clst;	/* Set start cluster if the first write */
 5050              		.loc 1 2803 0
 5051 007a 6061     		str	r0, [r4, #20]
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5052              		.loc 1 2804 0
 5053 007c 2369     		ldr	r3, [r4, #16]
 5054 007e 03B9     		cbnz	r3, .L508
2804:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5055              		.loc 1 2804 0 is_stmt 0 discriminator 1
 5056 0080 2061     		str	r0, [r4, #16]
 5057              	.LVL725:
 5058              	.L508:
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
 5059              		.loc 1 2807 0 is_stmt 1
 5060 0082 2068     		ldr	r0, [r4]
 5061 0084 D0F83022 		ldr	r2, [r0, #560]
 5062 0088 A369     		ldr	r3, [r4, #24]
 5063 008a 9A42     		cmp	r2, r3
 5064 008c 37D0     		beq	.L536
 5065              	.L515:
2816:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!sect) ABORT(fp->fs, FR_INT_ERR);
 5066              		.loc 1 2816 0
 5067 008e D4F800B0 		ldr	fp, [r4]
 5068 0092 6169     		ldr	r1, [r4, #20]
 5069 0094 5846     		mov	r0, fp
 5070 0096 FFF7FEFF 		bl	clust2sect
 5071              	.LVL726:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5072              		.loc 1 2817 0
 5073 009a 8246     		mov	r10, r0
 5074 009c 0028     		cmp	r0, #0
 5075 009e 3AD0     		beq	.L537
ARM GAS  /tmp/cckAXl85.s 			page 149


2818:Middlewares/Third_Party/FatFs/src/ff.c **** 			cc = btw / SS(fp->fs);			/* When remaining bytes >= sector size, */
 5076              		.loc 1 2818 0
 5077 00a0 BA44     		add	r10, r10, r7
 5078              	.LVL727:
2820:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (csect + cc > fp->fs->csize)	/* Clip at cluster boundary */
 5079              		.loc 1 2820 0
 5080 00a2 750A     		lsrs	r5, r6, #9
 5081              	.LVL728:
 5082 00a4 52D0     		beq	.L517
2821:Middlewares/Third_Party/FatFs/src/ff.c **** 					cc = fp->fs->csize - csect;
 5083              		.loc 1 2821 0
 5084 00a6 7B19     		adds	r3, r7, r5
 5085 00a8 9BF80222 		ldrb	r2, [fp, #514]	@ zero_extendqisi2
 5086 00ac 9342     		cmp	r3, r2
 5087 00ae 00D9     		bls	.L518
2822:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
 5088              		.loc 1 2822 0
 5089 00b0 D51B     		subs	r5, r2, r7
 5090              	.LVL729:
 5091              	.L518:
2823:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
 5092              		.loc 1 2823 0
 5093 00b2 2B46     		mov	r3, r5
 5094 00b4 5246     		mov	r2, r10
 5095 00b6 4146     		mov	r1, r8
 5096 00b8 9BF80102 		ldrb	r0, [fp, #513]	@ zero_extendqisi2
 5097 00bc FFF7FEFF 		bl	disk_write
 5098              	.LVL730:
 5099 00c0 88BB     		cbnz	r0, .L538
2827:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_cpy(fp->fs->win.d8, wbuff + ((fp->fs->winsect - sect) * SS(fp->fs)), SS(fp->fs));
 5100              		.loc 1 2827 0
 5101 00c2 2068     		ldr	r0, [r4]
 5102 00c4 D0F83012 		ldr	r1, [r0, #560]
 5103 00c8 A1EB0A01 		sub	r1, r1, r10
 5104 00cc 8D42     		cmp	r5, r1
 5105 00ce 32D8     		bhi	.L539
 5106              	.L520:
2838:Middlewares/Third_Party/FatFs/src/ff.c **** 				continue;
 5107              		.loc 1 2838 0
 5108 00d0 6D02     		lsls	r5, r5, #9
 5109              	.LVL731:
2839:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5110              		.loc 1 2839 0
 5111 00d2 5CE0     		b	.L521
 5112              	.LVL732:
 5113              	.L511:
2798:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5114              		.loc 1 2798 0
 5115 00d4 6169     		ldr	r1, [r4, #20]
 5116              	.LVL733:
 5117 00d6 1846     		mov	r0, r3
 5118 00d8 FFF7FEFF 		bl	create_chain
 5119              	.LVL734:
 5120 00dc C5E7     		b	.L510
 5121              	.L534:
2801:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5122              		.loc 1 2801 0 discriminator 1
ARM GAS  /tmp/cckAXl85.s 			page 150


 5123 00de 0225     		movs	r5, #2
 5124 00e0 E571     		strb	r5, [r4, #7]
 5125 00e2 2946     		mov	r1, r5
 5126 00e4 2068     		ldr	r0, [r4]
 5127              	.LVL735:
 5128 00e6 FFF7FEFF 		bl	unlock_fs
 5129              	.LVL736:
 5130 00ea 0195     		str	r5, [sp, #4]
 5131 00ec B3E7     		b	.L502
 5132              	.LVL737:
 5133              	.L535:
2802:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;			/* Update current cluster */
 5134              		.loc 1 2802 0 discriminator 1
 5135 00ee 0125     		movs	r5, #1
 5136 00f0 E571     		strb	r5, [r4, #7]
 5137 00f2 2946     		mov	r1, r5
 5138 00f4 2068     		ldr	r0, [r4]
 5139              	.LVL738:
 5140 00f6 FFF7FEFF 		bl	unlock_fs
 5141              	.LVL739:
 5142 00fa 0195     		str	r5, [sp, #4]
 5143 00fc ABE7     		b	.L502
 5144              	.L536:
2807:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
 5145              		.loc 1 2807 0 discriminator 1
 5146 00fe FFF7FEFF 		bl	sync_window
 5147              	.LVL740:
 5148 0102 0028     		cmp	r0, #0
 5149 0104 C3D0     		beq	.L515
2808:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 5150              		.loc 1 2808 0
 5151 0106 0125     		movs	r5, #1
 5152 0108 E571     		strb	r5, [r4, #7]
 5153 010a 2946     		mov	r1, r5
 5154 010c 2068     		ldr	r0, [r4]
 5155 010e FFF7FEFF 		bl	unlock_fs
 5156              	.LVL741:
 5157 0112 0195     		str	r5, [sp, #4]
 5158 0114 9FE7     		b	.L502
 5159              	.LVL742:
 5160              	.L537:
2817:Middlewares/Third_Party/FatFs/src/ff.c **** 			sect += csect;
 5161              		.loc 1 2817 0 discriminator 1
 5162 0116 0225     		movs	r5, #2
 5163 0118 E571     		strb	r5, [r4, #7]
 5164 011a 2946     		mov	r1, r5
 5165 011c 5846     		mov	r0, fp
 5166              	.LVL743:
 5167 011e FFF7FEFF 		bl	unlock_fs
 5168              	.LVL744:
 5169 0122 0195     		str	r5, [sp, #4]
 5170 0124 97E7     		b	.L502
 5171              	.LVL745:
 5172              	.L538:
2824:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
 5173              		.loc 1 2824 0
 5174 0126 0125     		movs	r5, #1
ARM GAS  /tmp/cckAXl85.s 			page 151


 5175              	.LVL746:
 5176 0128 E571     		strb	r5, [r4, #7]
 5177 012a 2946     		mov	r1, r5
 5178 012c 2068     		ldr	r0, [r4]
 5179 012e FFF7FEFF 		bl	unlock_fs
 5180              	.LVL747:
 5181 0132 0195     		str	r5, [sp, #4]
 5182 0134 8FE7     		b	.L502
 5183              	.LVL748:
 5184              	.L539:
2828:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fs->wflag = 0;
 5185              		.loc 1 2828 0
 5186 0136 4FF40072 		mov	r2, #512
 5187 013a 08EB4121 		add	r1, r8, r1, lsl #9
 5188 013e FFF7FEFF 		bl	mem_cpy
 5189              	.LVL749:
2829:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5190              		.loc 1 2829 0
 5191 0142 2368     		ldr	r3, [r4]
 5192 0144 0022     		movs	r2, #0
 5193 0146 83F80422 		strb	r2, [r3, #516]
 5194 014a C1E7     		b	.L520
 5195              	.L517:
2842:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (sync_window(fp->fs)) ABORT(fp->fs, FR_DISK_ERR);
 5196              		.loc 1 2842 0
 5197 014c A268     		ldr	r2, [r4, #8]
 5198 014e E368     		ldr	r3, [r4, #12]
 5199 0150 9A42     		cmp	r2, r3
 5200 0152 40D2     		bcs	.L540
 5201              	.L522:
2853:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5202              		.loc 1 2853 0
 5203 0154 C4F818A0 		str	r10, [r4, #24]
 5204              	.LVL750:
 5205              	.L507:
2855:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (wcnt > btw) wcnt = btw;
 5206              		.loc 1 2855 0
 5207 0158 A568     		ldr	r5, [r4, #8]
 5208 015a C5F30805 		ubfx	r5, r5, #0, #9
 5209 015e C5F50075 		rsb	r5, r5, #512
 5210              	.LVL751:
2856:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_TINY
 5211              		.loc 1 2856 0
 5212 0162 AE42     		cmp	r6, r5
 5213 0164 00D2     		bcs	.L524
 5214 0166 3546     		mov	r5, r6
 5215              	.LVL752:
 5216              	.L524:
2858:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
 5217              		.loc 1 2858 0
 5218 0168 A169     		ldr	r1, [r4, #24]
 5219 016a 2068     		ldr	r0, [r4]
 5220 016c FFF7FEFF 		bl	move_window
 5221              	.LVL753:
 5222 0170 0028     		cmp	r0, #0
 5223 0172 40D1     		bne	.L541
2860:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fs->wflag = 1;
ARM GAS  /tmp/cckAXl85.s 			page 152


 5224              		.loc 1 2860 0
 5225 0174 2768     		ldr	r7, [r4]
 5226 0176 A368     		ldr	r3, [r4, #8]
 5227 0178 C3F30800 		ubfx	r0, r3, #0, #9
 5228 017c 2A46     		mov	r2, r5
 5229 017e 4146     		mov	r1, r8
 5230 0180 3844     		add	r0, r0, r7
 5231 0182 FFF7FEFF 		bl	mem_cpy
 5232              	.LVL754:
2861:Middlewares/Third_Party/FatFs/src/ff.c **** #else
 5233              		.loc 1 2861 0
 5234 0186 2368     		ldr	r3, [r4]
 5235 0188 0122     		movs	r2, #1
 5236 018a 83F80422 		strb	r2, [r3, #516]
 5237              	.L521:
2784:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {	/* On the sector boundary? */
 5238              		.loc 1 2784 0
 5239 018e A844     		add	r8, r8, r5
 5240              	.LVL755:
 5241 0190 A368     		ldr	r3, [r4, #8]
 5242 0192 2B44     		add	r3, r3, r5
 5243 0194 A360     		str	r3, [r4, #8]
 5244 0196 D9F80030 		ldr	r3, [r9]
 5245 019a 2B44     		add	r3, r3, r5
 5246 019c C9F80030 		str	r3, [r9]
 5247 01a0 761B     		subs	r6, r6, r5
 5248              	.LVL756:
 5249              	.L506:
2783:Middlewares/Third_Party/FatFs/src/ff.c **** 		wbuff += wcnt, fp->fptr += wcnt, *bw += wcnt, btw -= wcnt) {
 5250              		.loc 1 2783 0
 5251 01a2 86B3     		cbz	r6, .L512
2785:Middlewares/Third_Party/FatFs/src/ff.c **** 			csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
 5252              		.loc 1 2785 0
 5253 01a4 A168     		ldr	r1, [r4, #8]
 5254 01a6 C1F30803 		ubfx	r3, r1, #0, #9
 5255 01aa 002B     		cmp	r3, #0
 5256 01ac D4D1     		bne	.L507
2786:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {					/* On the cluster boundary? */
 5257              		.loc 1 2786 0
 5258 01ae 2368     		ldr	r3, [r4]
 5259 01b0 93F80272 		ldrb	r7, [r3, #514]	@ zero_extendqisi2
 5260 01b4 013F     		subs	r7, r7, #1
 5261 01b6 FFB2     		uxtb	r7, r7
 5262              	.LVL757:
2787:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr == 0) {		/* On the top of the file? */
 5263              		.loc 1 2787 0
 5264 01b8 17EA5127 		ands	r7, r7, r1, lsr #9
 5265              	.LVL758:
 5266 01bc 7FF461AF 		bne	.L508
2788:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = fp->sclust;		/* Follow from the origin */
 5267              		.loc 1 2788 0
 5268 01c0 0029     		cmp	r1, #0
 5269 01c2 7FF44CAF 		bne	.L509
2789:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0)			/* When no cluster is allocated, */
 5270              		.loc 1 2789 0
 5271 01c6 2069     		ldr	r0, [r4, #16]
 5272              	.LVL759:
ARM GAS  /tmp/cckAXl85.s 			page 153


2790:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, 0);	/* Create a new cluster chain */
 5273              		.loc 1 2790 0
 5274 01c8 0028     		cmp	r0, #0
 5275 01ca 7FF44EAF 		bne	.L510
2791:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {					/* Middle or end of the file */
 5276              		.loc 1 2791 0
 5277 01ce 1846     		mov	r0, r3
 5278              	.LVL760:
 5279 01d0 FFF7FEFF 		bl	create_chain
 5280              	.LVL761:
 5281 01d4 49E7     		b	.L510
 5282              	.LVL762:
 5283              	.L540:
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->winsect = sect;
 5284              		.loc 1 2843 0
 5285 01d6 5846     		mov	r0, fp
 5286 01d8 FFF7FEFF 		bl	sync_window
 5287              	.LVL763:
 5288 01dc 18B9     		cbnz	r0, .L542
2844:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5289              		.loc 1 2844 0
 5290 01de 2368     		ldr	r3, [r4]
 5291 01e0 C3F830A2 		str	r10, [r3, #560]
 5292 01e4 B6E7     		b	.L522
 5293              	.L542:
2843:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->winsect = sect;
 5294              		.loc 1 2843 0 discriminator 1
 5295 01e6 0125     		movs	r5, #1
 5296              	.LVL764:
 5297 01e8 E571     		strb	r5, [r4, #7]
 5298 01ea 2946     		mov	r1, r5
 5299 01ec 2068     		ldr	r0, [r4]
 5300 01ee FFF7FEFF 		bl	unlock_fs
 5301              	.LVL765:
 5302 01f2 0195     		str	r5, [sp, #4]
 5303 01f4 2FE7     		b	.L502
 5304              	.LVL766:
 5305              	.L541:
2859:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(&fp->fs->win.d8[fp->fptr % SS(fp->fs)], wbuff, wcnt);	/* Fit partial sector */
 5306              		.loc 1 2859 0
 5307 01f6 0125     		movs	r5, #1
 5308              	.LVL767:
 5309 01f8 E571     		strb	r5, [r4, #7]
 5310 01fa 2946     		mov	r1, r5
 5311 01fc 2068     		ldr	r0, [r4]
 5312 01fe FFF7FEFF 		bl	unlock_fs
 5313              	.LVL768:
 5314 0202 0195     		str	r5, [sp, #4]
 5315 0204 27E7     		b	.L502
 5316              	.L512:
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
 5317              		.loc 1 2868 0
 5318 0206 A368     		ldr	r3, [r4, #8]
 5319 0208 E268     		ldr	r2, [r4, #12]
 5320 020a 9342     		cmp	r3, r2
 5321 020c 00D9     		bls	.L527
2868:Middlewares/Third_Party/FatFs/src/ff.c **** 	fp->flag |= FA__WRITTEN;						/* Set file change flag */
ARM GAS  /tmp/cckAXl85.s 			page 154


 5322              		.loc 1 2868 0 is_stmt 0 discriminator 1
 5323 020e E360     		str	r3, [r4, #12]
 5324              	.L527:
2869:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5325              		.loc 1 2869 0 is_stmt 1
 5326 0210 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 5327 0212 43F02003 		orr	r3, r3, #32
 5328 0216 A371     		strb	r3, [r4, #6]
2871:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5329              		.loc 1 2871 0
 5330 0218 0021     		movs	r1, #0
 5331 021a 2068     		ldr	r0, [r4]
 5332 021c FFF7FEFF 		bl	unlock_fs
 5333              	.LVL769:
 5334 0220 19E7     		b	.L502
 5335              		.cfi_endproc
 5336              	.LFE108:
 5338              		.section	.text.putc_bfd,"ax",%progbits
 5339              		.align	1
 5340              		.syntax unified
 5341              		.thumb
 5342              		.thumb_func
 5343              		.fpu softvfp
 5345              	putc_bfd:
 5346              	.LFB125:
2873:Middlewares/Third_Party/FatFs/src/ff.c **** 
2874:Middlewares/Third_Party/FatFs/src/ff.c **** 
2875:Middlewares/Third_Party/FatFs/src/ff.c **** 
2876:Middlewares/Third_Party/FatFs/src/ff.c **** 
2877:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2878:Middlewares/Third_Party/FatFs/src/ff.c **** /* Synchronize the File                                                  */
2879:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2880:Middlewares/Third_Party/FatFs/src/ff.c **** 
2881:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_sync (
2882:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
2883:Middlewares/Third_Party/FatFs/src/ff.c **** )
2884:Middlewares/Third_Party/FatFs/src/ff.c **** {
2885:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2886:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
2887:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
2888:Middlewares/Third_Party/FatFs/src/ff.c **** 
2889:Middlewares/Third_Party/FatFs/src/ff.c **** 
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
2893:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
2894:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
2895:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {
2896:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
2897:Middlewares/Third_Party/FatFs/src/ff.c **** 					LEAVE_FF(fp->fs, FR_DISK_ERR);
2898:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
2899:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2901:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Update the directory entry */
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = move_window(fp->fs, fp->dir_sect);
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
ARM GAS  /tmp/cckAXl85.s 			page 155


2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
2914:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
2915:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2916:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2917:Middlewares/Third_Party/FatFs/src/ff.c **** 
2918:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
2919:Middlewares/Third_Party/FatFs/src/ff.c **** }
2920:Middlewares/Third_Party/FatFs/src/ff.c **** 
2921:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
2922:Middlewares/Third_Party/FatFs/src/ff.c **** 
2923:Middlewares/Third_Party/FatFs/src/ff.c **** 
2924:Middlewares/Third_Party/FatFs/src/ff.c **** 
2925:Middlewares/Third_Party/FatFs/src/ff.c **** 
2926:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2927:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close File                                                            */
2928:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2929:Middlewares/Third_Party/FatFs/src/ff.c **** 
2930:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_close (
2931:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL *fp		/* Pointer to the file object to be closed */
2932:Middlewares/Third_Party/FatFs/src/ff.c **** )
2933:Middlewares/Third_Party/FatFs/src/ff.c **** {
2934:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2935:Middlewares/Third_Party/FatFs/src/ff.c **** 
2936:Middlewares/Third_Party/FatFs/src/ff.c **** 
2937:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_sync(fp);					/* Flush cached data */
2939:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
2940:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2941:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = validate(fp);				/* Lock volume */
2943:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
2944:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2945:Middlewares/Third_Party/FatFs/src/ff.c **** 			FATFS *fs = fp->fs;
2946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2947:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(fp->lockid);	/* Decrement file open counter */
2949:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
2950:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2951:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs = 0;				/* Invalidate file object */
2952:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
2953:Middlewares/Third_Party/FatFs/src/ff.c **** 			unlock_fs(fs, FR_OK);		/* Unlock volume */
2954:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2955:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
2956:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
2957:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
2958:Middlewares/Third_Party/FatFs/src/ff.c **** }
2959:Middlewares/Third_Party/FatFs/src/ff.c **** 
2960:Middlewares/Third_Party/FatFs/src/ff.c **** 
2961:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 156


2962:Middlewares/Third_Party/FatFs/src/ff.c **** 
2963:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2964:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Current Directory or Current Drive, Get Current Directory      */
2965:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
2966:Middlewares/Third_Party/FatFs/src/ff.c **** 
2967:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 1
2968:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
2969:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdrive (
2970:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Drive number */
2971:Middlewares/Third_Party/FatFs/src/ff.c **** )
2972:Middlewares/Third_Party/FatFs/src/ff.c **** {
2973:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
2974:Middlewares/Third_Party/FatFs/src/ff.c **** 
2975:Middlewares/Third_Party/FatFs/src/ff.c **** 
2976:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
2977:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
2978:Middlewares/Third_Party/FatFs/src/ff.c **** 
2979:Middlewares/Third_Party/FatFs/src/ff.c **** 	CurrVol = (BYTE)vol;
2980:Middlewares/Third_Party/FatFs/src/ff.c **** 
2981:Middlewares/Third_Party/FatFs/src/ff.c **** 	return FR_OK;
2982:Middlewares/Third_Party/FatFs/src/ff.c **** }
2983:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
2984:Middlewares/Third_Party/FatFs/src/ff.c **** 
2985:Middlewares/Third_Party/FatFs/src/ff.c **** 
2986:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chdir (
2987:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
2988:Middlewares/Third_Party/FatFs/src/ff.c **** )
2989:Middlewares/Third_Party/FatFs/src/ff.c **** {
2990:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
2991:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
2992:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
2993:Middlewares/Third_Party/FatFs/src/ff.c **** 
2994:Middlewares/Third_Party/FatFs/src/ff.c **** 
2995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
2996:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
2997:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
2998:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
2999:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the path */
3000:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3001:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* Follow completed */
3002:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dj.dir) {
3003:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->cdir = dj.sclust;	/* Start directory itself */
3004:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3005:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.dir[DIR_Attr] & AM_DIR)	/* Reached to the directory */
3006:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->cdir = ld_clust(dj.fs, dj.dir);
3007:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3008:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;		/* Reached but a file */
3009:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3010:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3011:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3012:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3013:Middlewares/Third_Party/FatFs/src/ff.c **** 
3014:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3015:Middlewares/Third_Party/FatFs/src/ff.c **** }
3016:Middlewares/Third_Party/FatFs/src/ff.c **** 
3017:Middlewares/Third_Party/FatFs/src/ff.c **** 
3018:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH >= 2
ARM GAS  /tmp/cckAXl85.s 			page 157


3019:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getcwd (
3020:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the directory path */
3021:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT len		/* Size of path */
3022:Middlewares/Third_Party/FatFs/src/ff.c **** )
3023:Middlewares/Third_Party/FatFs/src/ff.c **** {
3024:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3025:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3026:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n;
3027:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ccl;
3028:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR *tp;
3029:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO fno;
3030:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3031:Middlewares/Third_Party/FatFs/src/ff.c **** 
3032:Middlewares/Third_Party/FatFs/src/ff.c **** 
3033:Middlewares/Third_Party/FatFs/src/ff.c **** 	*buff = 0;
3034:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3035:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, (const TCHAR**)&buff, 0);	/* Get current volume */
3036:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3037:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3038:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = len;			/* Bottom of buffer (directory stack base) */
3039:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = dj.fs->cdir;			/* Start to follow upper directory from current directory */
3040:Middlewares/Third_Party/FatFs/src/ff.c **** 		while ((ccl = dj.sclust) != 0) {	/* Repeat while current directory is a sub-directory */
3041:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 1);			/* Get parent directory */
3042:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3043:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 0);
3044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3045:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.sclust = ld_clust(dj.fs, dj.dir);	/* Goto parent directory */
3046:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(&dj, 0);
3047:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3048:Middlewares/Third_Party/FatFs/src/ff.c **** 			do {							/* Find the entry links to the child directory */
3049:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_read(&dj, 0);
3050:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res != FR_OK) break;
3051:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ccl == ld_clust(dj.fs, dj.dir)) break;	/* Found the entry */
3052:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(&dj, 0);	
3053:Middlewares/Third_Party/FatFs/src/ff.c **** 			} while (res == FR_OK);
3054:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) res = FR_INT_ERR;/* It cannot be 'not found'. */
3055:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) break;
3056:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3057:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfname = buff;
3058:Middlewares/Third_Party/FatFs/src/ff.c **** 			fno.lfsize = i;
3059:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3060:Middlewares/Third_Party/FatFs/src/ff.c **** 			get_fileinfo(&dj, &fno);		/* Get the directory name and push it to the buffer */
3061:Middlewares/Third_Party/FatFs/src/ff.c **** 			tp = fno.fname;
3062:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3063:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (*buff) tp = buff;
3064:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3065:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (n = 0; tp[n]; n++) ;
3066:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i < n + 3) {
3067:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE; break;
3068:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3069:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (n) buff[--i] = tp[--n];
3070:Middlewares/Third_Party/FatFs/src/ff.c **** 			buff[--i] = '/';
3071:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3072:Middlewares/Third_Party/FatFs/src/ff.c **** 		tp = buff;
3073:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3074:Middlewares/Third_Party/FatFs/src/ff.c **** #if _VOLUMES >= 2
3075:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = '0' + CurrVol;			/* Put drive number */
ARM GAS  /tmp/cckAXl85.s 			page 158


3076:Middlewares/Third_Party/FatFs/src/ff.c **** 			*tp++ = ':';
3077:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3078:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (i == len) {					/* Root-directory */
3079:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tp++ = '/';
3080:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* Sub-directroy */
3081:Middlewares/Third_Party/FatFs/src/ff.c **** 				do		/* Add stacked path str */
3082:Middlewares/Third_Party/FatFs/src/ff.c **** 					*tp++ = buff[i++];
3083:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (i < len);
3084:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3085:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3086:Middlewares/Third_Party/FatFs/src/ff.c **** 		*tp = 0;
3087:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3088:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3089:Middlewares/Third_Party/FatFs/src/ff.c **** 
3090:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3091:Middlewares/Third_Party/FatFs/src/ff.c **** }
3092:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 2 */
3093:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_RPATH >= 1 */
3094:Middlewares/Third_Party/FatFs/src/ff.c **** 
3095:Middlewares/Third_Party/FatFs/src/ff.c **** 
3096:Middlewares/Third_Party/FatFs/src/ff.c **** 
3097:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 2
3098:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3099:Middlewares/Third_Party/FatFs/src/ff.c **** /* Seek File R/W Pointer                                                 */
3100:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3101:Middlewares/Third_Party/FatFs/src/ff.c **** 
3102:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_lseek (
3103:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,		/* Pointer to the file object */
3104:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ofs		/* File pointer from top of file */
3105:Middlewares/Third_Party/FatFs/src/ff.c **** )
3106:Middlewares/Third_Party/FatFs/src/ff.c **** {
3107:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3108:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD clst, bcs, nsect, ifptr;
3109:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3110:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD cl, pcl, ncl, tcl, dsc, tlen, ulen, *tbl;
3111:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3112:Middlewares/Third_Party/FatFs/src/ff.c **** 
3113:Middlewares/Third_Party/FatFs/src/ff.c **** 
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);					/* Check validity of the object */
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
3118:Middlewares/Third_Party/FatFs/src/ff.c **** 
3119:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FASTSEEK
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->cltbl) {	/* Fast seek */
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
3122:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			tlen = *tbl++; ulen = 2;	/* Given table size and required table size */
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
3126:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3127:Middlewares/Third_Party/FatFs/src/ff.c **** 					/* Get a fragment */
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					tcl = cl; ncl = 0; ulen += 2;	/* Top, length and used items */
3129:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						pcl = cl; ncl++;
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
ARM GAS  /tmp/cckAXl85.s 			page 159


3133:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
3137:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (cl < fp->fs->n_fatent);	/* Repeat until end of chain */
3139:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			*fp->cltbl = ulen;	/* Number of items used */
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
3143:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NOT_ENOUGH_CORE;	/* Given table size is smaller than required */
3145:Middlewares/Third_Party/FatFs/src/ff.c **** 
3146:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {						/* Fast seek */
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs > fp->fsize)		/* Clip offset at the file size */
3148:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs = fp->fsize;
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fptr = ofs;				/* Set file pointer */
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
3155:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
3156:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3157:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3158:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA__DIRTY) {		/* Write-back dirty sector cache */
3159:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3160:Middlewares/Third_Party/FatFs/src/ff.c **** 							ABORT(fp->fs, FR_DISK_ERR);
3161:Middlewares/Third_Party/FatFs/src/ff.c **** 						fp->flag &= ~FA__DIRTY;
3162:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3163:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3164:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (disk_read(fp->fs->drv, fp->buf.d8, dsc, 1) != RES_OK)	/* Load current sector */
3165:Middlewares/Third_Party/FatFs/src/ff.c **** 						ABORT(fp->fs, FR_DISK_ERR);
3166:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->dsect = dsc;
3168:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3169:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3170:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3171:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else
3172:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3173:Middlewares/Third_Party/FatFs/src/ff.c **** 
3174:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Normal Seek */
3175:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
3176:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs > fp->fsize					/* In read-only mode, clip offset with the file size */
3177:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3178:Middlewares/Third_Party/FatFs/src/ff.c **** 			 && !(fp->flag & FA_WRITE)
3179:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 			) ofs = fp->fsize;
3181:Middlewares/Third_Party/FatFs/src/ff.c **** 
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		ifptr = fp->fptr;
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
ARM GAS  /tmp/cckAXl85.s 			page 160


3190:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
3191:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
3192:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->sclust;						/* start from the first cluster */
3193:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0) {						/* If no cluster chain, create a new chain */
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3198:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
3199:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3200:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;
3202:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (clst != 0) {
3204:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
3205:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fp->flag & FA_WRITE) {			/* Check if in write mode or not */
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
3210:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3211:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3212:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = get_fat(fp->fs, clst);	/* Follow cluster chain if not in write mode */
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
3219:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr += ofs;
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
3225:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3226:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3227:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3228:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr % SS(fp->fs) && nsect != fp->dsect) {	/* Fill sector cache if needed */
3229:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3230:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3231:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->flag & FA__DIRTY) {			/* Write-back dirty sector cache */
3232:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3233:Middlewares/Third_Party/FatFs/src/ff.c **** 					ABORT(fp->fs, FR_DISK_ERR);
3234:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__DIRTY;
3235:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3236:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3237:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_read(fp->fs->drv, fp->buf.d8, nsect, 1) != RES_OK)	/* Fill sector cache */
3238:Middlewares/Third_Party/FatFs/src/ff.c **** 				ABORT(fp->fs, FR_DISK_ERR);
3239:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->dsect = nsect;
3241:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3242:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fptr > fp->fsize) {			/* Set file change flag if the file size is extended */
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3246:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
ARM GAS  /tmp/cckAXl85.s 			page 161


3247:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3248:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3249:Middlewares/Third_Party/FatFs/src/ff.c **** 
3250:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3251:Middlewares/Third_Party/FatFs/src/ff.c **** }
3252:Middlewares/Third_Party/FatFs/src/ff.c **** 
3253:Middlewares/Third_Party/FatFs/src/ff.c **** 
3254:Middlewares/Third_Party/FatFs/src/ff.c **** 
3255:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE <= 1
3256:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3257:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory Object                                             */
3258:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3259:Middlewares/Third_Party/FatFs/src/ff.c **** 
3260:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_opendir (
3261:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to directory object to create */
3262:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path	/* Pointer to the directory path */
3263:Middlewares/Third_Party/FatFs/src/ff.c **** )
3264:Middlewares/Third_Party/FatFs/src/ff.c **** {
3265:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3266:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS* fs;
3267:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3268:Middlewares/Third_Party/FatFs/src/ff.c **** 
3269:Middlewares/Third_Party/FatFs/src/ff.c **** 
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!dp) return FR_INVALID_OBJECT;
3271:Middlewares/Third_Party/FatFs/src/ff.c **** 
3272:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&fs, &path, 0);
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
3278:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Follow completed */
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
3283:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_NO_PATH;
3285:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->id = fs->id;
3288:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
3289:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) {
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
3295:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = 0;	/* Root directory need not to be locked */
3297:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3298:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3299:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3300:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3301:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) res = FR_NO_PATH;
3303:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/cckAXl85.s 			page 162


3304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) dp->fs = 0;		/* Invalidate the directory object if function faild */
3305:Middlewares/Third_Party/FatFs/src/ff.c **** 
3306:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3307:Middlewares/Third_Party/FatFs/src/ff.c **** }
3308:Middlewares/Third_Party/FatFs/src/ff.c **** 
3309:Middlewares/Third_Party/FatFs/src/ff.c **** 
3310:Middlewares/Third_Party/FatFs/src/ff.c **** 
3311:Middlewares/Third_Party/FatFs/src/ff.c **** 
3312:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3313:Middlewares/Third_Party/FatFs/src/ff.c **** /* Close Directory                                                       */
3314:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3315:Middlewares/Third_Party/FatFs/src/ff.c **** 
3316:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_closedir (
3317:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR *dp		/* Pointer to the directory object to be closed */
3318:Middlewares/Third_Party/FatFs/src/ff.c **** )
3319:Middlewares/Third_Party/FatFs/src/ff.c **** {
3320:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3321:Middlewares/Third_Party/FatFs/src/ff.c **** 
3322:Middlewares/Third_Party/FatFs/src/ff.c **** 
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);
3324:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3325:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3326:Middlewares/Third_Party/FatFs/src/ff.c **** 		FATFS *fs = dp->fs;
3327:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3328:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (dp->lockid)				/* Decrement sub-directory open counter */
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
3331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
3332:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3333:Middlewares/Third_Party/FatFs/src/ff.c **** 			dp->fs = 0;				/* Invalidate directory object */
3334:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
3335:Middlewares/Third_Party/FatFs/src/ff.c **** 		unlock_fs(fs, FR_OK);		/* Unlock volume */
3336:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3337:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3338:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3339:Middlewares/Third_Party/FatFs/src/ff.c **** }
3340:Middlewares/Third_Party/FatFs/src/ff.c **** 
3341:Middlewares/Third_Party/FatFs/src/ff.c **** 
3342:Middlewares/Third_Party/FatFs/src/ff.c **** 
3343:Middlewares/Third_Party/FatFs/src/ff.c **** 
3344:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3345:Middlewares/Third_Party/FatFs/src/ff.c **** /* Read Directory Entries in Sequence                                    */
3346:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3347:Middlewares/Third_Party/FatFs/src/ff.c **** 
3348:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_readdir (
3349:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,			/* Pointer to the open directory object */
3350:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3351:Middlewares/Third_Party/FatFs/src/ff.c **** )
3352:Middlewares/Third_Party/FatFs/src/ff.c **** {
3353:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3354:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3355:Middlewares/Third_Party/FatFs/src/ff.c **** 
3356:Middlewares/Third_Party/FatFs/src/ff.c **** 
3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(dp);						/* Check validity of the object */
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
ARM GAS  /tmp/cckAXl85.s 			page 163


3361:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			INIT_BUF(*dp);
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3367:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {				/* A valid entry is found */
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
3374:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3375:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3376:Middlewares/Third_Party/FatFs/src/ff.c **** 			FREE_BUF();
3377:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3378:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3379:Middlewares/Third_Party/FatFs/src/ff.c **** 
3380:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dp->fs, res);
3381:Middlewares/Third_Party/FatFs/src/ff.c **** }
3382:Middlewares/Third_Party/FatFs/src/ff.c **** 
3383:Middlewares/Third_Party/FatFs/src/ff.c **** 
3384:Middlewares/Third_Party/FatFs/src/ff.c **** 
3385:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FIND
3386:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3387:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find next file                                                        */
3388:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3389:Middlewares/Third_Party/FatFs/src/ff.c **** 
3390:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findnext (
3391:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,		/* Pointer to the open directory object */
3392:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno	/* Pointer to the file information structure */
3393:Middlewares/Third_Party/FatFs/src/ff.c **** )
3394:Middlewares/Third_Party/FatFs/src/ff.c **** {
3395:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3396:Middlewares/Third_Party/FatFs/src/ff.c **** 
3397:Middlewares/Third_Party/FatFs/src/ff.c **** 
3398:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
3399:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_readdir(dp, fno);		/* Get a directory item */
3400:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK || !fno || !fno->fname[0]) break;	/* Terminate if any error or end of directory 
3401:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
3402:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fno->lfname && pattern_matching(dp->pat, fno->lfname, 0, 0)) break;	/* Test for LFN if exist 
3403:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3404:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (pattern_matching(dp->pat, fno->fname, 0, 0)) break;	/* Test for SFN */
3405:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3406:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3407:Middlewares/Third_Party/FatFs/src/ff.c **** 
3408:Middlewares/Third_Party/FatFs/src/ff.c **** }
3409:Middlewares/Third_Party/FatFs/src/ff.c **** 
3410:Middlewares/Third_Party/FatFs/src/ff.c **** 
3411:Middlewares/Third_Party/FatFs/src/ff.c **** 
3412:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3413:Middlewares/Third_Party/FatFs/src/ff.c **** /* Find first file                                                       */
3414:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3415:Middlewares/Third_Party/FatFs/src/ff.c **** 
3416:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_findfirst (
3417:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR* dp,				/* Pointer to the blank directory object */
ARM GAS  /tmp/cckAXl85.s 			page 164


3418:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno,			/* Pointer to the file information structure */
3419:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,		/* Pointer to the directory to open */
3420:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* pattern	/* Pointer to the matching pattern */
3421:Middlewares/Third_Party/FatFs/src/ff.c **** )
3422:Middlewares/Third_Party/FatFs/src/ff.c **** {
3423:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3424:Middlewares/Third_Party/FatFs/src/ff.c **** 
3425:Middlewares/Third_Party/FatFs/src/ff.c **** 
3426:Middlewares/Third_Party/FatFs/src/ff.c **** 	dp->pat = pattern;		/* Save pointer to pattern string */
3427:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = f_opendir(dp, path);		/* Open the target directory */
3428:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
3429:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = f_findnext(dp, fno);	/* Find the first item */
3430:Middlewares/Third_Party/FatFs/src/ff.c **** 	return res;
3431:Middlewares/Third_Party/FatFs/src/ff.c **** }
3432:Middlewares/Third_Party/FatFs/src/ff.c **** 
3433:Middlewares/Third_Party/FatFs/src/ff.c **** #endif	/* _USE_FIND */
3434:Middlewares/Third_Party/FatFs/src/ff.c **** 
3435:Middlewares/Third_Party/FatFs/src/ff.c **** 
3436:Middlewares/Third_Party/FatFs/src/ff.c **** 
3437:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_MINIMIZE == 0
3438:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3439:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get File Status                                                       */
3440:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3441:Middlewares/Third_Party/FatFs/src/ff.c **** 
3442:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_stat (
3443:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3444:Middlewares/Third_Party/FatFs/src/ff.c **** 	FILINFO* fno		/* Pointer to file information to return */
3445:Middlewares/Third_Party/FatFs/src/ff.c **** )
3446:Middlewares/Third_Party/FatFs/src/ff.c **** {
3447:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3448:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3449:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3450:Middlewares/Third_Party/FatFs/src/ff.c **** 
3451:Middlewares/Third_Party/FatFs/src/ff.c **** 
3452:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
3460:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3462:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3463:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3464:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3465:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3466:Middlewares/Third_Party/FatFs/src/ff.c **** 
3467:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3468:Middlewares/Third_Party/FatFs/src/ff.c **** }
3469:Middlewares/Third_Party/FatFs/src/ff.c **** 
3470:Middlewares/Third_Party/FatFs/src/ff.c **** 
3471:Middlewares/Third_Party/FatFs/src/ff.c **** 
3472:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3473:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3474:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get Number of Free Clusters                                           */
ARM GAS  /tmp/cckAXl85.s 			page 165


3475:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3476:Middlewares/Third_Party/FatFs/src/ff.c **** 
3477:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getfree (
3478:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3479:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* nclst,		/* Pointer to a variable to return number of free clusters */
3480:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS** fatfs		/* Pointer to return pointer to corresponding file system object */
3481:Middlewares/Third_Party/FatFs/src/ff.c **** )
3482:Middlewares/Third_Party/FatFs/src/ff.c **** {
3483:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3484:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
3485:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n, clst, sect, stat;
3486:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
3487:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fat, *p;
3488:Middlewares/Third_Party/FatFs/src/ff.c **** 
3489:Middlewares/Third_Party/FatFs/src/ff.c **** 
3490:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(fatfs, &path, 0);
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3494:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fs->free_clust <= fs->n_fatent - 2) {
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
3497:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3498:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Get number of free clusters */
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			fat = fs->fs_type;
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
3502:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
3503:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					stat = get_fat(fs, clst);
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
3509:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3510:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fs->n_fatent;
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				sect = fs->fatbase;
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
3513:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!i) {
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
3519:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (fat == FS_FAT16) {
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
3523:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((LD_DWORD(p) & 0x0FFFFFFF) == 0) n++;
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
3526:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (--clst);
3528:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->free_clust = n;
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
ARM GAS  /tmp/cckAXl85.s 			page 166


3532:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3533:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3534:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fs, res);
3535:Middlewares/Third_Party/FatFs/src/ff.c **** }
3536:Middlewares/Third_Party/FatFs/src/ff.c **** 
3537:Middlewares/Third_Party/FatFs/src/ff.c **** 
3538:Middlewares/Third_Party/FatFs/src/ff.c **** 
3539:Middlewares/Third_Party/FatFs/src/ff.c **** 
3540:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3541:Middlewares/Third_Party/FatFs/src/ff.c **** /* Truncate File                                                         */
3542:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3543:Middlewares/Third_Party/FatFs/src/ff.c **** 
3544:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_truncate (
3545:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
3546:Middlewares/Third_Party/FatFs/src/ff.c **** )
3547:Middlewares/Third_Party/FatFs/src/ff.c **** {
3548:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3549:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD ncl;
3550:Middlewares/Third_Party/FatFs/src/ff.c **** 
3551:Middlewares/Third_Party/FatFs/src/ff.c **** 
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);						/* Check validity of the object */
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
3556:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(fp->flag & FA_WRITE))		/* Check access mode */
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
3559:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3560:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fsize > fp->fptr) {
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
3568:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				ncl = get_fat(fp->fs, fp->clust);
3570:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 0xFFFFFFFF) res = FR_DISK_ERR;
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
3576:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3577:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3578:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
3579:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK && (fp->flag & FA__DIRTY)) {
3580:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (disk_write(fp->fs->drv, fp->buf.d8, fp->dsect, 1) != RES_OK)
3581:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DISK_ERR;
3582:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3583:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->flag &= ~FA__DIRTY;
3584:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3585:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3586:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res != FR_OK) fp->err = (FRESULT)res;
3588:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
ARM GAS  /tmp/cckAXl85.s 			page 167


3589:Middlewares/Third_Party/FatFs/src/ff.c **** 
3590:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, res);
3591:Middlewares/Third_Party/FatFs/src/ff.c **** }
3592:Middlewares/Third_Party/FatFs/src/ff.c **** 
3593:Middlewares/Third_Party/FatFs/src/ff.c **** 
3594:Middlewares/Third_Party/FatFs/src/ff.c **** 
3595:Middlewares/Third_Party/FatFs/src/ff.c **** 
3596:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3597:Middlewares/Third_Party/FatFs/src/ff.c **** /* Delete a File or Directory                                            */
3598:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3599:Middlewares/Third_Party/FatFs/src/ff.c **** 
3600:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_unlink (
3601:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the file or directory path */
3602:Middlewares/Third_Party/FatFs/src/ff.c **** )
3603:Middlewares/Third_Party/FatFs/src/ff.c **** {
3604:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3605:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj, sdj;
3606:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dclst = 0;
3608:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3609:Middlewares/Third_Party/FatFs/src/ff.c **** 
3610:Middlewares/Third_Party/FatFs/src/ff.c **** 
3611:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
3616:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3617:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;			/* Cannot remove dot entry */
3618:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3619:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&dj, 2);	/* Cannot remove open object */
3620:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {					/* The object is accessible */
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
3625:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dir[DIR_Attr] & AM_RDO)
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
3628:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				dclst = ld_clust(dj.fs, dir);
3631:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
3632:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
3633:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dclst == dj.fs->cdir) {		 		/* Is it the current directory? */
3634:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = FR_DENIED;
3635:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else
3636:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3637:Middlewares/Third_Party/FatFs/src/ff.c **** 					{
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(&sdj, &dj, sizeof (DIR));	/* Open the sub-directory */
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
3645:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
ARM GAS  /tmp/cckAXl85.s 			page 168


3646:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3647:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3648:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
3654:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3655:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3656:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3657:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3658:Middlewares/Third_Party/FatFs/src/ff.c **** 
3659:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3660:Middlewares/Third_Party/FatFs/src/ff.c **** }
3661:Middlewares/Third_Party/FatFs/src/ff.c **** 
3662:Middlewares/Third_Party/FatFs/src/ff.c **** 
3663:Middlewares/Third_Party/FatFs/src/ff.c **** 
3664:Middlewares/Third_Party/FatFs/src/ff.c **** 
3665:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3666:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create a Directory                                                    */
3667:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3668:Middlewares/Third_Party/FatFs/src/ff.c **** 
3669:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkdir (
3670:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path		/* Pointer to the directory path */
3671:Middlewares/Third_Party/FatFs/src/ff.c **** )
3672:Middlewares/Third_Party/FatFs/src/ff.c **** {
3673:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3674:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3675:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir, n;
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dsc, dcl, pcl, tm = GET_FATTIME();
3677:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3678:Middlewares/Third_Party/FatFs/src/ff.c **** 
3679:Middlewares/Third_Party/FatFs/src/ff.c **** 
3680:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3682:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
3686:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
3687:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_NO_FILE) {				/* Can create a new directory */
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
3690:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0) res = FR_DENIED;		/* No space to allocate a new cluster */
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
ARM GAS  /tmp/cckAXl85.s 			page 169


3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dir + SZ_DIRE, dir, SZ_DIRE); 	/* Create ".." entry */
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
3716:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3717:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) res = dir_register(&dj);	/* Register the object to the directoy */
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
3721:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.dir;
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3728:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3730:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3731:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3732:Middlewares/Third_Party/FatFs/src/ff.c **** 
3733:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3734:Middlewares/Third_Party/FatFs/src/ff.c **** }
3735:Middlewares/Third_Party/FatFs/src/ff.c **** 
3736:Middlewares/Third_Party/FatFs/src/ff.c **** 
3737:Middlewares/Third_Party/FatFs/src/ff.c **** 
3738:Middlewares/Third_Party/FatFs/src/ff.c **** 
3739:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3740:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Attribute                                                      */
3741:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3742:Middlewares/Third_Party/FatFs/src/ff.c **** 
3743:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_chmod (
3744:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file path */
3745:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE attr,			/* Attribute bits */
3746:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE mask			/* Attribute mask to change */
3747:Middlewares/Third_Party/FatFs/src/ff.c **** )
3748:Middlewares/Third_Party/FatFs/src/ff.c **** {
3749:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3750:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3751:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3752:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3753:Middlewares/Third_Party/FatFs/src/ff.c **** 
3754:Middlewares/Third_Party/FatFs/src/ff.c **** 
3755:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
ARM GAS  /tmp/cckAXl85.s 			page 170


3760:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3761:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3762:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3767:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 				mask &= AM_RDO|AM_HID|AM_SYS|AM_ARC;	/* Valid attribute mask */
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = (attr & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3772:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3773:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3774:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3775:Middlewares/Third_Party/FatFs/src/ff.c **** 
3776:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3777:Middlewares/Third_Party/FatFs/src/ff.c **** }
3778:Middlewares/Third_Party/FatFs/src/ff.c **** 
3779:Middlewares/Third_Party/FatFs/src/ff.c **** 
3780:Middlewares/Third_Party/FatFs/src/ff.c **** 
3781:Middlewares/Third_Party/FatFs/src/ff.c **** 
3782:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3783:Middlewares/Third_Party/FatFs/src/ff.c **** /* Rename File/Directory                                                 */
3784:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3785:Middlewares/Third_Party/FatFs/src/ff.c **** 
3786:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_rename (
3787:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_old,	/* Pointer to the object to be renamed */
3788:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path_new	/* Pointer to the new name */
3789:Middlewares/Third_Party/FatFs/src/ff.c **** )
3790:Middlewares/Third_Party/FatFs/src/ff.c **** {
3791:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3792:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR djo, djn;
3793:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[21], *dir;
3794:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD dw;
3795:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3796:Middlewares/Third_Party/FatFs/src/ff.c **** 
3797:Middlewares/Third_Party/FatFs/src/ff.c **** 
3798:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number of the source object */
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&djo.fs, &path_old, 1);
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
3804:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
3805:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3806:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
3807:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = chk_lock(&djo, 2);
3808:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {						/* Old object is found */
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
3812:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(buf, djo.dir + DIR_Attr, 21);	/* Save information about object except name */
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
ARM GAS  /tmp/cckAXl85.s 			page 171


3817:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_INVALID_DRIVE;
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
3822:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
3823:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir = djn.dir;					/* Copy information about object except name */
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
3832:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = move_window(djo.fs, dw);
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
3838:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
3839:Middlewares/Third_Party/FatFs/src/ff.c **** 							}
3840:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
3845:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
3846:Middlewares/Third_Party/FatFs/src/ff.c **** /* End of critical section */
3847:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
3848:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
3849:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3850:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3851:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3852:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3853:Middlewares/Third_Party/FatFs/src/ff.c **** 
3854:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(djo.fs, res);
3855:Middlewares/Third_Party/FatFs/src/ff.c **** }
3856:Middlewares/Third_Party/FatFs/src/ff.c **** 
3857:Middlewares/Third_Party/FatFs/src/ff.c **** 
3858:Middlewares/Third_Party/FatFs/src/ff.c **** 
3859:Middlewares/Third_Party/FatFs/src/ff.c **** 
3860:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3861:Middlewares/Third_Party/FatFs/src/ff.c **** /* Change Timestamp                                                      */
3862:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3863:Middlewares/Third_Party/FatFs/src/ff.c **** 
3864:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_utime (
3865:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Pointer to the file/directory name */
3866:Middlewares/Third_Party/FatFs/src/ff.c **** 	const FILINFO* fno	/* Pointer to the time stamp to be set */
3867:Middlewares/Third_Party/FatFs/src/ff.c **** )
3868:Middlewares/Third_Party/FatFs/src/ff.c **** {
3869:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3870:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3871:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE *dir;
3872:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
3873:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 172


3874:Middlewares/Third_Party/FatFs/src/ff.c **** 
3875:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 1);
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
3880:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
3881:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
3882:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_INVALID_NAME;
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
3887:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtTime, fno->ftime);
3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
3892:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3893:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3894:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3895:Middlewares/Third_Party/FatFs/src/ff.c **** 
3896:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3897:Middlewares/Third_Party/FatFs/src/ff.c **** }
3898:Middlewares/Third_Party/FatFs/src/ff.c **** 
3899:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
3900:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE == 0 */
3901:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 1 */
3902:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _FS_MINIMIZE <= 2 */
3903:Middlewares/Third_Party/FatFs/src/ff.c **** 
3904:Middlewares/Third_Party/FatFs/src/ff.c **** 
3905:Middlewares/Third_Party/FatFs/src/ff.c **** 
3906:Middlewares/Third_Party/FatFs/src/ff.c **** 
3907:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LABEL
3908:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3909:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get volume label                                                      */
3910:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3911:Middlewares/Third_Party/FatFs/src/ff.c **** 
3912:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_getlabel (
3913:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Path name of the logical drive number */
3914:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* label,		/* Pointer to a buffer to return the volume label */
3915:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD* vsn			/* Pointer to a variable to return the volume serial number */
3916:Middlewares/Third_Party/FatFs/src/ff.c **** )
3917:Middlewares/Third_Party/FatFs/src/ff.c **** {
3918:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3919:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3920:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j;
3921:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3922:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
3923:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3924:Middlewares/Third_Party/FatFs/src/ff.c **** 
3925:Middlewares/Third_Party/FatFs/src/ff.c **** 
3926:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3927:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &path, 0);
3928:Middlewares/Third_Party/FatFs/src/ff.c **** 
3929:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume label */
3930:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && label) {
ARM GAS  /tmp/cckAXl85.s 			page 173


3931:Middlewares/Third_Party/FatFs/src/ff.c **** 		dj.sclust = 0;					/* Open root directory */
3932:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_sdi(&dj, 0);
3933:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3934:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
3935:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {			/* A volume label is exist */
3936:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
3937:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = j = 0;
3938:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3939:Middlewares/Third_Party/FatFs/src/ff.c **** 					w = (i < 11) ? dj.dir[i++] : ' ';
3940:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (IsDBCS1(w) && i < 11 && IsDBCS2(dj.dir[i]))
3941:Middlewares/Third_Party/FatFs/src/ff.c **** 						w = w << 8 | dj.dir[i++];
3942:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j++] = ff_convert(w, 1);	/* OEM -> Unicode */
3943:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (j < 11);
3944:Middlewares/Third_Party/FatFs/src/ff.c **** #else
3945:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(label, dj.dir, 11);
3946:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
3947:Middlewares/Third_Party/FatFs/src/ff.c **** 				j = 11;
3948:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
3949:Middlewares/Third_Party/FatFs/src/ff.c **** 					label[j] = 0;
3950:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!j) break;
3951:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (label[--j] == ' ');
3952:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3953:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {	/* No label, return nul string */
3954:Middlewares/Third_Party/FatFs/src/ff.c **** 				label[0] = 0;
3955:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
3956:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
3957:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3958:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3959:Middlewares/Third_Party/FatFs/src/ff.c **** 
3960:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get volume serial number */
3961:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK && vsn) {
3962:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = move_window(dj.fs, dj.fs->volbase);
3963:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
3964:Middlewares/Third_Party/FatFs/src/ff.c **** 			i = dj.fs->fs_type == FS_FAT32 ? BS_VolID32 : BS_VolID;
3965:Middlewares/Third_Party/FatFs/src/ff.c **** 			*vsn = LD_DWORD(&dj.fs->win.d8[i]);
3966:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
3967:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
3968:Middlewares/Third_Party/FatFs/src/ff.c **** 
3969:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
3970:Middlewares/Third_Party/FatFs/src/ff.c **** }
3971:Middlewares/Third_Party/FatFs/src/ff.c **** 
3972:Middlewares/Third_Party/FatFs/src/ff.c **** 
3973:Middlewares/Third_Party/FatFs/src/ff.c **** 
3974:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
3975:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3976:Middlewares/Third_Party/FatFs/src/ff.c **** /* Set volume label                                                      */
3977:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
3978:Middlewares/Third_Party/FatFs/src/ff.c **** 
3979:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_setlabel (
3980:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* label	/* Pointer to the volume label to set */
3981:Middlewares/Third_Party/FatFs/src/ff.c **** )
3982:Middlewares/Third_Party/FatFs/src/ff.c **** {
3983:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
3984:Middlewares/Third_Party/FatFs/src/ff.c **** 	DIR dj;
3985:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE vn[11];
3986:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, j, sl;
3987:Middlewares/Third_Party/FatFs/src/ff.c **** 	WCHAR w;
ARM GAS  /tmp/cckAXl85.s 			page 174


3988:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD tm;
3989:Middlewares/Third_Party/FatFs/src/ff.c **** 
3990:Middlewares/Third_Party/FatFs/src/ff.c **** 
3991:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get logical drive number */
3992:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = find_volume(&dj.fs, &label, 1);
3993:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res) LEAVE_FF(dj.fs, res);
3994:Middlewares/Third_Party/FatFs/src/ff.c **** 
3995:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create a volume label in directory form */
3996:Middlewares/Third_Party/FatFs/src/ff.c **** 	vn[0] = 0;
3997:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (sl = 0; label[sl]; sl++) ;				/* Get name length */
3998:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ; sl && label[sl - 1] == ' '; sl--) ;	/* Remove trailing spaces */
3999:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sl) {	/* Create volume label in directory form */
4000:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = j = 0;
4001:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4002:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4003:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(label[i++]), 0);
4004:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4005:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = (BYTE)label[i++];
4006:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsDBCS1(w))
4007:Middlewares/Third_Party/FatFs/src/ff.c **** 				w = (j < 10 && i < sl && IsDBCS2(label[i])) ? w << 8 | (BYTE)label[i++] : 0;
4008:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN
4009:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = ff_convert(ff_wtoupper(ff_convert(w, 1)), 0);
4010:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4011:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (IsLower(w)) w -= 0x20;			/* To upper ASCII characters */
4012:Middlewares/Third_Party/FatFs/src/ff.c **** #ifdef _EXCVT
4013:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x80) w = ExCvt[w - 0x80];	/* To upper extended characters (SBCS cfg) */
4014:Middlewares/Third_Party/FatFs/src/ff.c **** #else
4015:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!_DF1S && w >= 0x80) w = 0;		/* Reject extended characters (ASCII cfg) */
4016:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4017:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4018:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4019:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!w || chk_chr("\"*+,.:;<=>\?[]|\x7F", w) || j >= (UINT)((w >= 0x100) ? 10 : 11)) /* Reject i
4020:Middlewares/Third_Party/FatFs/src/ff.c **** 				LEAVE_FF(dj.fs, FR_INVALID_NAME);
4021:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (w >= 0x100) vn[j++] = (BYTE)(w >> 8);
4022:Middlewares/Third_Party/FatFs/src/ff.c **** 			vn[j++] = (BYTE)w;
4023:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (i < sl);
4024:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j < 11) vn[j++] = ' ';	/* Fill remaining name field */
4025:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (vn[0] == DDEM) LEAVE_FF(dj.fs, FR_INVALID_NAME);	/* Reject illegal name (heading DDEM) */
4026:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4027:Middlewares/Third_Party/FatFs/src/ff.c **** 
4028:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Set volume label */
4029:Middlewares/Third_Party/FatFs/src/ff.c **** 	dj.sclust = 0;					/* Open root directory */
4030:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = dir_sdi(&dj, 0);
4031:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
4032:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = dir_read(&dj, 1);		/* Get an entry with AM_VOL */
4033:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {			/* A volume label is found */
4034:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (vn[0]) {
4035:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dj.dir, vn, 11);	/* Change the volume label name */
4036:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();
4037:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dj.dir + DIR_WrtTime, tm);
4038:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4039:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.dir[0] = DDEM;			/* Remove the volume label */
4040:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4041:Middlewares/Third_Party/FatFs/src/ff.c **** 			dj.fs->wflag = 1;
4042:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = sync_fs(dj.fs);
4043:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {					/* No volume label is found or error */
4044:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {
ARM GAS  /tmp/cckAXl85.s 			page 175


4045:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
4046:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (vn[0]) {				/* Create volume label as new */
4047:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_alloc(&dj, 1);	/* Allocate an entry for volume label */
4048:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
4049:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_set(dj.dir, 0, SZ_DIRE);	/* Set volume label */
4050:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dj.dir, vn, 11);
4051:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.dir[DIR_Attr] = AM_VOL;
4052:Middlewares/Third_Party/FatFs/src/ff.c **** 						tm = GET_FATTIME();
4053:Middlewares/Third_Party/FatFs/src/ff.c **** 						ST_DWORD(dj.dir + DIR_WrtTime, tm);
4054:Middlewares/Third_Party/FatFs/src/ff.c **** 						dj.fs->wflag = 1;
4055:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = sync_fs(dj.fs);
4056:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
4057:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4058:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4059:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4060:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4061:Middlewares/Third_Party/FatFs/src/ff.c **** 
4062:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(dj.fs, res);
4063:Middlewares/Third_Party/FatFs/src/ff.c **** }
4064:Middlewares/Third_Party/FatFs/src/ff.c **** 
4065:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* !_FS_READONLY */
4066:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_LABEL */
4067:Middlewares/Third_Party/FatFs/src/ff.c **** 
4068:Middlewares/Third_Party/FatFs/src/ff.c **** 
4069:Middlewares/Third_Party/FatFs/src/ff.c **** 
4070:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4071:Middlewares/Third_Party/FatFs/src/ff.c **** /* Forward data to the stream directly (available on only tiny cfg)      */
4072:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4073:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_FORWARD && _FS_TINY
4074:Middlewares/Third_Party/FatFs/src/ff.c **** 
4075:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_forward (
4076:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp, 						/* Pointer to the file object */
4077:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT (*func)(const BYTE*,UINT),	/* Pointer to the streaming function */
4078:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT btf,						/* Number of bytes to forward */
4079:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT* bf						/* Pointer to number of bytes forwarded */
4080:Middlewares/Third_Party/FatFs/src/ff.c **** )
4081:Middlewares/Third_Party/FatFs/src/ff.c **** {
4082:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
4083:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD remain, clst, sect;
4084:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rcnt;
4085:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE csect;
4086:Middlewares/Third_Party/FatFs/src/ff.c **** 
4087:Middlewares/Third_Party/FatFs/src/ff.c **** 
4088:Middlewares/Third_Party/FatFs/src/ff.c **** 	*bf = 0;	/* Clear transfer byte counter */
4089:Middlewares/Third_Party/FatFs/src/ff.c **** 
4090:Middlewares/Third_Party/FatFs/src/ff.c **** 	res = validate(fp);								/* Check validity of the object */
4091:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
4092:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)									/* Check error */
4093:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
4094:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!(fp->flag & FA_READ))						/* Check access mode */
4095:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, FR_DENIED);
4096:Middlewares/Third_Party/FatFs/src/ff.c **** 
4097:Middlewares/Third_Party/FatFs/src/ff.c **** 	remain = fp->fsize - fp->fptr;
4098:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (btf > remain) btf = (UINT)remain;			/* Truncate btf by remaining bytes */
4099:Middlewares/Third_Party/FatFs/src/ff.c **** 
4100:Middlewares/Third_Party/FatFs/src/ff.c **** 	for ( ;  btf && (*func)(0, 0);					/* Repeat until all data transferred or stream becomes busy */
4101:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr += rcnt, *bf += rcnt, btf -= rcnt) {
ARM GAS  /tmp/cckAXl85.s 			page 176


4102:Middlewares/Third_Party/FatFs/src/ff.c **** 		csect = (BYTE)(fp->fptr / SS(fp->fs) & (fp->fs->csize - 1));	/* Sector offset in the cluster */
4103:Middlewares/Third_Party/FatFs/src/ff.c **** 		if ((fp->fptr % SS(fp->fs)) == 0) {			/* On the sector boundary? */
4104:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!csect) {							/* On the cluster boundary? */
4105:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = (fp->fptr == 0) ?			/* On the top of the file? */
4106:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust : get_fat(fp->fs, fp->clust);
4107:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst <= 1) ABORT(fp->fs, FR_INT_ERR);
4108:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
4109:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clst;					/* Update current cluster */
4110:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4111:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4112:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect = clust2sect(fp->fs, fp->clust);		/* Get current data sector */
4113:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!sect) ABORT(fp->fs, FR_INT_ERR);
4114:Middlewares/Third_Party/FatFs/src/ff.c **** 		sect += csect;
4115:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (move_window(fp->fs, sect) != FR_OK)		/* Move sector window */
4116:Middlewares/Third_Party/FatFs/src/ff.c **** 			ABORT(fp->fs, FR_DISK_ERR);
4117:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->dsect = sect;
4118:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = SS(fp->fs) - (WORD)(fp->fptr % SS(fp->fs));	/* Forward data from sector window */
4119:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rcnt > btf) rcnt = btf;
4120:Middlewares/Third_Party/FatFs/src/ff.c **** 		rcnt = (*func)(&fp->fs->win.d8[(WORD)fp->fptr % SS(fp->fs)], rcnt);
4121:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!rcnt) ABORT(fp->fs, FR_INT_ERR);
4122:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4123:Middlewares/Third_Party/FatFs/src/ff.c **** 
4124:Middlewares/Third_Party/FatFs/src/ff.c **** 	LEAVE_FF(fp->fs, FR_OK);
4125:Middlewares/Third_Party/FatFs/src/ff.c **** }
4126:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_FORWARD */
4127:Middlewares/Third_Party/FatFs/src/ff.c **** 
4128:Middlewares/Third_Party/FatFs/src/ff.c **** 
4129:Middlewares/Third_Party/FatFs/src/ff.c **** 
4130:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_MKFS && !_FS_READONLY
4131:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4132:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create file system on the logical drive                               */
4133:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4134:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_ROOTDIR	512		/* Number of root directory entries for FAT12/16 */
4135:Middlewares/Third_Party/FatFs/src/ff.c **** #define N_FATS		1		/* Number of FATs (1 or 2) */
4136:Middlewares/Third_Party/FatFs/src/ff.c **** 
4137:Middlewares/Third_Party/FatFs/src/ff.c **** 
4138:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_mkfs (
4139:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* path,	/* Logical drive number */
4140:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE sfd,			/* Partitioning rule 0:FDISK, 1:SFD */
4141:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT au				/* Size of allocation unit in unit of byte or sector */
4142:Middlewares/Third_Party/FatFs/src/ff.c **** )
4143:Middlewares/Third_Party/FatFs/src/ff.c **** {
4144:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
4145:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD cst[] = {32768, 16384, 8192, 4096, 2048, 16384, 8192, 4096, 2048, 1024, 512};
4146:Middlewares/Third_Party/FatFs/src/ff.c **** 	int vol;
4147:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE fmt, md, sys, *tbl, pdrv, part;
4148:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_clst, vs, n, wsect;
4149:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i;
4150:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD b_vol, b_fat, b_dir, b_data;	/* LBA */
4151:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD n_vol, n_rsv, n_fat, n_dir;	/* Size */
4152:Middlewares/Third_Party/FatFs/src/ff.c **** 	FATFS *fs;
4153:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4154:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM
4155:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD eb[2];
4156:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4157:Middlewares/Third_Party/FatFs/src/ff.c **** 
4158:Middlewares/Third_Party/FatFs/src/ff.c **** 
ARM GAS  /tmp/cckAXl85.s 			page 177


4159:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Check mounted drive and clear work area */
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (sfd > 1) return FR_INVALID_PARAMETER;
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
4167:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
4168:Middlewares/Third_Party/FatFs/src/ff.c **** 
4169:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Get disk statics */
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4172:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4173:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
4174:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_SIZE, &SS(fs)) != RES_OK || SS(fs) > _MAX_SS || SS(fs) < _MIN_SS)
4175:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4176:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4177:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4178:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get partition information from partition table in the MBR */
4179:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_read(pdrv, fs->win.d8, 0, 1) != RES_OK) return FR_DISK_ERR;
4180:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (LD_WORD(fs->win.d8 + BS_55AA) != 0xAA55) return FR_MKFS_ABORTED;
4181:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4182:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!tbl[4]) return FR_MKFS_ABORTED;	/* No partition? */
4183:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = LD_DWORD(tbl + 8);	/* Volume start sector */
4184:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol = LD_DWORD(tbl + 12);	/* Volume size */
4185:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4186:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Create a partition in this function */
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &n_vol) != RES_OK || n_vol < 128)
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
4191:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4192:Middlewares/Third_Party/FatFs/src/ff.c **** 
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au & (au - 1)) au = 0;
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
4198:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au >= _MIN_SS) au /= SS(fs);	/* Number of sectors per cluster */
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
4202:Middlewares/Third_Party/FatFs/src/ff.c **** 
4203:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Pre-compute number of clusters and FAT sub-type */
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = n_vol / au;
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
4208:Middlewares/Third_Party/FatFs/src/ff.c **** 
4209:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine offset and size of FAT structure */
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
4214:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (fmt == FS_FAT12) ? (n_clst * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;
ARM GAS  /tmp/cckAXl85.s 			page 178


4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
4219:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_fat = b_vol + n_rsv;				/* FAT area start sector */
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
4224:Middlewares/Third_Party/FatFs/src/ff.c **** 
4225:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Align data start sector to erase block boundary (for flash memory media) */
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_BLOCK_SIZE, &n) != RES_OK || !n || n > 32768) n = 1;
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
4232:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat += n;
4234:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4235:Middlewares/Third_Party/FatFs/src/ff.c **** 
4236:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine number of clusters and final check of validity of the FAT sub-type */
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	n_clst = (n_vol - n_rsv - n_fat * N_FATS - n_dir) / au;
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
4241:Middlewares/Third_Party/FatFs/src/ff.c **** 
4242:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine system ID in the partition table */
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x0C;		/* FAT32X */
4245:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt == FS_FAT12 && n_vol < 0x10000) {
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
4248:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = (n_vol < 0x10000) ? 0x04 : 0x06;	/* FAT16(<65536) : FAT12/16(>=65536) */
4250:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4251:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4252:Middlewares/Third_Party/FatFs/src/ff.c **** 
4253:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_MULTI_PARTITION && part) {
4254:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Update system ID in the partition table */
4255:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl = &fs->win.d8[MBR_Table + (part - 1) * SZ_PTE];
4256:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[4] = sys;
4257:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to teh MBR */
4258:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4259:Middlewares/Third_Party/FatFs/src/ff.c **** 		md = 0xF8;
4260:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (sfd) {	/* No partition table (SFD) */
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
4263:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			mem_set(fs->win.d8, 0, SS(fs));
4265:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[1] = 1;						/* Partition start head */
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
ARM GAS  /tmp/cckAXl85.s 			page 179


4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
4280:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4281:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4282:Middlewares/Third_Party/FatFs/src/ff.c **** 
4283:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create BPB in the VBR */
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl = fs->win.d8;							/* Clear sector */
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
4287:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_BytsPerSec, i);
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
4295:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
4296:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_TotSec32, n_vol);
4298:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_Media] = md;					/* Media descriptor */
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
4313:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID, n);		/* VSN */
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
4319:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BS_55AA, 0xAA55);			/* Signature (Offset is fixed here regardless of sector size) */
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
4325:Middlewares/Third_Party/FatFs/src/ff.c **** 
4326:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize FAT area */
4327:Middlewares/Third_Party/FatFs/src/ff.c **** 	wsect = b_fat;
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < N_FATS; i++) {		/* Initialize each FAT copy */
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
ARM GAS  /tmp/cckAXl85.s 			page 180


4330:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt != FS_FAT32) {
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
4334:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= 0xFFFFFF00;
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
4339:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4345:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
4346:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4347:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4348:Middlewares/Third_Party/FatFs/src/ff.c **** 
4349:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Initialize root directory */
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? au : (UINT)n_dir;
4351:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
4355:Middlewares/Third_Party/FatFs/src/ff.c **** 
4356:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_TRIM	/* Erase data area if needed */
4357:Middlewares/Third_Party/FatFs/src/ff.c **** 	{
4358:Middlewares/Third_Party/FatFs/src/ff.c **** 		eb[0] = wsect; eb[1] = wsect + (n_clst - ((fmt == FS_FAT32) ? 1 : 0)) * au - 1;
4359:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_ioctl(pdrv, CTRL_TRIM, eb);
4360:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4361:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4362:Middlewares/Third_Party/FatFs/src/ff.c **** 
4363:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create FSINFO if needed */
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
4372:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4373:Middlewares/Third_Party/FatFs/src/ff.c **** 
4374:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_ioctl(pdrv, CTRL_SYNC, 0) == RES_OK) ? FR_OK : FR_DISK_ERR;
4375:Middlewares/Third_Party/FatFs/src/ff.c **** }
4376:Middlewares/Third_Party/FatFs/src/ff.c **** 
4377:Middlewares/Third_Party/FatFs/src/ff.c **** 
4378:Middlewares/Third_Party/FatFs/src/ff.c **** 
4379:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MULTI_PARTITION
4380:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4381:Middlewares/Third_Party/FatFs/src/ff.c **** /* Create partition table on the physical drive                          */
4382:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4383:Middlewares/Third_Party/FatFs/src/ff.c **** 
4384:Middlewares/Third_Party/FatFs/src/ff.c **** FRESULT f_fdisk (
4385:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE pdrv,			/* Physical drive number */
4386:Middlewares/Third_Party/FatFs/src/ff.c **** 	const DWORD szt[],	/* Pointer to the size table for each partitions */
ARM GAS  /tmp/cckAXl85.s 			page 181


4387:Middlewares/Third_Party/FatFs/src/ff.c **** 	void* work			/* Pointer to the working buffer */
4388:Middlewares/Third_Party/FatFs/src/ff.c **** )
4389:Middlewares/Third_Party/FatFs/src/ff.c **** {
4390:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT i, n, sz_cyl, tot_cyl, b_cyl, e_cyl, p_cyl;
4391:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s_hd, e_hd, *p, *buf = (BYTE*)work;
4392:Middlewares/Third_Party/FatFs/src/ff.c **** 	DSTATUS stat;
4393:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD sz_disk, sz_part, s_part;
4394:Middlewares/Third_Party/FatFs/src/ff.c **** 
4395:Middlewares/Third_Party/FatFs/src/ff.c **** 
4396:Middlewares/Third_Party/FatFs/src/ff.c **** 	stat = disk_initialize(pdrv);
4397:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
4398:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
4399:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_ioctl(pdrv, GET_SECTOR_COUNT, &sz_disk)) return FR_DISK_ERR;
4400:Middlewares/Third_Party/FatFs/src/ff.c **** 
4401:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Determine CHS in the table regardless of the drive geometry */
4402:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (n = 16; n < 256 && sz_disk / n / 63 > 1024; n *= 2) ;
4403:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n == 256) n--;
4404:Middlewares/Third_Party/FatFs/src/ff.c **** 	e_hd = n - 1;
4405:Middlewares/Third_Party/FatFs/src/ff.c **** 	sz_cyl = 63 * n;
4406:Middlewares/Third_Party/FatFs/src/ff.c **** 	tot_cyl = sz_disk / sz_cyl;
4407:Middlewares/Third_Party/FatFs/src/ff.c **** 
4408:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Create partition table */
4409:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(buf, 0, _MAX_SS);
4410:Middlewares/Third_Party/FatFs/src/ff.c **** 	p = buf + MBR_Table; b_cyl = 0;
4411:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (i = 0; i < 4; i++, p += SZ_PTE) {
4412:Middlewares/Third_Party/FatFs/src/ff.c **** 		p_cyl = (szt[i] <= 100U) ? (DWORD)tot_cyl * szt[i] / 100 : szt[i] / sz_cyl;
4413:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!p_cyl) continue;
4414:Middlewares/Third_Party/FatFs/src/ff.c **** 		s_part = (DWORD)sz_cyl * b_cyl;
4415:Middlewares/Third_Party/FatFs/src/ff.c **** 		sz_part = (DWORD)sz_cyl * p_cyl;
4416:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (i == 0) {	/* Exclude first track of cylinder 0 */
4417:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 1;
4418:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_part += 63; sz_part -= 63;
4419:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4420:Middlewares/Third_Party/FatFs/src/ff.c **** 			s_hd = 0;
4421:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4422:Middlewares/Third_Party/FatFs/src/ff.c **** 		e_cyl = b_cyl + p_cyl - 1;
4423:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (e_cyl >= tot_cyl) return FR_INVALID_PARAMETER;
4424:Middlewares/Third_Party/FatFs/src/ff.c **** 
4425:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Set partition table */
4426:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[1] = s_hd;						/* Start head */
4427:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[2] = (BYTE)((b_cyl >> 2) + 1);	/* Start sector */
4428:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[3] = (BYTE)b_cyl;					/* Start cylinder */
4429:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[4] = 0x06;						/* System type (temporary setting) */
4430:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[5] = e_hd;						/* End head */
4431:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[6] = (BYTE)((e_cyl >> 2) + 63);	/* End sector */
4432:Middlewares/Third_Party/FatFs/src/ff.c **** 		p[7] = (BYTE)e_cyl;					/* End cylinder */
4433:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 8, s_part);			/* Start sector in LBA */
4434:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(p + 12, sz_part);			/* Partition size */
4435:Middlewares/Third_Party/FatFs/src/ff.c **** 
4436:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Next partition */
4437:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_cyl += p_cyl;
4438:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4439:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(p, 0xAA55);
4440:Middlewares/Third_Party/FatFs/src/ff.c **** 
4441:Middlewares/Third_Party/FatFs/src/ff.c **** 	/* Write it to the MBR */
4442:Middlewares/Third_Party/FatFs/src/ff.c **** 	return (disk_write(pdrv, buf, 0, 1) != RES_OK || disk_ioctl(pdrv, CTRL_SYNC, 0) != RES_OK) ? FR_DI
4443:Middlewares/Third_Party/FatFs/src/ff.c **** }
ARM GAS  /tmp/cckAXl85.s 			page 182


4444:Middlewares/Third_Party/FatFs/src/ff.c **** 
4445:Middlewares/Third_Party/FatFs/src/ff.c **** 
4446:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _MULTI_PARTITION */
4447:Middlewares/Third_Party/FatFs/src/ff.c **** #endif /* _USE_MKFS && !_FS_READONLY */
4448:Middlewares/Third_Party/FatFs/src/ff.c **** 
4449:Middlewares/Third_Party/FatFs/src/ff.c **** 
4450:Middlewares/Third_Party/FatFs/src/ff.c **** 
4451:Middlewares/Third_Party/FatFs/src/ff.c **** 
4452:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_STRFUNC
4453:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4454:Middlewares/Third_Party/FatFs/src/ff.c **** /* Get a string from the file                                            */
4455:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4456:Middlewares/Third_Party/FatFs/src/ff.c **** 
4457:Middlewares/Third_Party/FatFs/src/ff.c **** TCHAR* f_gets (
4458:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR* buff,	/* Pointer to the string buffer to read */
4459:Middlewares/Third_Party/FatFs/src/ff.c **** 	int len,		/* Size of string buffer (characters) */
4460:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp			/* Pointer to the file object */
4461:Middlewares/Third_Party/FatFs/src/ff.c **** )
4462:Middlewares/Third_Party/FatFs/src/ff.c **** {
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
4465:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
4466:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT rc;
4467:Middlewares/Third_Party/FatFs/src/ff.c **** 
4468:Middlewares/Third_Party/FatFs/src/ff.c **** 
4469:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (n < len - 1) {	/* Read characters until buffer gets filled */
4470:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4471:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3		/* Read a character in UTF-8 */
4472:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4473:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4474:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4475:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c >= 0x80) {
4476:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xC0) continue;	/* Skip stray trailer */
4477:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c < 0xE0) {			/* Two-byte sequence */
4478:Middlewares/Third_Party/FatFs/src/ff.c **** 				f_read(fp, s, 1, &rc);
4479:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (rc != 1) break;
4480:Middlewares/Third_Party/FatFs/src/ff.c **** 				c = (c & 0x1F) << 6 | (s[0] & 0x3F);
4481:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0x80) c = '?';
4482:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
4483:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (c < 0xF0) {		/* Three-byte sequence */
4484:Middlewares/Third_Party/FatFs/src/ff.c **** 					f_read(fp, s, 2, &rc);
4485:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (rc != 2) break;
4486:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = c << 12 | (s[0] & 0x3F) << 6 | (s[1] & 0x3F);
4487:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (c < 0x800) c = '?';
4488:Middlewares/Third_Party/FatFs/src/ff.c **** 				} else {			/* Reject four-byte sequence */
4489:Middlewares/Third_Party/FatFs/src/ff.c **** 					c = '?';
4490:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
4491:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4492:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4493:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2		/* Read a character in UTF-16BE */
4494:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4495:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4496:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[1] + (s[0] << 8);
4497:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1		/* Read a character in UTF-16LE */
4498:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 2, &rc);
4499:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 2) break;
4500:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0] + (s[1] << 8);
ARM GAS  /tmp/cckAXl85.s 			page 183


4501:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character in ANSI/OEM */
4502:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4503:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4504:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4505:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsDBCS1(c)) {
4506:Middlewares/Third_Party/FatFs/src/ff.c **** 			f_read(fp, s, 1, &rc);
4507:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (rc != 1) break;
4508:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = (c << 8) + s[0];
4509:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4510:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = ff_convert(c, 1);	/* OEM -> Unicode */
4511:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) c = '?';
4512:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4513:Middlewares/Third_Party/FatFs/src/ff.c **** #else						/* Read a character without conversion */
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_read(fp, s, 1, &rc);
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
4516:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
4517:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_USE_STRFUNC == 2 && c == '\r') continue;	/* Strip '\r' */
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
4522:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	*p = 0;
4524:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
4525:Middlewares/Third_Party/FatFs/src/ff.c **** }
4526:Middlewares/Third_Party/FatFs/src/ff.c **** 
4527:Middlewares/Third_Party/FatFs/src/ff.c **** 
4528:Middlewares/Third_Party/FatFs/src/ff.c **** 
4529:Middlewares/Third_Party/FatFs/src/ff.c **** 
4530:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
4531:Middlewares/Third_Party/FatFs/src/ff.c **** #include <stdarg.h>
4532:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4533:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a character to the file                                           */
4534:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4535:Middlewares/Third_Party/FatFs/src/ff.c **** 
4536:Middlewares/Third_Party/FatFs/src/ff.c **** typedef struct {
4537:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp;
4538:Middlewares/Third_Party/FatFs/src/ff.c **** 	int idx, nchr;
4539:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE buf[64];
4540:Middlewares/Third_Party/FatFs/src/ff.c **** } putbuff;
4541:Middlewares/Third_Party/FatFs/src/ff.c **** 
4542:Middlewares/Third_Party/FatFs/src/ff.c **** 
4543:Middlewares/Third_Party/FatFs/src/ff.c **** static
4544:Middlewares/Third_Party/FatFs/src/ff.c **** void putc_bfd (
4545:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff* pb,
4546:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c
4547:Middlewares/Third_Party/FatFs/src/ff.c **** )
4548:Middlewares/Third_Party/FatFs/src/ff.c **** {
 5347              		.loc 1 4548 0
 5348              		.cfi_startproc
 5349              		@ args = 0, pretend = 0, frame = 8
 5350              		@ frame_needed = 0, uses_anonymous_args = 0
 5351              	.LVL770:
 5352 0000 70B5     		push	{r4, r5, r6, lr}
 5353              	.LCFI66:
 5354              		.cfi_def_cfa_offset 16
 5355              		.cfi_offset 4, -16
ARM GAS  /tmp/cckAXl85.s 			page 184


 5356              		.cfi_offset 5, -12
 5357              		.cfi_offset 6, -8
 5358              		.cfi_offset 14, -4
 5359 0002 82B0     		sub	sp, sp, #8
 5360              	.LCFI67:
 5361              		.cfi_def_cfa_offset 24
 5362 0004 0446     		mov	r4, r0
 5363 0006 0E46     		mov	r6, r1
4549:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT bw;
4550:Middlewares/Third_Party/FatFs/src/ff.c **** 	int i;
4551:Middlewares/Third_Party/FatFs/src/ff.c **** 
4552:Middlewares/Third_Party/FatFs/src/ff.c **** 
4553:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (_USE_STRFUNC == 2 && c == '\n')	 /* LF -> CRLF conversion */
 5364              		.loc 1 4553 0
 5365 0008 0A29     		cmp	r1, #10
 5366 000a 0DD0     		beq	.L550
 5367              	.LVL771:
 5368              	.L544:
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(pb, '\r');
4555:Middlewares/Third_Party/FatFs/src/ff.c **** 
4556:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = pb->idx;	/* Buffer write index (-1:error) */
 5369              		.loc 1 4556 0
 5370 000c 6368     		ldr	r3, [r4, #4]
 5371              	.LVL772:
4557:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i < 0) return;
 5372              		.loc 1 4557 0
 5373 000e 002B     		cmp	r3, #0
 5374 0010 08DB     		blt	.L543
4558:Middlewares/Third_Party/FatFs/src/ff.c **** 
4559:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
4560:Middlewares/Third_Party/FatFs/src/ff.c **** #if _STRF_ENCODE == 3			/* Write a character in UTF-8 */
4561:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c < 0x80) {				/* 7-bit */
4562:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)c;
4563:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
4564:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c < 0x800) {		/* 11-bit */
4565:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xC0 | c >> 6);
4566:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {				/* 16-bit */
4567:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0xE0 | c >> 12);
4568:Middlewares/Third_Party/FatFs/src/ff.c **** 			pb->buf[i++] = (BYTE)(0x80 | (c >> 6 & 0x3F));
4569:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4570:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(0x80 | (c & 0x3F));
4571:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4572:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 2			/* Write a character in UTF-16BE */
4573:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4574:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4575:Middlewares/Third_Party/FatFs/src/ff.c **** #elif _STRF_ENCODE == 1			/* Write a character in UTF-16LE */
4576:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4577:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)(c >> 8);
4578:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character in ANSI/OEM */
4579:Middlewares/Third_Party/FatFs/src/ff.c **** 	c = ff_convert(c, 0);	/* Unicode -> OEM */
4580:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!c) c = '?';
4581:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (c >= 0x100)
4582:Middlewares/Third_Party/FatFs/src/ff.c **** 		pb->buf[i++] = (BYTE)(c >> 8);
4583:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
4584:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4585:Middlewares/Third_Party/FatFs/src/ff.c **** #else							/* Write a character without conversion */
4586:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->buf[i++] = (BYTE)c;
ARM GAS  /tmp/cckAXl85.s 			page 185


 5375              		.loc 1 4586 0
 5376 0012 5D1C     		adds	r5, r3, #1
 5377              	.LVL773:
 5378 0014 2344     		add	r3, r3, r4
 5379 0016 1E73     		strb	r6, [r3, #12]
4587:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
4588:Middlewares/Third_Party/FatFs/src/ff.c **** 
4589:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (i >= (int)(sizeof pb->buf) - 3) {	/* Write buffered characters to the file */
 5380              		.loc 1 4589 0
 5381 0018 3C2D     		cmp	r5, #60
 5382 001a 09DC     		bgt	.L551
 5383              	.LVL774:
 5384              	.L546:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 		f_write(pb->fp, pb->buf, (UINT)i, &bw);
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
4592:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4593:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->idx = i;
 5385              		.loc 1 4593 0
 5386 001c 6560     		str	r5, [r4, #4]
4594:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb->nchr++;
 5387              		.loc 1 4594 0
 5388 001e A368     		ldr	r3, [r4, #8]
 5389 0020 0133     		adds	r3, r3, #1
 5390 0022 A360     		str	r3, [r4, #8]
 5391              	.LVL775:
 5392              	.L543:
4595:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5393              		.loc 1 4595 0
 5394 0024 02B0     		add	sp, sp, #8
 5395              	.LCFI68:
 5396              		.cfi_remember_state
 5397              		.cfi_def_cfa_offset 16
 5398              		@ sp needed
 5399 0026 70BD     		pop	{r4, r5, r6, pc}
 5400              	.LVL776:
 5401              	.L550:
 5402              	.LCFI69:
 5403              		.cfi_restore_state
4554:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5404              		.loc 1 4554 0
 5405 0028 0D21     		movs	r1, #13
 5406              	.LVL777:
 5407 002a FFF7E9FF 		bl	putc_bfd
 5408              	.LVL778:
 5409 002e EDE7     		b	.L544
 5410              	.LVL779:
 5411              	.L551:
4590:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = (bw == (UINT)i) ? 0 : -1;
 5412              		.loc 1 4590 0
 5413 0030 01AB     		add	r3, sp, #4
 5414 0032 2A46     		mov	r2, r5
 5415 0034 04F10C01 		add	r1, r4, #12
 5416 0038 2068     		ldr	r0, [r4]
 5417 003a FFF7FEFF 		bl	f_write
 5418              	.LVL780:
4591:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 5419              		.loc 1 4591 0
ARM GAS  /tmp/cckAXl85.s 			page 186


 5420 003e 019B     		ldr	r3, [sp, #4]
 5421 0040 9D42     		cmp	r5, r3
 5422 0042 02D0     		beq	.L552
 5423 0044 4FF0FF35 		mov	r5, #-1
 5424              	.LVL781:
 5425 0048 E8E7     		b	.L546
 5426              	.LVL782:
 5427              	.L552:
 5428 004a 0025     		movs	r5, #0
 5429              	.LVL783:
 5430 004c E6E7     		b	.L546
 5431              		.cfi_endproc
 5432              	.LFE125:
 5434              		.section	.text.f_sync,"ax",%progbits
 5435              		.align	1
 5436              		.global	f_sync
 5437              		.syntax unified
 5438              		.thumb
 5439              		.thumb_func
 5440              		.fpu softvfp
 5442              	f_sync:
 5443              	.LFB109:
2884:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5444              		.loc 1 2884 0
 5445              		.cfi_startproc
 5446              		@ args = 0, pretend = 0, frame = 0
 5447              		@ frame_needed = 0, uses_anonymous_args = 0
 5448              	.LVL784:
 5449 0000 38B5     		push	{r3, r4, r5, lr}
 5450              	.LCFI70:
 5451              		.cfi_def_cfa_offset 16
 5452              		.cfi_offset 3, -16
 5453              		.cfi_offset 4, -12
 5454              		.cfi_offset 5, -8
 5455              		.cfi_offset 14, -4
 5456 0002 0446     		mov	r4, r0
2890:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 5457              		.loc 1 2890 0
 5458 0004 FFF7FEFF 		bl	validate
 5459              	.LVL785:
2891:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->flag & FA__WRITTEN) {	/* Has the file been written? */
 5460              		.loc 1 2891 0
 5461 0008 0546     		mov	r5, r0
 5462 000a 18B9     		cbnz	r0, .L554
2892:Middlewares/Third_Party/FatFs/src/ff.c **** 			/* Write-back dirty buffer */
 5463              		.loc 1 2892 0
 5464 000c A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 5465 000e 13F0200F 		tst	r3, #32
 5466 0012 05D1     		bne	.L556
 5467              	.LVL786:
 5468              	.L554:
2918:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5469              		.loc 1 2918 0
 5470 0014 2946     		mov	r1, r5
 5471 0016 2068     		ldr	r0, [r4]
 5472 0018 FFF7FEFF 		bl	unlock_fs
 5473              	.LVL787:
ARM GAS  /tmp/cckAXl85.s 			page 187


2919:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5474              		.loc 1 2919 0
 5475 001c 2846     		mov	r0, r5
 5476 001e 38BD     		pop	{r3, r4, r5, pc}
 5477              	.LVL788:
 5478              	.L556:
2902:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {
 5479              		.loc 1 2902 0
 5480 0020 E169     		ldr	r1, [r4, #28]
 5481 0022 2068     		ldr	r0, [r4]
 5482              	.LVL789:
 5483 0024 FFF7FEFF 		bl	move_window
 5484              	.LVL790:
2903:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = fp->dir_ptr;
 5485              		.loc 1 2903 0
 5486 0028 0546     		mov	r5, r0
 5487 002a 0028     		cmp	r0, #0
 5488 002c F2D1     		bne	.L554
2904:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] |= AM_ARC;					/* Set archive bit */
 5489              		.loc 1 2904 0
 5490 002e 256A     		ldr	r5, [r4, #32]
 5491              	.LVL791:
2905:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_FileSize, fp->fsize);	/* Update file size */
 5492              		.loc 1 2905 0
 5493 0030 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 5494 0032 43F02003 		orr	r3, r3, #32
 5495 0036 EB72     		strb	r3, [r5, #11]
2906:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, fp->sclust);					/* Update start cluster */
 5496              		.loc 1 2906 0
 5497 0038 237B     		ldrb	r3, [r4, #12]	@ zero_extendqisi2
 5498 003a 2B77     		strb	r3, [r5, #28]
 5499 003c A389     		ldrh	r3, [r4, #12]
 5500 003e 1B0A     		lsrs	r3, r3, #8
 5501 0040 6B77     		strb	r3, [r5, #29]
 5502 0042 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 5503 0044 AB77     		strb	r3, [r5, #30]
 5504 0046 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 5505 0048 EB77     		strb	r3, [r5, #31]
2907:Middlewares/Third_Party/FatFs/src/ff.c **** 				tm = GET_FATTIME();							/* Update updated time */
 5506              		.loc 1 2907 0
 5507 004a 2169     		ldr	r1, [r4, #16]
 5508 004c 2846     		mov	r0, r5
 5509              	.LVL792:
 5510 004e FFF7FEFF 		bl	st_clust
 5511              	.LVL793:
2908:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 5512              		.loc 1 2908 0
 5513 0052 FFF7FEFF 		bl	get_fattime
 5514              	.LVL794:
2909:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_LstAccDate, 0);
 5515              		.loc 1 2909 0
 5516 0056 A875     		strb	r0, [r5, #22]
 5517 0058 C0F30723 		ubfx	r3, r0, #8, #8
 5518 005c EB75     		strb	r3, [r5, #23]
 5519 005e C0F30743 		ubfx	r3, r0, #16, #8
 5520 0062 2B76     		strb	r3, [r5, #24]
 5521 0064 000E     		lsrs	r0, r0, #24
ARM GAS  /tmp/cckAXl85.s 			page 188


 5522              	.LVL795:
 5523 0066 6876     		strb	r0, [r5, #25]
2910:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->flag &= ~FA__WRITTEN;
 5524              		.loc 1 2910 0
 5525 0068 0023     		movs	r3, #0
 5526 006a AB74     		strb	r3, [r5, #18]
 5527 006c EB74     		strb	r3, [r5, #19]
2911:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fs->wflag = 1;
 5528              		.loc 1 2911 0
 5529 006e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 5530 0070 23F02003 		bic	r3, r3, #32
 5531 0074 A371     		strb	r3, [r4, #6]
2912:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(fp->fs);
 5532              		.loc 1 2912 0
 5533 0076 2368     		ldr	r3, [r4]
 5534 0078 0122     		movs	r2, #1
 5535 007a 83F80422 		strb	r2, [r3, #516]
2913:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5536              		.loc 1 2913 0
 5537 007e 2068     		ldr	r0, [r4]
 5538 0080 FFF7FEFF 		bl	sync_fs
 5539              	.LVL796:
 5540 0084 0546     		mov	r5, r0
 5541              	.LVL797:
 5542 0086 C5E7     		b	.L554
 5543              		.cfi_endproc
 5544              	.LFE109:
 5546              		.section	.text.f_close,"ax",%progbits
 5547              		.align	1
 5548              		.global	f_close
 5549              		.syntax unified
 5550              		.thumb
 5551              		.thumb_func
 5552              		.fpu softvfp
 5554              	f_close:
 5555              	.LFB110:
2933:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5556              		.loc 1 2933 0
 5557              		.cfi_startproc
 5558              		@ args = 0, pretend = 0, frame = 0
 5559              		@ frame_needed = 0, uses_anonymous_args = 0
 5560              	.LVL798:
 5561 0000 70B5     		push	{r4, r5, r6, lr}
 5562              	.LCFI71:
 5563              		.cfi_def_cfa_offset 16
 5564              		.cfi_offset 4, -16
 5565              		.cfi_offset 5, -12
 5566              		.cfi_offset 6, -8
 5567              		.cfi_offset 14, -4
 5568 0002 0546     		mov	r5, r0
2938:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK)
 5569              		.loc 1 2938 0
 5570 0004 FFF7FEFF 		bl	f_sync
 5571              	.LVL799:
2939:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5572              		.loc 1 2939 0
 5573 0008 0446     		mov	r4, r0
ARM GAS  /tmp/cckAXl85.s 			page 189


 5574 000a 08B1     		cbz	r0, .L561
 5575              	.LVL800:
 5576              	.L558:
2958:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5577              		.loc 1 2958 0
 5578 000c 2046     		mov	r0, r4
 5579 000e 70BD     		pop	{r4, r5, r6, pc}
 5580              	.LVL801:
 5581              	.L561:
2942:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {
 5582              		.loc 1 2942 0
 5583 0010 2846     		mov	r0, r5
 5584              	.LVL802:
 5585 0012 FFF7FEFF 		bl	validate
 5586              	.LVL803:
2943:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5587              		.loc 1 2943 0
 5588 0016 0446     		mov	r4, r0
 5589 0018 0028     		cmp	r0, #0
 5590 001a F7D1     		bne	.L558
 5591              	.LBB2:
2945:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5592              		.loc 1 2945 0
 5593 001c 2E68     		ldr	r6, [r5]
 5594              	.LVL804:
2948:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)
 5595              		.loc 1 2948 0
 5596 001e A86A     		ldr	r0, [r5, #40]
 5597              	.LVL805:
 5598 0020 FFF7FEFF 		bl	dec_lock
 5599              	.LVL806:
2949:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5600              		.loc 1 2949 0
 5601 0024 0446     		mov	r4, r0
 5602 0026 08B9     		cbnz	r0, .L559
2951:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 5603              		.loc 1 2951 0
 5604 0028 0023     		movs	r3, #0
 5605 002a 2B60     		str	r3, [r5]
 5606              	.L559:
2953:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5607              		.loc 1 2953 0
 5608 002c 0021     		movs	r1, #0
 5609 002e 3046     		mov	r0, r6
 5610              	.LVL807:
 5611 0030 FFF7FEFF 		bl	unlock_fs
 5612              	.LVL808:
 5613 0034 EAE7     		b	.L558
 5614              	.LBE2:
 5615              		.cfi_endproc
 5616              	.LFE110:
 5618              		.section	.text.f_lseek,"ax",%progbits
 5619              		.align	1
 5620              		.global	f_lseek
 5621              		.syntax unified
 5622              		.thumb
 5623              		.thumb_func
ARM GAS  /tmp/cckAXl85.s 			page 190


 5624              		.fpu softvfp
 5626              	f_lseek:
 5627              	.LFB111:
3106:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 5628              		.loc 1 3106 0
 5629              		.cfi_startproc
 5630              		@ args = 0, pretend = 0, frame = 0
 5631              		@ frame_needed = 0, uses_anonymous_args = 0
 5632              	.LVL809:
 5633 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5634              	.LCFI72:
 5635              		.cfi_def_cfa_offset 40
 5636              		.cfi_offset 3, -40
 5637              		.cfi_offset 4, -36
 5638              		.cfi_offset 5, -32
 5639              		.cfi_offset 6, -28
 5640              		.cfi_offset 7, -24
 5641              		.cfi_offset 8, -20
 5642              		.cfi_offset 9, -16
 5643              		.cfi_offset 10, -12
 5644              		.cfi_offset 11, -8
 5645              		.cfi_offset 14, -4
 5646 0004 0446     		mov	r4, r0
 5647 0006 0D46     		mov	r5, r1
3114:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res != FR_OK) LEAVE_FF(fp->fs, res);
 5648              		.loc 1 3114 0
 5649 0008 FFF7FEFF 		bl	validate
 5650              	.LVL810:
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
 5651              		.loc 1 3115 0
 5652 000c 0646     		mov	r6, r0
 5653 000e B0B9     		cbnz	r0, .L601
3116:Middlewares/Third_Party/FatFs/src/ff.c **** 		LEAVE_FF(fp->fs, (FRESULT)fp->err);
 5654              		.loc 1 3116 0
 5655 0010 E179     		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 5656 0012 C9B9     		cbnz	r1, .L602
3120:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs == CREATE_LINKMAP) {	/* Create CLMT */
 5657              		.loc 1 3120 0
 5658 0014 636A     		ldr	r3, [r4, #36]
 5659 0016 002B     		cmp	r3, #0
 5660 0018 00F08480 		beq	.L566
3121:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fp->cltbl;
 5661              		.loc 1 3121 0
 5662 001c B5F1FF3F 		cmp	r5, #-1
 5663 0020 17D0     		beq	.L603
3147:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs = fp->fsize;
 5664              		.loc 1 3147 0
 5665 0022 E768     		ldr	r7, [r4, #12]
 5666 0024 BD42     		cmp	r5, r7
 5667 0026 00D8     		bhi	.L575
 5668 0028 2F46     		mov	r7, r5
 5669              	.L575:
 5670              	.LVL811:
3149:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ofs) {
 5671              		.loc 1 3149 0
 5672 002a A760     		str	r7, [r4, #8]
3150:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->clust = clmt_clust(fp, ofs - 1);
ARM GAS  /tmp/cckAXl85.s 			page 191


 5673              		.loc 1 3150 0
 5674 002c 002F     		cmp	r7, #0
 5675 002e 56D1     		bne	.L604
 5676              	.LVL812:
 5677              	.L574:
3250:Middlewares/Third_Party/FatFs/src/ff.c **** }
 5678              		.loc 1 3250 0
 5679 0030 3146     		mov	r1, r6
 5680 0032 2068     		ldr	r0, [r4]
 5681 0034 FFF7FEFF 		bl	unlock_fs
 5682              	.LVL813:
 5683              	.L564:
3251:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5684              		.loc 1 3251 0
 5685 0038 3046     		mov	r0, r6
 5686 003a BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5687              	.LVL814:
 5688              	.L601:
3115:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fp->err)						/* Check error */
 5689              		.loc 1 3115 0 discriminator 1
 5690 003e 0146     		mov	r1, r0
 5691 0040 2068     		ldr	r0, [r4]
 5692              	.LVL815:
 5693 0042 FFF7FEFF 		bl	unlock_fs
 5694              	.LVL816:
 5695 0046 F7E7     		b	.L564
 5696              	.LVL817:
 5697              	.L602:
3117:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5698              		.loc 1 3117 0
 5699 0048 2068     		ldr	r0, [r4]
 5700              	.LVL818:
 5701 004a FFF7FEFF 		bl	unlock_fs
 5702              	.LVL819:
 5703 004e E679     		ldrb	r6, [r4, #7]	@ zero_extendqisi2
 5704 0050 F2E7     		b	.L564
 5705              	.LVL820:
 5706              	.L603:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 5707              		.loc 1 3123 0
 5708 0052 03F1040B 		add	fp, r3, #4
 5709              	.LVL821:
 5710 0056 D3F800A0 		ldr	r10, [r3]
 5711              	.LVL822:
3124:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (cl) {
 5712              		.loc 1 3124 0
 5713 005a D4F81090 		ldr	r9, [r4, #16]
 5714              	.LVL823:
3125:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 5715              		.loc 1 3125 0
 5716 005e B9F1000F 		cmp	r9, #0
 5717 0062 30D0     		beq	.L594
 5718 0064 4FF00208 		mov	r8, #2
 5719              	.LVL824:
 5720              	.L573:
3128:Middlewares/Third_Party/FatFs/src/ff.c **** 					do {
 5721              		.loc 1 3128 0
ARM GAS  /tmp/cckAXl85.s 			page 192


 5722 0068 08F10208 		add	r8, r8, #2
 5723              	.LVL825:
 5724 006c 4D46     		mov	r5, r9
 5725 006e 0027     		movs	r7, #0
 5726              	.LVL826:
 5727              	.L571:
3130:Middlewares/Third_Party/FatFs/src/ff.c **** 						cl = get_fat(fp->fs, cl);
 5728              		.loc 1 3130 0
 5729 0070 0137     		adds	r7, r7, #1
 5730              	.LVL827:
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5731              		.loc 1 3131 0
 5732 0072 2946     		mov	r1, r5
 5733 0074 2068     		ldr	r0, [r4]
 5734 0076 FFF7FEFF 		bl	get_fat
 5735              	.LVL828:
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5736              		.loc 1 3132 0
 5737 007a 0128     		cmp	r0, #1
 5738 007c 15D9     		bls	.L605
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5739              		.loc 1 3133 0
 5740 007e B0F1FF3F 		cmp	r0, #-1
 5741 0082 19D0     		beq	.L606
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5742              		.loc 1 3134 0
 5743 0084 6B1C     		adds	r3, r5, #1
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
 5744              		.loc 1 3131 0
 5745 0086 0546     		mov	r5, r0
 5746              	.LVL829:
3134:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (ulen <= tlen) {		/* Store the length and top of the fragment */
 5747              		.loc 1 3134 0
 5748 0088 9842     		cmp	r0, r3
 5749 008a F1D0     		beq	.L571
3135:Middlewares/Third_Party/FatFs/src/ff.c **** 						*tbl++ = ncl; *tbl++ = tcl;
 5750              		.loc 1 3135 0
 5751 008c C245     		cmp	r10, r8
 5752 008e 05D3     		bcc	.L572
 5753              	.LVL830:
3136:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 5754              		.loc 1 3136 0
 5755 0090 5B46     		mov	r3, fp
 5756              	.LVL831:
 5757 0092 43F8087B 		str	r7, [r3], #8
 5758              	.LVL832:
 5759 0096 CBF80490 		str	r9, [fp, #4]
 5760 009a 9B46     		mov	fp, r3
 5761              	.LVL833:
 5762              	.L572:
3138:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5763              		.loc 1 3138 0
 5764 009c 2368     		ldr	r3, [r4]
 5765 009e D3F81832 		ldr	r3, [r3, #536]
 5766 00a2 9842     		cmp	r0, r3
 5767 00a4 11D2     		bcs	.L568
3131:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl <= 1) ABORT(fp->fs, FR_INT_ERR);
ARM GAS  /tmp/cckAXl85.s 			page 193


 5768              		.loc 1 3131 0
 5769 00a6 8146     		mov	r9, r0
 5770              	.LVL834:
 5771 00a8 DEE7     		b	.L573
 5772              	.LVL835:
 5773              	.L605:
3132:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (cl == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5774              		.loc 1 3132 0 discriminator 1
 5775 00aa 0226     		movs	r6, #2
 5776 00ac E671     		strb	r6, [r4, #7]
 5777 00ae 3146     		mov	r1, r6
 5778 00b0 2068     		ldr	r0, [r4]
 5779              	.LVL836:
 5780 00b2 FFF7FEFF 		bl	unlock_fs
 5781              	.LVL837:
 5782 00b6 BFE7     		b	.L564
 5783              	.LVL838:
 5784              	.L606:
3133:Middlewares/Third_Party/FatFs/src/ff.c **** 					} while (cl == pcl + 1);
 5785              		.loc 1 3133 0 discriminator 1
 5786 00b8 0126     		movs	r6, #1
 5787 00ba E671     		strb	r6, [r4, #7]
 5788 00bc 3146     		mov	r1, r6
 5789 00be 2068     		ldr	r0, [r4]
 5790              	.LVL839:
 5791 00c0 FFF7FEFF 		bl	unlock_fs
 5792              	.LVL840:
 5793 00c4 B8E7     		b	.L564
 5794              	.LVL841:
 5795              	.L594:
3123:Middlewares/Third_Party/FatFs/src/ff.c **** 			cl = fp->sclust;			/* Top of the chain */
 5796              		.loc 1 3123 0
 5797 00c6 4FF00208 		mov	r8, #2
 5798              	.LVL842:
 5799              	.L568:
3140:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ulen <= tlen)
 5800              		.loc 1 3140 0
 5801 00ca 636A     		ldr	r3, [r4, #36]
 5802 00cc C3F80080 		str	r8, [r3]
3141:Middlewares/Third_Party/FatFs/src/ff.c **** 				*tbl = 0;		/* Terminate table */
 5803              		.loc 1 3141 0
 5804 00d0 D045     		cmp	r8, r10
 5805 00d2 00F2C480 		bhi	.L596
3142:Middlewares/Third_Party/FatFs/src/ff.c **** 			else
 5806              		.loc 1 3142 0
 5807 00d6 0023     		movs	r3, #0
 5808 00d8 CBF80030 		str	r3, [fp]
 5809 00dc A8E7     		b	.L574
 5810              	.LVL843:
 5811              	.L604:
3151:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(fp->fs, fp->clust);
 5812              		.loc 1 3151 0
 5813 00de 07F1FF38 		add	r8, r7, #-1
 5814 00e2 4146     		mov	r1, r8
 5815 00e4 2046     		mov	r0, r4
 5816              	.LVL844:
 5817 00e6 FFF7FEFF 		bl	clmt_clust
ARM GAS  /tmp/cckAXl85.s 			page 194


 5818              	.LVL845:
 5819 00ea 0146     		mov	r1, r0
 5820 00ec 6061     		str	r0, [r4, #20]
3152:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (!dsc) ABORT(fp->fs, FR_INT_ERR);
 5821              		.loc 1 3152 0
 5822 00ee 2568     		ldr	r5, [r4]
 5823 00f0 2846     		mov	r0, r5
 5824 00f2 FFF7FEFF 		bl	clust2sect
 5825              	.LVL846:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
 5826              		.loc 1 3153 0
 5827 00f6 70B1     		cbz	r0, .L607
3154:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fp->fptr % SS(fp->fs) && dsc != fp->dsect) {	/* Refill sector cache if needed */
 5828              		.loc 1 3154 0
 5829 00f8 95F80212 		ldrb	r1, [r5, #514]	@ zero_extendqisi2
 5830 00fc 0139     		subs	r1, r1, #1
 5831 00fe 01EA5821 		and	r1, r1, r8, lsr #9
 5832 0102 0144     		add	r1, r1, r0
 5833              	.LVL847:
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5834              		.loc 1 3155 0
 5835 0104 C7F30807 		ubfx	r7, r7, #0, #9
 5836              	.LVL848:
 5837 0108 002F     		cmp	r7, #0
 5838 010a 91D0     		beq	.L574
3155:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5839              		.loc 1 3155 0 is_stmt 0 discriminator 1
 5840 010c A369     		ldr	r3, [r4, #24]
 5841 010e 9942     		cmp	r1, r3
 5842 0110 8ED0     		beq	.L574
3167:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5843              		.loc 1 3167 0 is_stmt 1
 5844 0112 A161     		str	r1, [r4, #24]
 5845 0114 8CE7     		b	.L574
 5846              	.LVL849:
 5847              	.L607:
3153:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc += (ofs - 1) / SS(fp->fs) & (fp->fs->csize - 1);
 5848              		.loc 1 3153 0 discriminator 1
 5849 0116 0226     		movs	r6, #2
 5850 0118 E671     		strb	r6, [r4, #7]
 5851 011a 3146     		mov	r1, r6
 5852 011c 2846     		mov	r0, r5
 5853              	.LVL850:
 5854 011e FFF7FEFF 		bl	unlock_fs
 5855              	.LVL851:
 5856 0122 89E7     		b	.L564
 5857              	.LVL852:
 5858              	.L566:
3176:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5859              		.loc 1 3176 0
 5860 0124 E368     		ldr	r3, [r4, #12]
 5861 0126 9D42     		cmp	r5, r3
 5862 0128 04D9     		bls	.L577
3178:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 5863              		.loc 1 3178 0
 5864 012a A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 5865 012c 12F0020F 		tst	r2, #2
ARM GAS  /tmp/cckAXl85.s 			page 195


 5866 0130 00D1     		bne	.L577
3180:Middlewares/Third_Party/FatFs/src/ff.c **** 
 5867              		.loc 1 3180 0
 5868 0132 1D46     		mov	r5, r3
 5869              	.LVL853:
 5870              	.L577:
3182:Middlewares/Third_Party/FatFs/src/ff.c **** 		fp->fptr = nsect = 0;
 5871              		.loc 1 3182 0
 5872 0134 A368     		ldr	r3, [r4, #8]
 5873              	.LVL854:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 5874              		.loc 1 3183 0
 5875 0136 0022     		movs	r2, #0
 5876 0138 A260     		str	r2, [r4, #8]
3184:Middlewares/Third_Party/FatFs/src/ff.c **** 			bcs = (DWORD)fp->fs->csize * SS(fp->fs);	/* Cluster size (byte) */
 5877              		.loc 1 3184 0
 5878 013a DDB1     		cbz	r5, .L578
3185:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (ifptr > 0 &&
 5879              		.loc 1 3185 0
 5880 013c 2068     		ldr	r0, [r4]
 5881              	.LVL855:
 5882 013e 90F80282 		ldrb	r8, [r0, #514]	@ zero_extendqisi2
 5883 0142 4FEA4828 		lsl	r8, r8, #9
 5884              	.LVL856:
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5885              		.loc 1 3186 0
 5886 0146 73B1     		cbz	r3, .L579
3187:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->fptr = (ifptr - 1) & ~(bcs - 1);	/* start from the current cluster */
 5887              		.loc 1 3187 0 discriminator 1
 5888 0148 6A1E     		subs	r2, r5, #1
 5889 014a B2FBF8F2 		udiv	r2, r2, r8
 5890 014e 013B     		subs	r3, r3, #1
 5891              	.LVL857:
 5892 0150 B3FBF8F1 		udiv	r1, r3, r8
3186:Middlewares/Third_Party/FatFs/src/ff.c **** 				(ofs - 1) / bcs >= (ifptr - 1) / bcs) {	/* When seek to same or following cluster, */
 5893              		.loc 1 3186 0 discriminator 1
 5894 0154 8A42     		cmp	r2, r1
 5895 0156 06D3     		bcc	.L579
3188:Middlewares/Third_Party/FatFs/src/ff.c **** 				ofs -= fp->fptr;
 5896              		.loc 1 3188 0
 5897 0158 C8F10007 		rsb	r7, r8, #0
 5898 015c 1F40     		ands	r7, r7, r3
 5899 015e A760     		str	r7, [r4, #8]
3189:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = fp->clust;
 5900              		.loc 1 3189 0
 5901 0160 EF1B     		subs	r7, r5, r7
 5902              	.LVL858:
3190:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {									/* When seek to back cluster, */
 5903              		.loc 1 3190 0
 5904 0162 6569     		ldr	r5, [r4, #20]
 5905              	.LVL859:
 5906 0164 04E0     		b	.L580
 5907              	.LVL860:
 5908              	.L579:
3192:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 5909              		.loc 1 3192 0
 5910 0166 2369     		ldr	r3, [r4, #16]
ARM GAS  /tmp/cckAXl85.s 			page 196


 5911              	.LVL861:
3194:Middlewares/Third_Party/FatFs/src/ff.c **** 					clst = create_chain(fp->fs, 0);
 5912              		.loc 1 3194 0
 5913 0168 B3B1     		cbz	r3, .L608
 5914              	.L581:
3201:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 5915              		.loc 1 3201 0
 5916 016a 6361     		str	r3, [r4, #20]
 5917 016c 2F46     		mov	r7, r5
 5918 016e 1D46     		mov	r5, r3
 5919              	.LVL862:
 5920              	.L580:
3203:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (ofs > bcs) {						/* Cluster following loop */
 5921              		.loc 1 3203 0
 5922 0170 002D     		cmp	r5, #0
 5923 0172 3FD1     		bne	.L584
 5924              	.LVL863:
 5925              	.L578:
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5926              		.loc 1 3228 0
 5927 0174 A368     		ldr	r3, [r4, #8]
 5928 0176 C3F30802 		ubfx	r2, r3, #0, #9
 5929 017a 1AB1     		cbz	r2, .L593
3228:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_TINY
 5930              		.loc 1 3228 0 is_stmt 0 discriminator 1
 5931 017c A269     		ldr	r2, [r4, #24]
 5932 017e 9542     		cmp	r5, r2
 5933 0180 00D0     		beq	.L593
3240:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5934              		.loc 1 3240 0 is_stmt 1
 5935 0182 A561     		str	r5, [r4, #24]
 5936              	.L593:
3243:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;
 5937              		.loc 1 3243 0
 5938 0184 E268     		ldr	r2, [r4, #12]
 5939 0186 9342     		cmp	r3, r2
 5940 0188 7FF652AF 		bls	.L574
3244:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 5941              		.loc 1 3244 0
 5942 018c E360     		str	r3, [r4, #12]
3245:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 5943              		.loc 1 3245 0
 5944 018e A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 5945 0190 43F02003 		orr	r3, r3, #32
 5946 0194 A371     		strb	r3, [r4, #6]
 5947 0196 4BE7     		b	.L574
 5948              	.LVL864:
 5949              	.L608:
3195:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 1) ABORT(fp->fs, FR_INT_ERR);
 5950              		.loc 1 3195 0
 5951 0198 0021     		movs	r1, #0
 5952 019a FFF7FEFF 		bl	create_chain
 5953              	.LVL865:
 5954 019e 0346     		mov	r3, r0
 5955              	.LVL866:
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5956              		.loc 1 3196 0
ARM GAS  /tmp/cckAXl85.s 			page 197


 5957 01a0 0128     		cmp	r0, #1
 5958 01a2 04D0     		beq	.L609
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
 5959              		.loc 1 3197 0
 5960 01a4 B0F1FF3F 		cmp	r0, #-1
 5961 01a8 08D0     		beq	.L610
3198:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 5962              		.loc 1 3198 0
 5963 01aa 2061     		str	r0, [r4, #16]
 5964 01ac DDE7     		b	.L581
 5965              	.L609:
3196:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5966              		.loc 1 3196 0 discriminator 1
 5967 01ae 0226     		movs	r6, #2
 5968 01b0 E671     		strb	r6, [r4, #7]
 5969 01b2 3146     		mov	r1, r6
 5970 01b4 2068     		ldr	r0, [r4]
 5971              	.LVL867:
 5972 01b6 FFF7FEFF 		bl	unlock_fs
 5973              	.LVL868:
 5974 01ba 3DE7     		b	.L564
 5975              	.LVL869:
 5976              	.L610:
3197:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->sclust = clst;
 5977              		.loc 1 3197 0 discriminator 1
 5978 01bc 0126     		movs	r6, #1
 5979 01be E671     		strb	r6, [r4, #7]
 5980 01c0 3146     		mov	r1, r6
 5981 01c2 2068     		ldr	r0, [r4]
 5982              	.LVL870:
 5983 01c4 FFF7FEFF 		bl	unlock_fs
 5984              	.LVL871:
 5985 01c8 36E7     		b	.L564
 5986              	.LVL872:
 5987              	.L585:
3213:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst == 0xFFFFFFFF) ABORT(fp->fs, FR_DISK_ERR);
 5988              		.loc 1 3213 0
 5989 01ca 2946     		mov	r1, r5
 5990 01cc 2068     		ldr	r0, [r4]
 5991 01ce FFF7FEFF 		bl	get_fat
 5992              	.LVL873:
 5993 01d2 0546     		mov	r5, r0
 5994              	.LVL874:
 5995              	.L587:
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 5996              		.loc 1 3214 0
 5997 01d4 B5F1FF3F 		cmp	r5, #-1
 5998 01d8 2AD0     		beq	.L611
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 5999              		.loc 1 3215 0
 6000 01da 012D     		cmp	r5, #1
 6001 01dc 2FD9     		bls	.L589
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6002              		.loc 1 3215 0 is_stmt 0 discriminator 2
 6003 01de 2368     		ldr	r3, [r4]
 6004 01e0 D3F81832 		ldr	r3, [r3, #536]
 6005 01e4 9D42     		cmp	r5, r3
ARM GAS  /tmp/cckAXl85.s 			page 198


 6006 01e6 2AD2     		bcs	.L589
3216:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->fptr += bcs;
 6007              		.loc 1 3216 0 is_stmt 1
 6008 01e8 6561     		str	r5, [r4, #20]
3217:Middlewares/Third_Party/FatFs/src/ff.c **** 					ofs -= bcs;
 6009              		.loc 1 3217 0
 6010 01ea A368     		ldr	r3, [r4, #8]
 6011 01ec 4344     		add	r3, r3, r8
 6012 01ee A360     		str	r3, [r4, #8]
3218:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6013              		.loc 1 3218 0
 6014 01f0 A7EB0807 		sub	r7, r7, r8
 6015              	.LVL875:
 6016              	.L584:
3204:Middlewares/Third_Party/FatFs/src/ff.c **** #if !_FS_READONLY
 6017              		.loc 1 3204 0
 6018 01f4 4745     		cmp	r7, r8
 6019 01f6 0BD9     		bls	.L586
3206:Middlewares/Third_Party/FatFs/src/ff.c **** 						clst = create_chain(fp->fs, clst);	/* Force stretch if in write mode */
 6020              		.loc 1 3206 0
 6021 01f8 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 6022 01fa 13F0020F 		tst	r3, #2
 6023 01fe E4D0     		beq	.L585
3207:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (clst == 0) {				/* When disk gets full, clip file size */
 6024              		.loc 1 3207 0
 6025 0200 2946     		mov	r1, r5
 6026 0202 2068     		ldr	r0, [r4]
 6027 0204 FFF7FEFF 		bl	create_chain
 6028              	.LVL876:
3208:Middlewares/Third_Party/FatFs/src/ff.c **** 							ofs = bcs; break;
 6029              		.loc 1 3208 0
 6030 0208 0546     		mov	r5, r0
 6031 020a 0028     		cmp	r0, #0
 6032 020c E2D1     		bne	.L587
3209:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 6033              		.loc 1 3209 0
 6034 020e 4746     		mov	r7, r8
 6035              	.LVL877:
 6036              	.L586:
3220:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ofs % SS(fp->fs)) {
 6037              		.loc 1 3220 0
 6038 0210 A368     		ldr	r3, [r4, #8]
 6039 0212 3B44     		add	r3, r3, r7
 6040 0214 A360     		str	r3, [r4, #8]
3221:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect = clust2sect(fp->fs, clst);	/* Current sector */
 6041              		.loc 1 3221 0
 6042 0216 C7F30803 		ubfx	r3, r7, #0, #9
 6043 021a F3B1     		cbz	r3, .L599
3222:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (!nsect) ABORT(fp->fs, FR_INT_ERR);
 6044              		.loc 1 3222 0
 6045 021c D4F80080 		ldr	r8, [r4]
 6046              	.LVL878:
 6047 0220 2946     		mov	r1, r5
 6048 0222 4046     		mov	r0, r8
 6049 0224 FFF7FEFF 		bl	clust2sect
 6050              	.LVL879:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
ARM GAS  /tmp/cckAXl85.s 			page 199


 6051              		.loc 1 3223 0
 6052 0228 80B1     		cbz	r0, .L612
3224:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6053              		.loc 1 3224 0
 6054 022a 00EB5725 		add	r5, r0, r7, lsr #9
 6055              	.LVL880:
 6056 022e A1E7     		b	.L578
 6057              	.LVL881:
 6058              	.L611:
3214:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (clst <= 1 || clst >= fp->fs->n_fatent) ABORT(fp->fs, FR_INT_ERR);
 6059              		.loc 1 3214 0 discriminator 1
 6060 0230 0126     		movs	r6, #1
 6061 0232 E671     		strb	r6, [r4, #7]
 6062 0234 3146     		mov	r1, r6
 6063 0236 2068     		ldr	r0, [r4]
 6064              	.LVL882:
 6065 0238 FFF7FEFF 		bl	unlock_fs
 6066              	.LVL883:
 6067 023c FCE6     		b	.L564
 6068              	.LVL884:
 6069              	.L589:
3215:Middlewares/Third_Party/FatFs/src/ff.c **** 					fp->clust = clst;
 6070              		.loc 1 3215 0 discriminator 3
 6071 023e 0226     		movs	r6, #2
 6072 0240 E671     		strb	r6, [r4, #7]
 6073 0242 3146     		mov	r1, r6
 6074 0244 2068     		ldr	r0, [r4]
 6075              	.LVL885:
 6076 0246 FFF7FEFF 		bl	unlock_fs
 6077              	.LVL886:
 6078 024a F5E6     		b	.L564
 6079              	.LVL887:
 6080              	.L612:
3223:Middlewares/Third_Party/FatFs/src/ff.c **** 					nsect += ofs / SS(fp->fs);
 6081              		.loc 1 3223 0 discriminator 1
 6082 024c 0226     		movs	r6, #2
 6083 024e E671     		strb	r6, [r4, #7]
 6084 0250 3146     		mov	r1, r6
 6085 0252 4046     		mov	r0, r8
 6086              	.LVL888:
 6087 0254 FFF7FEFF 		bl	unlock_fs
 6088              	.LVL889:
 6089 0258 EEE6     		b	.L564
 6090              	.LVL890:
 6091              	.L599:
3183:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (ofs) {
 6092              		.loc 1 3183 0
 6093 025a 0025     		movs	r5, #0
 6094              	.LVL891:
 6095 025c 8AE7     		b	.L578
 6096              	.LVL892:
 6097              	.L596:
3144:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6098              		.loc 1 3144 0
 6099 025e 1126     		movs	r6, #17
 6100 0260 E6E6     		b	.L574
 6101              		.cfi_endproc
ARM GAS  /tmp/cckAXl85.s 			page 200


 6102              	.LFE111:
 6104              		.section	.text.f_opendir,"ax",%progbits
 6105              		.align	1
 6106              		.global	f_opendir
 6107              		.syntax unified
 6108              		.thumb
 6109              		.thumb_func
 6110              		.fpu softvfp
 6112              	f_opendir:
 6113              	.LFB112:
3264:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6114              		.loc 1 3264 0
 6115              		.cfi_startproc
 6116              		@ args = 0, pretend = 0, frame = 24
 6117              		@ frame_needed = 0, uses_anonymous_args = 0
 6118              	.LVL893:
 6119 0000 30B5     		push	{r4, r5, lr}
 6120              	.LCFI73:
 6121              		.cfi_def_cfa_offset 12
 6122              		.cfi_offset 4, -12
 6123              		.cfi_offset 5, -8
 6124              		.cfi_offset 14, -4
 6125 0002 87B0     		sub	sp, sp, #28
 6126              	.LCFI74:
 6127              		.cfi_def_cfa_offset 40
 6128 0004 0191     		str	r1, [sp, #4]
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6129              		.loc 1 3270 0
 6130 0006 0028     		cmp	r0, #0
 6131 0008 45D0     		beq	.L620
 6132 000a 0546     		mov	r5, r0
3273:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6133              		.loc 1 3273 0
 6134 000c 0022     		movs	r2, #0
 6135 000e 01A9     		add	r1, sp, #4
 6136              	.LVL894:
 6137 0010 05A8     		add	r0, sp, #20
 6138              	.LVL895:
 6139 0012 FFF7FEFF 		bl	find_volume
 6140              	.LVL896:
3274:Middlewares/Third_Party/FatFs/src/ff.c **** 		dp->fs = fs;
 6141              		.loc 1 3274 0
 6142 0016 0446     		mov	r4, r0
 6143 0018 48B1     		cbz	r0, .L625
 6144              	.LVL897:
 6145              	.L615:
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6146              		.loc 1 3304 0
 6147 001a 0CB1     		cbz	r4, .L619
3304:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6148              		.loc 1 3304 0 is_stmt 0 discriminator 1
 6149 001c 0023     		movs	r3, #0
 6150 001e 2B60     		str	r3, [r5]
 6151              	.L619:
3306:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6152              		.loc 1 3306 0 is_stmt 1
 6153 0020 2146     		mov	r1, r4
ARM GAS  /tmp/cckAXl85.s 			page 201


 6154 0022 0598     		ldr	r0, [sp, #20]
 6155 0024 FFF7FEFF 		bl	unlock_fs
 6156              	.LVL898:
 6157              	.L614:
3307:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6158              		.loc 1 3307 0
 6159 0028 2046     		mov	r0, r4
 6160 002a 07B0     		add	sp, sp, #28
 6161              	.LCFI75:
 6162              		.cfi_remember_state
 6163              		.cfi_def_cfa_offset 12
 6164              		@ sp needed
 6165 002c 30BD     		pop	{r4, r5, pc}
 6166              	.LVL899:
 6167              	.L625:
 6168              	.LCFI76:
 6169              		.cfi_restore_state
3275:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(*dp);
 6170              		.loc 1 3275 0
 6171 002e 059B     		ldr	r3, [sp, #20]
 6172 0030 2B60     		str	r3, [r5]
3276:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(dp, path);			/* Follow the path to the directory */
 6173              		.loc 1 3276 0
 6174 0032 02AB     		add	r3, sp, #8
 6175 0034 AB61     		str	r3, [r5, #24]
3277:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 6176              		.loc 1 3277 0
 6177 0036 0199     		ldr	r1, [sp, #4]
 6178 0038 2846     		mov	r0, r5
 6179              	.LVL900:
 6180 003a FFF7FEFF 		bl	follow_path
 6181              	.LVL901:
3279:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dp->dir) {						/* It is not the origin directory itself */
 6182              		.loc 1 3279 0
 6183 003e 0446     		mov	r4, r0
 6184 0040 60B9     		cbnz	r0, .L616
3280:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dp->dir[DIR_Attr] & AM_DIR)	/* The object is a sub directory */
 6185              		.loc 1 3280 0
 6186 0042 6969     		ldr	r1, [r5, #20]
 6187 0044 49B1     		cbz	r1, .L617
3281:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sclust = ld_clust(fs, dp->dir);
 6188              		.loc 1 3281 0
 6189 0046 CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 6190 0048 13F0100F 		tst	r3, #16
 6191 004c 04D0     		beq	.L621
3282:Middlewares/Third_Party/FatFs/src/ff.c **** 				else							/* The object is a file */
 6192              		.loc 1 3282 0
 6193 004e 0598     		ldr	r0, [sp, #20]
 6194              	.LVL902:
 6195 0050 FFF7FEFF 		bl	ld_clust
 6196              	.LVL903:
 6197 0054 A860     		str	r0, [r5, #8]
 6198 0056 00E0     		b	.L617
 6199              	.LVL904:
 6200              	.L621:
3284:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6201              		.loc 1 3284 0
ARM GAS  /tmp/cckAXl85.s 			page 202


 6202 0058 0524     		movs	r4, #5
 6203              	.LVL905:
 6204              	.L617:
3286:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->id = fs->id;
 6205              		.loc 1 3286 0
 6206 005a 1CB1     		cbz	r4, .L626
 6207              	.LVL906:
 6208              	.L616:
3302:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6209              		.loc 1 3302 0
 6210 005c 042C     		cmp	r4, #4
 6211 005e DCD1     		bne	.L615
 6212 0060 0524     		movs	r4, #5
 6213              	.LVL907:
 6214 0062 DAE7     		b	.L615
 6215              	.LVL908:
 6216              	.L626:
3287:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_sdi(dp, 0);			/* Rewind directory */
 6217              		.loc 1 3287 0
 6218 0064 059B     		ldr	r3, [sp, #20]
 6219 0066 B3F80632 		ldrh	r3, [r3, #518]
 6220 006a AB80     		strh	r3, [r5, #4]	@ movhi
3288:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_LOCK
 6221              		.loc 1 3288 0
 6222 006c 0021     		movs	r1, #0
 6223 006e 2846     		mov	r0, r5
 6224 0070 FFF7FEFF 		bl	dir_sdi
 6225              	.LVL909:
3290:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (dp->sclust) {
 6226              		.loc 1 3290 0
 6227 0074 0446     		mov	r4, r0
 6228 0076 0028     		cmp	r0, #0
 6229 0078 F0D1     		bne	.L616
3291:Middlewares/Third_Party/FatFs/src/ff.c **** 						dp->lockid = inc_lock(dp, 0);	/* Lock the sub directory */
 6230              		.loc 1 3291 0
 6231 007a AB68     		ldr	r3, [r5, #8]
 6232 007c 13B9     		cbnz	r3, .L627
3296:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6233              		.loc 1 3296 0
 6234 007e 0023     		movs	r3, #0
 6235 0080 EB61     		str	r3, [r5, #28]
 6236 0082 EBE7     		b	.L616
 6237              	.L627:
3292:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (!dp->lockid)
 6238              		.loc 1 3292 0
 6239 0084 0021     		movs	r1, #0
 6240 0086 2846     		mov	r0, r5
 6241              	.LVL910:
 6242 0088 FFF7FEFF 		bl	inc_lock
 6243              	.LVL911:
 6244 008c E861     		str	r0, [r5, #28]
3293:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = FR_TOO_MANY_OPEN_FILES;
 6245              		.loc 1 3293 0
 6246 008e 0028     		cmp	r0, #0
 6247 0090 E4D1     		bne	.L616
3294:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6248              		.loc 1 3294 0
ARM GAS  /tmp/cckAXl85.s 			page 203


 6249 0092 1224     		movs	r4, #18
 6250 0094 E2E7     		b	.L616
 6251              	.LVL912:
 6252              	.L620:
3270:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6253              		.loc 1 3270 0
 6254 0096 0924     		movs	r4, #9
 6255 0098 C6E7     		b	.L614
 6256              		.cfi_endproc
 6257              	.LFE112:
 6259              		.section	.text.f_closedir,"ax",%progbits
 6260              		.align	1
 6261              		.global	f_closedir
 6262              		.syntax unified
 6263              		.thumb
 6264              		.thumb_func
 6265              		.fpu softvfp
 6267              	f_closedir:
 6268              	.LFB113:
3319:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6269              		.loc 1 3319 0
 6270              		.cfi_startproc
 6271              		@ args = 0, pretend = 0, frame = 0
 6272              		@ frame_needed = 0, uses_anonymous_args = 0
 6273              	.LVL913:
 6274 0000 70B5     		push	{r4, r5, r6, lr}
 6275              	.LCFI77:
 6276              		.cfi_def_cfa_offset 16
 6277              		.cfi_offset 4, -16
 6278              		.cfi_offset 5, -12
 6279              		.cfi_offset 6, -8
 6280              		.cfi_offset 14, -4
 6281 0002 0546     		mov	r5, r0
3323:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6282              		.loc 1 3323 0
 6283 0004 FFF7FEFF 		bl	validate
 6284              	.LVL914:
3324:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
 6285              		.loc 1 3324 0
 6286 0008 0446     		mov	r4, r0
 6287 000a 48B9     		cbnz	r0, .L629
 6288              	.LBB3:
3326:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6289              		.loc 1 3326 0
 6290 000c 2E68     		ldr	r6, [r5]
 6291              	.LVL915:
3329:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dec_lock(dp->lockid);
 6292              		.loc 1 3329 0
 6293 000e E869     		ldr	r0, [r5, #28]
 6294              	.LVL916:
 6295 0010 40B9     		cbnz	r0, .L633
 6296              	.L630:
 6297              	.LVL917:
3331:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6298              		.loc 1 3331 0
 6299 0012 0CB9     		cbnz	r4, .L631
3333:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_REENTRANT
ARM GAS  /tmp/cckAXl85.s 			page 204


 6300              		.loc 1 3333 0
 6301 0014 0023     		movs	r3, #0
 6302 0016 2B60     		str	r3, [r5]
 6303              	.L631:
3335:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6304              		.loc 1 3335 0
 6305 0018 0021     		movs	r1, #0
 6306 001a 3046     		mov	r0, r6
 6307 001c FFF7FEFF 		bl	unlock_fs
 6308              	.LVL918:
 6309              	.L629:
 6310              	.LBE3:
3339:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6311              		.loc 1 3339 0
 6312 0020 2046     		mov	r0, r4
 6313 0022 70BD     		pop	{r4, r5, r6, pc}
 6314              	.LVL919:
 6315              	.L633:
 6316              	.LBB4:
3330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK)
 6317              		.loc 1 3330 0
 6318 0024 FFF7FEFF 		bl	dec_lock
 6319              	.LVL920:
 6320 0028 0446     		mov	r4, r0
 6321              	.LVL921:
 6322 002a F2E7     		b	.L630
 6323              	.LBE4:
 6324              		.cfi_endproc
 6325              	.LFE113:
 6327              		.section	.text.f_readdir,"ax",%progbits
 6328              		.align	1
 6329              		.global	f_readdir
 6330              		.syntax unified
 6331              		.thumb
 6332              		.thumb_func
 6333              		.fpu softvfp
 6335              	f_readdir:
 6336              	.LFB114:
3352:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6337              		.loc 1 3352 0
 6338              		.cfi_startproc
 6339              		@ args = 0, pretend = 0, frame = 16
 6340              		@ frame_needed = 0, uses_anonymous_args = 0
 6341              	.LVL922:
 6342 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6343              	.LCFI78:
 6344              		.cfi_def_cfa_offset 20
 6345              		.cfi_offset 4, -20
 6346              		.cfi_offset 5, -16
 6347              		.cfi_offset 6, -12
 6348              		.cfi_offset 7, -8
 6349              		.cfi_offset 14, -4
 6350 0002 85B0     		sub	sp, sp, #20
 6351              	.LCFI79:
 6352              		.cfi_def_cfa_offset 40
 6353 0004 0546     		mov	r5, r0
 6354 0006 0F46     		mov	r7, r1
ARM GAS  /tmp/cckAXl85.s 			page 205


3357:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6355              		.loc 1 3357 0
 6356 0008 FFF7FEFF 		bl	validate
 6357              	.LVL923:
3358:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!fno) {
 6358              		.loc 1 3358 0
 6359 000c 0446     		mov	r4, r0
 6360 000e 58B9     		cbnz	r0, .L635
3359:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_sdi(dp, 0);			/* Rewind the directory object */
 6361              		.loc 1 3359 0
 6362 0010 8FB1     		cbz	r7, .L640
3362:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = dir_read(dp, 0);			/* Read an item */
 6363              		.loc 1 3362 0
 6364 0012 01AB     		add	r3, sp, #4
 6365 0014 AB61     		str	r3, [r5, #24]
3363:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_NO_FILE) {		/* Reached end of directory */
 6366              		.loc 1 3363 0
 6367 0016 0021     		movs	r1, #0
 6368 0018 2846     		mov	r0, r5
 6369              	.LVL924:
 6370 001a FFF7FEFF 		bl	dir_read
 6371              	.LVL925:
 6372 001e 0646     		mov	r6, r0
 6373              	.LVL926:
3364:Middlewares/Third_Party/FatFs/src/ff.c **** 				dp->sect = 0;
 6374              		.loc 1 3364 0
 6375 0020 0428     		cmp	r0, #4
 6376 0022 0ED0     		beq	.L641
 6377              	.LVL927:
 6378              	.L637:
3368:Middlewares/Third_Party/FatFs/src/ff.c **** 				get_fileinfo(dp, fno);		/* Get the object information */
 6379              		.loc 1 3368 0
 6380 0024 8EB1     		cbz	r6, .L642
 6381 0026 3446     		mov	r4, r6
 6382              	.LVL928:
 6383              	.L635:
3380:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6384              		.loc 1 3380 0
 6385 0028 2146     		mov	r1, r4
 6386 002a 2868     		ldr	r0, [r5]
 6387 002c FFF7FEFF 		bl	unlock_fs
 6388              	.LVL929:
3381:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6389              		.loc 1 3381 0
 6390 0030 2046     		mov	r0, r4
 6391 0032 05B0     		add	sp, sp, #20
 6392              	.LCFI80:
 6393              		.cfi_remember_state
 6394              		.cfi_def_cfa_offset 20
 6395              		@ sp needed
 6396 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 6397              	.LVL930:
 6398              	.L640:
 6399              	.LCFI81:
 6400              		.cfi_restore_state
3360:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6401              		.loc 1 3360 0
ARM GAS  /tmp/cckAXl85.s 			page 206


 6402 0036 0021     		movs	r1, #0
 6403 0038 2846     		mov	r0, r5
 6404              	.LVL931:
 6405 003a FFF7FEFF 		bl	dir_sdi
 6406              	.LVL932:
 6407 003e 0446     		mov	r4, r0
 6408              	.LVL933:
 6409 0040 F2E7     		b	.L635
 6410              	.LVL934:
 6411              	.L641:
3365:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 6412              		.loc 1 3365 0
 6413 0042 0023     		movs	r3, #0
 6414 0044 2B61     		str	r3, [r5, #16]
 6415              	.LVL935:
3366:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6416              		.loc 1 3366 0
 6417 0046 2646     		mov	r6, r4
 6418 0048 ECE7     		b	.L637
 6419              	.LVL936:
 6420              	.L642:
3369:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_next(dp, 0);		/* Increment index for next */
 6421              		.loc 1 3369 0
 6422 004a 3946     		mov	r1, r7
 6423 004c 2846     		mov	r0, r5
 6424 004e FFF7FEFF 		bl	get_fileinfo
 6425              	.LVL937:
3370:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) {
 6426              		.loc 1 3370 0
 6427 0052 0021     		movs	r1, #0
 6428 0054 2846     		mov	r0, r5
 6429 0056 FFF7FEFF 		bl	dir_next
 6430              	.LVL938:
 6431 005a 0446     		mov	r4, r0
 6432              	.LVL939:
3371:Middlewares/Third_Party/FatFs/src/ff.c **** 					dp->sect = 0;
 6433              		.loc 1 3371 0
 6434 005c 0428     		cmp	r0, #4
 6435 005e E3D1     		bne	.L635
3372:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_OK;
 6436              		.loc 1 3372 0
 6437 0060 0023     		movs	r3, #0
 6438 0062 2B61     		str	r3, [r5, #16]
 6439              	.LVL940:
3373:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6440              		.loc 1 3373 0
 6441 0064 3446     		mov	r4, r6
 6442 0066 DFE7     		b	.L635
 6443              		.cfi_endproc
 6444              	.LFE114:
 6446              		.section	.text.f_stat,"ax",%progbits
 6447              		.align	1
 6448              		.global	f_stat
 6449              		.syntax unified
 6450              		.thumb
 6451              		.thumb_func
 6452              		.fpu softvfp
ARM GAS  /tmp/cckAXl85.s 			page 207


 6454              	f_stat:
 6455              	.LFB115:
3446:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6456              		.loc 1 3446 0
 6457              		.cfi_startproc
 6458              		@ args = 0, pretend = 0, frame = 56
 6459              		@ frame_needed = 0, uses_anonymous_args = 0
 6460              	.LVL941:
 6461 0000 30B5     		push	{r4, r5, lr}
 6462              	.LCFI82:
 6463              		.cfi_def_cfa_offset 12
 6464              		.cfi_offset 4, -12
 6465              		.cfi_offset 5, -8
 6466              		.cfi_offset 14, -4
 6467 0002 8FB0     		sub	sp, sp, #60
 6468              	.LCFI83:
 6469              		.cfi_def_cfa_offset 72
 6470 0004 0EAB     		add	r3, sp, #56
 6471 0006 43F8340D 		str	r0, [r3, #-52]!
 6472 000a 0D46     		mov	r5, r1
3453:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6473              		.loc 1 3453 0
 6474 000c 0022     		movs	r2, #0
 6475 000e 1946     		mov	r1, r3
 6476              	.LVL942:
 6477 0010 06A8     		add	r0, sp, #24
 6478              	.LVL943:
 6479 0012 FFF7FEFF 		bl	find_volume
 6480              	.LVL944:
3454:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6481              		.loc 1 3454 0
 6482 0016 0446     		mov	r4, r0
 6483 0018 30B1     		cbz	r0, .L647
 6484              	.LVL945:
 6485              	.L644:
3467:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6486              		.loc 1 3467 0
 6487 001a 2146     		mov	r1, r4
 6488 001c 0698     		ldr	r0, [sp, #24]
 6489 001e FFF7FEFF 		bl	unlock_fs
 6490              	.LVL946:
3468:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6491              		.loc 1 3468 0
 6492 0022 2046     		mov	r0, r4
 6493 0024 0FB0     		add	sp, sp, #60
 6494              	.LCFI84:
 6495              		.cfi_remember_state
 6496              		.cfi_def_cfa_offset 12
 6497              		@ sp needed
 6498 0026 30BD     		pop	{r4, r5, pc}
 6499              	.LVL947:
 6500              	.L647:
 6501              	.LCFI85:
 6502              		.cfi_restore_state
3455:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 6503              		.loc 1 3455 0
 6504 0028 03AB     		add	r3, sp, #12
ARM GAS  /tmp/cckAXl85.s 			page 208


 6505 002a 0C93     		str	r3, [sp, #48]
3456:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) {				/* Follow completed */
 6506              		.loc 1 3456 0
 6507 002c 0199     		ldr	r1, [sp, #4]
 6508 002e 06A8     		add	r0, sp, #24
 6509              	.LVL948:
 6510 0030 FFF7FEFF 		bl	follow_path
 6511              	.LVL949:
3457:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dj.dir) {		/* Found an object */
 6512              		.loc 1 3457 0
 6513 0034 0446     		mov	r4, r0
 6514 0036 0028     		cmp	r0, #0
 6515 0038 EFD1     		bne	.L644
3458:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (fno) get_fileinfo(&dj, fno);
 6516              		.loc 1 3458 0
 6517 003a 0B9B     		ldr	r3, [sp, #44]
 6518 003c 33B1     		cbz	r3, .L645
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 6519              		.loc 1 3459 0
 6520 003e 002D     		cmp	r5, #0
 6521 0040 EBD0     		beq	.L644
3459:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {			/* It is root directory */
 6522              		.loc 1 3459 0 is_stmt 0 discriminator 1
 6523 0042 2946     		mov	r1, r5
 6524 0044 06A8     		add	r0, sp, #24
 6525              	.LVL950:
 6526 0046 FFF7FEFF 		bl	get_fileinfo
 6527              	.LVL951:
 6528 004a E6E7     		b	.L644
 6529              	.LVL952:
 6530              	.L645:
3461:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6531              		.loc 1 3461 0 is_stmt 1
 6532 004c 0624     		movs	r4, #6
 6533 004e E4E7     		b	.L644
 6534              		.cfi_endproc
 6535              	.LFE115:
 6537              		.section	.text.f_getfree,"ax",%progbits
 6538              		.align	1
 6539              		.global	f_getfree
 6540              		.syntax unified
 6541              		.thumb
 6542              		.thumb_func
 6543              		.fpu softvfp
 6545              	f_getfree:
 6546              	.LFB116:
3482:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6547              		.loc 1 3482 0
 6548              		.cfi_startproc
 6549              		@ args = 0, pretend = 0, frame = 8
 6550              		@ frame_needed = 0, uses_anonymous_args = 0
 6551              	.LVL953:
 6552 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 6553              	.LCFI86:
 6554              		.cfi_def_cfa_offset 32
 6555              		.cfi_offset 4, -32
 6556              		.cfi_offset 5, -28
ARM GAS  /tmp/cckAXl85.s 			page 209


 6557              		.cfi_offset 6, -24
 6558              		.cfi_offset 7, -20
 6559              		.cfi_offset 8, -16
 6560              		.cfi_offset 9, -12
 6561              		.cfi_offset 10, -8
 6562              		.cfi_offset 14, -4
 6563 0004 82B0     		sub	sp, sp, #8
 6564              	.LCFI87:
 6565              		.cfi_def_cfa_offset 40
 6566 0006 02AB     		add	r3, sp, #8
 6567 0008 43F8040D 		str	r0, [r3, #-4]!
 6568 000c 8946     		mov	r9, r1
 6569 000e 1446     		mov	r4, r2
3491:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = *fatfs;
 6570              		.loc 1 3491 0
 6571 0010 0022     		movs	r2, #0
 6572              	.LVL954:
 6573 0012 1946     		mov	r1, r3
 6574              	.LVL955:
 6575 0014 2046     		mov	r0, r4
 6576              	.LVL956:
 6577 0016 FFF7FEFF 		bl	find_volume
 6578              	.LVL957:
3492:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6579              		.loc 1 3492 0
 6580 001a 2568     		ldr	r5, [r4]
 6581              	.LVL958:
3493:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* If free_clust is valid, return it without full cluster scan */
 6582              		.loc 1 3493 0
 6583 001c 8046     		mov	r8, r0
 6584 001e 0028     		cmp	r0, #0
 6585 0020 66D1     		bne	.L649
3495:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = fs->free_clust;
 6586              		.loc 1 3495 0
 6587 0022 D5F81432 		ldr	r3, [r5, #532]
 6588 0026 D5F81842 		ldr	r4, [r5, #536]
 6589              	.LVL959:
 6590 002a A21E     		subs	r2, r4, #2
 6591 002c 9342     		cmp	r3, r2
 6592 002e 09D9     		bls	.L664
3499:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = 0;
 6593              		.loc 1 3499 0
 6594 0030 95F80072 		ldrb	r7, [r5, #512]	@ zero_extendqisi2
 6595              	.LVL960:
3501:Middlewares/Third_Party/FatFs/src/ff.c **** 				clst = 2;
 6596              		.loc 1 3501 0
 6597 0034 012F     		cmp	r7, #1
 6598 0036 08D0     		beq	.L665
 6599              	.LVL961:
3511:Middlewares/Third_Party/FatFs/src/ff.c **** 				i = 0; p = 0;
 6600              		.loc 1 3511 0
 6601 0038 D5F82412 		ldr	r1, [r5, #548]
 6602              	.LVL962:
3512:Middlewares/Third_Party/FatFs/src/ff.c **** 				do {
 6603              		.loc 1 3512 0
 6604 003c 0022     		movs	r2, #0
 6605 003e 1046     		mov	r0, r2
ARM GAS  /tmp/cckAXl85.s 			page 210


 6606              	.LVL963:
3500:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fat == FS_FAT12) {
 6607              		.loc 1 3500 0
 6608 0040 1646     		mov	r6, r2
 6609 0042 32E0     		b	.L660
 6610              	.LVL964:
 6611              	.L664:
3496:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6612              		.loc 1 3496 0
 6613 0044 C9F80030 		str	r3, [r9]
 6614 0048 52E0     		b	.L649
 6615              	.LVL965:
 6616              	.L665:
 6617 004a 0224     		movs	r4, #2
 6618 004c 0026     		movs	r6, #0
 6619 004e 04E0     		b	.L654
 6620              	.LVL966:
 6621              	.L653:
3508:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 6622              		.loc 1 3508 0
 6623 0050 0134     		adds	r4, r4, #1
 6624              	.LVL967:
 6625 0052 D5F81832 		ldr	r3, [r5, #536]
 6626 0056 9C42     		cmp	r4, r3
 6627 0058 40D2     		bcs	.L652
 6628              	.LVL968:
 6629              	.L654:
3504:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
 6630              		.loc 1 3504 0
 6631 005a 2146     		mov	r1, r4
 6632 005c 2846     		mov	r0, r5
 6633 005e FFF7FEFF 		bl	get_fat
 6634              	.LVL969:
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6635              		.loc 1 3505 0
 6636 0062 B0F1FF3F 		cmp	r0, #-1
 6637 0066 37D0     		beq	.L661
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 6638              		.loc 1 3506 0
 6639 0068 0128     		cmp	r0, #1
 6640 006a 49D0     		beq	.L662
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6641              		.loc 1 3507 0
 6642 006c 0028     		cmp	r0, #0
 6643 006e EFD1     		bne	.L653
3507:Middlewares/Third_Party/FatFs/src/ff.c **** 				} while (++clst < fs->n_fatent);
 6644              		.loc 1 3507 0 is_stmt 0 discriminator 1
 6645 0070 0136     		adds	r6, r6, #1
 6646              	.LVL970:
 6647 0072 EDE7     		b	.L653
 6648              	.LVL971:
 6649              	.L666:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 6650              		.loc 1 3515 0 is_stmt 1
 6651 0074 01F1010A 		add	r10, r1, #1
 6652              	.LVL972:
 6653 0078 2846     		mov	r0, r5
ARM GAS  /tmp/cckAXl85.s 			page 211


 6654              	.LVL973:
 6655 007a FFF7FEFF 		bl	move_window
 6656              	.LVL974:
3516:Middlewares/Third_Party/FatFs/src/ff.c **** 						p = fs->win.d8;
 6657              		.loc 1 3516 0
 6658 007e 8046     		mov	r8, r0
 6659 0080 60BB     		cbnz	r0, .L652
3517:Middlewares/Third_Party/FatFs/src/ff.c **** 						i = SS(fs);
 6660              		.loc 1 3517 0
 6661 0082 2A46     		mov	r2, r5
 6662              	.LVL975:
3515:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res != FR_OK) break;
 6663              		.loc 1 3515 0
 6664 0084 5146     		mov	r1, r10
3518:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6665              		.loc 1 3518 0
 6666 0086 4FF40070 		mov	r0, #512
 6667              	.LVL976:
 6668 008a 10E0     		b	.L655
 6669              	.LVL977:
 6670              	.L667:
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
 6671              		.loc 1 3521 0
 6672 008c 92F801E0 		ldrb	lr, [r2, #1]	@ zero_extendqisi2
 6673 0090 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 6674 0092 43EA0E23 		orr	r3, r3, lr, lsl #8
 6675 0096 1BB2     		sxth	r3, r3
 6676 0098 03B9     		cbnz	r3, .L657
3521:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 2; i -= 2;
 6677              		.loc 1 3521 0 is_stmt 0 discriminator 1
 6678 009a 0136     		adds	r6, r6, #1
 6679              	.LVL978:
 6680              	.L657:
3522:Middlewares/Third_Party/FatFs/src/ff.c **** 					} else {
 6681              		.loc 1 3522 0 is_stmt 1
 6682 009c 0232     		adds	r2, r2, #2
 6683              	.LVL979:
 6684 009e 0238     		subs	r0, r0, #2
 6685              	.LVL980:
 6686 00a0 01E0     		b	.L658
 6687              	.L659:
3525:Middlewares/Third_Party/FatFs/src/ff.c **** 					}
 6688              		.loc 1 3525 0
 6689 00a2 0432     		adds	r2, r2, #4
 6690              	.LVL981:
 6691 00a4 0438     		subs	r0, r0, #4
 6692              	.LVL982:
 6693              	.L658:
3527:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 6694              		.loc 1 3527 0
 6695 00a6 013C     		subs	r4, r4, #1
 6696              	.LVL983:
 6697 00a8 18D0     		beq	.L652
 6698              	.LVL984:
 6699              	.L660:
3514:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = move_window(fs, sect++);
 6700              		.loc 1 3514 0
ARM GAS  /tmp/cckAXl85.s 			page 212


 6701 00aa 0028     		cmp	r0, #0
 6702 00ac E2D0     		beq	.L666
 6703              	.LVL985:
 6704              	.L655:
3520:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (LD_WORD(p) == 0) n++;
 6705              		.loc 1 3520 0
 6706 00ae 022F     		cmp	r7, #2
 6707 00b0 ECD0     		beq	.L667
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
 6708              		.loc 1 3524 0
 6709 00b2 92F803E0 		ldrb	lr, [r2, #3]	@ zero_extendqisi2
 6710 00b6 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 6711 00b8 1B04     		lsls	r3, r3, #16
 6712 00ba 43EA0E63 		orr	r3, r3, lr, lsl #24
 6713 00be 92F801E0 		ldrb	lr, [r2, #1]	@ zero_extendqisi2
 6714 00c2 43EA0E23 		orr	r3, r3, lr, lsl #8
 6715 00c6 92F800E0 		ldrb	lr, [r2]	@ zero_extendqisi2
 6716 00ca 43EA0E03 		orr	r3, r3, lr
 6717 00ce 33F07043 		bics	r3, r3, #-268435456
 6718 00d2 E6D1     		bne	.L659
3524:Middlewares/Third_Party/FatFs/src/ff.c **** 						p += 4; i -= 4;
 6719              		.loc 1 3524 0 is_stmt 0 discriminator 1
 6720 00d4 0136     		adds	r6, r6, #1
 6721              	.LVL986:
 6722 00d6 E4E7     		b	.L659
 6723              	.LVL987:
 6724              	.L661:
3505:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 1) { res = FR_INT_ERR; break; }
 6725              		.loc 1 3505 0 is_stmt 1
 6726 00d8 4FF00108 		mov	r8, #1
 6727              	.LVL988:
 6728              	.L652:
3529:Middlewares/Third_Party/FatFs/src/ff.c **** 			fs->fsi_flag |= 1;
 6729              		.loc 1 3529 0
 6730 00dc C5F81462 		str	r6, [r5, #532]
3530:Middlewares/Third_Party/FatFs/src/ff.c **** 			*nclst = n;
 6731              		.loc 1 3530 0
 6732 00e0 95F80532 		ldrb	r3, [r5, #517]	@ zero_extendqisi2
 6733 00e4 43F00103 		orr	r3, r3, #1
 6734 00e8 85F80532 		strb	r3, [r5, #517]
3531:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6735              		.loc 1 3531 0
 6736 00ec C9F80060 		str	r6, [r9]
 6737              	.LVL989:
 6738              	.L649:
3534:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6739              		.loc 1 3534 0
 6740 00f0 4146     		mov	r1, r8
 6741 00f2 2846     		mov	r0, r5
 6742 00f4 FFF7FEFF 		bl	unlock_fs
 6743              	.LVL990:
3535:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6744              		.loc 1 3535 0
 6745 00f8 4046     		mov	r0, r8
 6746 00fa 02B0     		add	sp, sp, #8
 6747              	.LCFI88:
 6748              		.cfi_remember_state
ARM GAS  /tmp/cckAXl85.s 			page 213


 6749              		.cfi_def_cfa_offset 32
 6750              		@ sp needed
 6751 00fc BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 6752              	.LVL991:
 6753              	.L662:
 6754              	.LCFI89:
 6755              		.cfi_restore_state
3506:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (stat == 0) n++;
 6756              		.loc 1 3506 0
 6757 0100 4FF00208 		mov	r8, #2
 6758 0104 EAE7     		b	.L652
 6759              		.cfi_endproc
 6760              	.LFE116:
 6762              		.section	.text.f_truncate,"ax",%progbits
 6763              		.align	1
 6764              		.global	f_truncate
 6765              		.syntax unified
 6766              		.thumb
 6767              		.thumb_func
 6768              		.fpu softvfp
 6770              	f_truncate:
 6771              	.LFB117:
3547:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6772              		.loc 1 3547 0
 6773              		.cfi_startproc
 6774              		@ args = 0, pretend = 0, frame = 0
 6775              		@ frame_needed = 0, uses_anonymous_args = 0
 6776              	.LVL992:
 6777 0000 70B5     		push	{r4, r5, r6, lr}
 6778              	.LCFI90:
 6779              		.cfi_def_cfa_offset 16
 6780              		.cfi_offset 4, -16
 6781              		.cfi_offset 5, -12
 6782              		.cfi_offset 6, -8
 6783              		.cfi_offset 14, -4
 6784 0002 0446     		mov	r4, r0
3552:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6785              		.loc 1 3552 0
 6786 0004 FFF7FEFF 		bl	validate
 6787              	.LVL993:
3553:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->err) {						/* Check error */
 6788              		.loc 1 3553 0
 6789 0008 0546     		mov	r5, r0
 6790 000a 40B9     		cbnz	r0, .L669
3554:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = (FRESULT)fp->err;
 6791              		.loc 1 3554 0
 6792 000c E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 6793 000e 2BB9     		cbnz	r3, .L675
3557:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_DENIED;
 6794              		.loc 1 3557 0
 6795 0010 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 6796 0012 13F0020F 		tst	r3, #2
 6797 0016 02D1     		bne	.L669
3558:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 6798              		.loc 1 3558 0
 6799 0018 0725     		movs	r5, #7
 6800 001a 00E0     		b	.L669
ARM GAS  /tmp/cckAXl85.s 			page 214


 6801              	.L675:
3555:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 6802              		.loc 1 3555 0
 6803 001c 1D46     		mov	r5, r3
 6804              	.L669:
 6805              	.LVL994:
3561:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fp->fsize > fp->fptr) {
 6806              		.loc 1 3561 0
 6807 001e 95B9     		cbnz	r5, .L670
3562:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->fsize = fp->fptr;	/* Set file size to current R/W point */
 6808              		.loc 1 3562 0
 6809 0020 E268     		ldr	r2, [r4, #12]
 6810 0022 A368     		ldr	r3, [r4, #8]
 6811 0024 9A42     		cmp	r2, r3
 6812 0026 0CD9     		bls	.L671
3563:Middlewares/Third_Party/FatFs/src/ff.c **** 			fp->flag |= FA__WRITTEN;
 6813              		.loc 1 3563 0
 6814 0028 E360     		str	r3, [r4, #12]
3564:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (fp->fptr == 0) {	/* When set file size to zero, remove entire cluster chain */
 6815              		.loc 1 3564 0
 6816 002a A279     		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 6817 002c 42F02002 		orr	r2, r2, #32
 6818 0030 A271     		strb	r2, [r4, #6]
3565:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = remove_chain(fp->fs, fp->sclust);
 6819              		.loc 1 3565 0
 6820 0032 73B9     		cbnz	r3, .L672
3566:Middlewares/Third_Party/FatFs/src/ff.c **** 				fp->sclust = 0;
 6821              		.loc 1 3566 0
 6822 0034 2169     		ldr	r1, [r4, #16]
 6823 0036 2068     		ldr	r0, [r4]
 6824 0038 FFF7FEFF 		bl	remove_chain
 6825              	.LVL995:
 6826 003c 0546     		mov	r5, r0
 6827              	.LVL996:
3567:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {				/* When truncate a part of the file, remove remaining clusters */
 6828              		.loc 1 3567 0
 6829 003e 0023     		movs	r3, #0
 6830 0040 2361     		str	r3, [r4, #16]
 6831              	.LVL997:
 6832              	.L671:
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6833              		.loc 1 3587 0
 6834 0042 05B1     		cbz	r5, .L670
3587:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 6835              		.loc 1 3587 0 is_stmt 0 discriminator 1
 6836 0044 E571     		strb	r5, [r4, #7]
 6837              	.L670:
3590:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6838              		.loc 1 3590 0 is_stmt 1
 6839 0046 2946     		mov	r1, r5
 6840 0048 2068     		ldr	r0, [r4]
 6841 004a FFF7FEFF 		bl	unlock_fs
 6842              	.LVL998:
3591:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6843              		.loc 1 3591 0
 6844 004e 2846     		mov	r0, r5
 6845 0050 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  /tmp/cckAXl85.s 			page 215


 6846              	.LVL999:
 6847              	.L672:
3569:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_OK;
 6848              		.loc 1 3569 0
 6849 0052 6169     		ldr	r1, [r4, #20]
 6850 0054 2068     		ldr	r0, [r4]
 6851 0056 FFF7FEFF 		bl	get_fat
 6852              	.LVL1000:
 6853 005a 0646     		mov	r6, r0
 6854              	.LVL1001:
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
 6855              		.loc 1 3571 0
 6856 005c B0F1FF3F 		cmp	r0, #-1
 6857 0060 16D0     		beq	.L680
 6858              	.L673:
 6859              	.LVL1002:
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 6860              		.loc 1 3572 0
 6861 0062 012E     		cmp	r6, #1
 6862 0064 16D0     		beq	.L681
 6863              	.LVL1003:
 6864              	.L674:
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 6865              		.loc 1 3573 0
 6866 0066 002D     		cmp	r5, #0
 6867 0068 EBD1     		bne	.L671
3573:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = put_fat(fp->fs, fp->clust, 0x0FFFFFFF);
 6868              		.loc 1 3573 0 is_stmt 0 discriminator 1
 6869 006a 2068     		ldr	r0, [r4]
 6870              	.LVL1004:
 6871 006c D0F81832 		ldr	r3, [r0, #536]
 6872 0070 9E42     		cmp	r6, r3
 6873 0072 E6D2     		bcs	.L671
3574:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) res = remove_chain(fp->fs, ncl);
 6874              		.loc 1 3574 0 is_stmt 1
 6875 0074 6FF07042 		mvn	r2, #-268435456
 6876 0078 6169     		ldr	r1, [r4, #20]
 6877 007a FFF7FEFF 		bl	put_fat
 6878              	.LVL1005:
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6879              		.loc 1 3575 0
 6880 007e 0546     		mov	r5, r0
 6881 0080 0028     		cmp	r0, #0
 6882 0082 DED1     		bne	.L671
3575:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 6883              		.loc 1 3575 0 is_stmt 0 discriminator 1
 6884 0084 3146     		mov	r1, r6
 6885 0086 2068     		ldr	r0, [r4]
 6886              	.LVL1006:
 6887 0088 FFF7FEFF 		bl	remove_chain
 6888              	.LVL1007:
 6889 008c 0546     		mov	r5, r0
 6890              	.LVL1008:
 6891 008e D8E7     		b	.L671
 6892              	.LVL1009:
 6893              	.L680:
3571:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (ncl == 1) res = FR_INT_ERR;
ARM GAS  /tmp/cckAXl85.s 			page 216


 6894              		.loc 1 3571 0 is_stmt 1
 6895 0090 0125     		movs	r5, #1
 6896 0092 E6E7     		b	.L673
 6897              	.LVL1010:
 6898              	.L681:
3572:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && ncl < fp->fs->n_fatent) {
 6899              		.loc 1 3572 0
 6900 0094 0225     		movs	r5, #2
 6901              	.LVL1011:
 6902 0096 E6E7     		b	.L674
 6903              		.cfi_endproc
 6904              	.LFE117:
 6906              		.section	.text.f_unlink,"ax",%progbits
 6907              		.align	1
 6908              		.global	f_unlink
 6909              		.syntax unified
 6910              		.thumb
 6911              		.thumb_func
 6912              		.fpu softvfp
 6914              	f_unlink:
 6915              	.LFB118:
3603:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 6916              		.loc 1 3603 0
 6917              		.cfi_startproc
 6918              		@ args = 0, pretend = 0, frame = 88
 6919              		@ frame_needed = 0, uses_anonymous_args = 0
 6920              	.LVL1012:
 6921 0000 70B5     		push	{r4, r5, r6, lr}
 6922              	.LCFI91:
 6923              		.cfi_def_cfa_offset 16
 6924              		.cfi_offset 4, -16
 6925              		.cfi_offset 5, -12
 6926              		.cfi_offset 6, -8
 6927              		.cfi_offset 14, -4
 6928 0002 96B0     		sub	sp, sp, #88
 6929              	.LCFI92:
 6930              		.cfi_def_cfa_offset 104
 6931 0004 16A9     		add	r1, sp, #88
 6932 0006 41F8540D 		str	r0, [r1, #-84]!
 6933              	.LVL1013:
3612:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 6934              		.loc 1 3612 0
 6935 000a 0122     		movs	r2, #1
 6936 000c 0EA8     		add	r0, sp, #56
 6937              	.LVL1014:
 6938 000e FFF7FEFF 		bl	find_volume
 6939              	.LVL1015:
3613:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 6940              		.loc 1 3613 0
 6941 0012 0446     		mov	r4, r0
 6942 0014 30B1     		cbz	r0, .L694
 6943              	.LVL1016:
 6944              	.L683:
3659:Middlewares/Third_Party/FatFs/src/ff.c **** }
 6945              		.loc 1 3659 0
 6946 0016 2146     		mov	r1, r4
 6947 0018 0E98     		ldr	r0, [sp, #56]
ARM GAS  /tmp/cckAXl85.s 			page 217


 6948 001a FFF7FEFF 		bl	unlock_fs
 6949              	.LVL1017:
3660:Middlewares/Third_Party/FatFs/src/ff.c **** 
 6950              		.loc 1 3660 0
 6951 001e 2046     		mov	r0, r4
 6952 0020 16B0     		add	sp, sp, #88
 6953              	.LCFI93:
 6954              		.cfi_remember_state
 6955              		.cfi_def_cfa_offset 16
 6956              		@ sp needed
 6957 0022 70BD     		pop	{r4, r5, r6, pc}
 6958              	.LVL1018:
 6959              	.L694:
 6960              	.LCFI94:
 6961              		.cfi_restore_state
3614:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 6962              		.loc 1 3614 0
 6963 0024 03AB     		add	r3, sp, #12
 6964 0026 1493     		str	r3, [sp, #80]
3615:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (dj.fn[NSFLAG] & NS_DOT))
 6965              		.loc 1 3615 0
 6966 0028 0199     		ldr	r1, [sp, #4]
 6967 002a 0EA8     		add	r0, sp, #56
 6968              	.LVL1019:
 6969 002c FFF7FEFF 		bl	follow_path
 6970              	.LVL1020:
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6971              		.loc 1 3619 0
 6972 0030 0446     		mov	r4, r0
 6973 0032 20B9     		cbnz	r0, .L684
3619:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 6974              		.loc 1 3619 0 is_stmt 0 discriminator 1
 6975 0034 0221     		movs	r1, #2
 6976 0036 0EA8     		add	r0, sp, #56
 6977              	.LVL1021:
 6978 0038 FFF7FEFF 		bl	chk_lock
 6979              	.LVL1022:
 6980 003c 0446     		mov	r4, r0
 6981              	.LVL1023:
 6982              	.L684:
3621:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 6983              		.loc 1 3621 0 is_stmt 1
 6984 003e 002C     		cmp	r4, #0
 6985 0040 E9D1     		bne	.L683
3622:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {
 6986              		.loc 1 3622 0
 6987 0042 139D     		ldr	r5, [sp, #76]
 6988              	.LVL1024:
3623:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;		/* Cannot remove the origin directory */
 6989              		.loc 1 3623 0
 6990 0044 2DB3     		cbz	r5, .L689
3626:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = FR_DENIED;		/* Cannot remove R/O object */
 6991              		.loc 1 3626 0
 6992 0046 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 6993 0048 13F0010F 		tst	r3, #1
 6994 004c 23D1     		bne	.L690
 6995              	.LVL1025:
ARM GAS  /tmp/cckAXl85.s 			page 218


 6996              	.L685:
3629:Middlewares/Third_Party/FatFs/src/ff.c **** 				dclst = ld_clust(dj.fs, dir);
 6997              		.loc 1 3629 0
 6998 004e 24BB     		cbnz	r4, .L691
3630:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dclst && (dir[DIR_Attr] & AM_DIR)) {	/* Is it a sub-directory ? */
 6999              		.loc 1 3630 0
 7000 0050 2946     		mov	r1, r5
 7001 0052 0E98     		ldr	r0, [sp, #56]
 7002 0054 FFF7FEFF 		bl	ld_clust
 7003              	.LVL1026:
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 7004              		.loc 1 3631 0
 7005 0058 0646     		mov	r6, r0
 7006 005a F8B1     		cbz	r0, .L686
3631:Middlewares/Third_Party/FatFs/src/ff.c **** #if _FS_RPATH
 7007              		.loc 1 3631 0 is_stmt 0 discriminator 1
 7008 005c EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7009 005e 13F0100F 		tst	r3, #16
 7010 0062 1BD0     		beq	.L686
3638:Middlewares/Third_Party/FatFs/src/ff.c **** 						sdj.sclust = dclst;
 7011              		.loc 1 3638 0 is_stmt 1
 7012 0064 2022     		movs	r2, #32
 7013 0066 0EA9     		add	r1, sp, #56
 7014 0068 06A8     		add	r0, sp, #24
 7015              	.LVL1027:
 7016 006a FFF7FEFF 		bl	mem_cpy
 7017              	.LVL1028:
3639:Middlewares/Third_Party/FatFs/src/ff.c **** 						res = dir_sdi(&sdj, 2);
 7018              		.loc 1 3639 0
 7019 006e 0896     		str	r6, [sp, #32]
3640:Middlewares/Third_Party/FatFs/src/ff.c **** 						if (res == FR_OK) {
 7020              		.loc 1 3640 0
 7021 0070 0221     		movs	r1, #2
 7022 0072 06A8     		add	r0, sp, #24
 7023 0074 FFF7FEFF 		bl	dir_sdi
 7024              	.LVL1029:
3641:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_read(&sdj, 0);			/* Read an item (excluding dot entries) */
 7025              		.loc 1 3641 0
 7026 0078 0446     		mov	r4, r0
 7027 007a 78B9     		cbnz	r0, .L686
3642:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK) res = FR_DENIED;	/* Not empty? (cannot remove) */
 7028              		.loc 1 3642 0
 7029 007c 0021     		movs	r1, #0
 7030 007e 06A8     		add	r0, sp, #24
 7031              	.LVL1030:
 7032 0080 FFF7FEFF 		bl	dir_read
 7033              	.LVL1031:
3643:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_NO_FILE) res = FR_OK;	/* Empty? (can remove) */
 7034              		.loc 1 3643 0
 7035 0084 0346     		mov	r3, r0
 7036 0086 00B9     		cbnz	r0, .L687
 7037 0088 0723     		movs	r3, #7
 7038              	.L687:
 7039              	.LVL1032:
3644:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7040              		.loc 1 3644 0
 7041 008a 042B     		cmp	r3, #4
ARM GAS  /tmp/cckAXl85.s 			page 219


 7042 008c 06D0     		beq	.L686
 7043 008e 1C46     		mov	r4, r3
 7044 0090 04E0     		b	.L686
 7045              	.LVL1033:
 7046              	.L689:
3624:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7047              		.loc 1 3624 0
 7048 0092 0624     		movs	r4, #6
 7049              	.LVL1034:
 7050 0094 DBE7     		b	.L685
 7051              	.LVL1035:
 7052              	.L690:
3627:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7053              		.loc 1 3627 0
 7054 0096 0724     		movs	r4, #7
 7055              	.LVL1036:
 7056 0098 D9E7     		b	.L685
 7057              	.LVL1037:
 7058              	.L691:
3607:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 7059              		.loc 1 3607 0
 7060 009a 0026     		movs	r6, #0
 7061              	.LVL1038:
 7062              	.L686:
3649:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = dir_remove(&dj);		/* Remove the directory entry */
 7063              		.loc 1 3649 0
 7064 009c 002C     		cmp	r4, #0
 7065 009e BAD1     		bne	.L683
3650:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK && dclst)	/* Remove the cluster chain if exist */
 7066              		.loc 1 3650 0
 7067 00a0 0EA8     		add	r0, sp, #56
 7068 00a2 FFF7FEFF 		bl	dir_remove
 7069              	.LVL1039:
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
 7070              		.loc 1 3651 0
 7071 00a6 0446     		mov	r4, r0
 7072 00a8 00B9     		cbnz	r0, .L688
3651:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = remove_chain(dj.fs, dclst);
 7073              		.loc 1 3651 0 is_stmt 0 discriminator 1
 7074 00aa 36B9     		cbnz	r6, .L695
 7075              	.LVL1040:
 7076              	.L688:
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7077              		.loc 1 3653 0 is_stmt 1
 7078 00ac 002C     		cmp	r4, #0
 7079 00ae B2D1     		bne	.L683
3653:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7080              		.loc 1 3653 0 is_stmt 0 discriminator 1
 7081 00b0 0E98     		ldr	r0, [sp, #56]
 7082 00b2 FFF7FEFF 		bl	sync_fs
 7083              	.LVL1041:
 7084 00b6 0446     		mov	r4, r0
 7085              	.LVL1042:
 7086 00b8 ADE7     		b	.L683
 7087              	.LVL1043:
 7088              	.L695:
3652:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = sync_fs(dj.fs);
ARM GAS  /tmp/cckAXl85.s 			page 220


 7089              		.loc 1 3652 0 is_stmt 1
 7090 00ba 3146     		mov	r1, r6
 7091 00bc 0E98     		ldr	r0, [sp, #56]
 7092              	.LVL1044:
 7093 00be FFF7FEFF 		bl	remove_chain
 7094              	.LVL1045:
 7095 00c2 0446     		mov	r4, r0
 7096              	.LVL1046:
 7097 00c4 F2E7     		b	.L688
 7098              		.cfi_endproc
 7099              	.LFE118:
 7101              		.section	.text.f_mkdir,"ax",%progbits
 7102              		.align	1
 7103              		.global	f_mkdir
 7104              		.syntax unified
 7105              		.thumb
 7106              		.thumb_func
 7107              		.fpu softvfp
 7109              	f_mkdir:
 7110              	.LFB119:
3672:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7111              		.loc 1 3672 0
 7112              		.cfi_startproc
 7113              		@ args = 0, pretend = 0, frame = 56
 7114              		@ frame_needed = 0, uses_anonymous_args = 0
 7115              	.LVL1047:
 7116 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7117              	.LCFI95:
 7118              		.cfi_def_cfa_offset 36
 7119              		.cfi_offset 4, -36
 7120              		.cfi_offset 5, -32
 7121              		.cfi_offset 6, -28
 7122              		.cfi_offset 7, -24
 7123              		.cfi_offset 8, -20
 7124              		.cfi_offset 9, -16
 7125              		.cfi_offset 10, -12
 7126              		.cfi_offset 11, -8
 7127              		.cfi_offset 14, -4
 7128 0004 8FB0     		sub	sp, sp, #60
 7129              	.LCFI96:
 7130              		.cfi_def_cfa_offset 96
 7131 0006 0EAC     		add	r4, sp, #56
 7132 0008 44F8340D 		str	r0, [r4, #-52]!
3676:Middlewares/Third_Party/FatFs/src/ff.c **** 	DEFINE_NAMEBUF;
 7133              		.loc 1 3676 0
 7134 000c FFF7FEFF 		bl	get_fattime
 7135              	.LVL1048:
 7136 0010 0546     		mov	r5, r0
 7137              	.LVL1049:
3681:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7138              		.loc 1 3681 0
 7139 0012 0122     		movs	r2, #1
 7140 0014 2146     		mov	r1, r4
 7141 0016 06A8     		add	r0, sp, #24
 7142              	.LVL1050:
 7143 0018 FFF7FEFF 		bl	find_volume
 7144              	.LVL1051:
ARM GAS  /tmp/cckAXl85.s 			page 221


3682:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 7145              		.loc 1 3682 0
 7146 001c 0446     		mov	r4, r0
 7147 001e 38B1     		cbz	r0, .L716
 7148              	.LVL1052:
 7149              	.L697:
3733:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7150              		.loc 1 3733 0
 7151 0020 2146     		mov	r1, r4
 7152 0022 0698     		ldr	r0, [sp, #24]
 7153 0024 FFF7FEFF 		bl	unlock_fs
 7154              	.LVL1053:
3734:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7155              		.loc 1 3734 0
 7156 0028 2046     		mov	r0, r4
 7157 002a 0FB0     		add	sp, sp, #60
 7158              	.LCFI97:
 7159              		.cfi_remember_state
 7160              		.cfi_def_cfa_offset 36
 7161              		@ sp needed
 7162 002c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7163              	.LVL1054:
 7164              	.L716:
 7165              	.LCFI98:
 7166              		.cfi_restore_state
3683:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);			/* Follow the file path */
 7167              		.loc 1 3683 0
 7168 0030 03AB     		add	r3, sp, #12
 7169 0032 0C93     		str	r3, [sp, #48]
3684:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (res == FR_OK) res = FR_EXIST;		/* Any object with same name is already existing */
 7170              		.loc 1 3684 0
 7171 0034 0199     		ldr	r1, [sp, #4]
 7172 0036 06A8     		add	r0, sp, #24
 7173              	.LVL1055:
 7174 0038 FFF7FEFF 		bl	follow_path
 7175              	.LVL1056:
3685:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_NO_FILE && (dj.fn[NSFLAG] & NS_DOT))
 7176              		.loc 1 3685 0
 7177 003c 0346     		mov	r3, r0
 7178 003e 00B9     		cbnz	r0, .L698
 7179 0040 0823     		movs	r3, #8
 7180              	.L698:
 7181              	.LVL1057:
3688:Middlewares/Third_Party/FatFs/src/ff.c **** 			dcl = create_chain(dj.fs, 0);		/* Allocate a cluster for the new directory table */
 7182              		.loc 1 3688 0
 7183 0042 042B     		cmp	r3, #4
 7184 0044 01D0     		beq	.L717
 7185 0046 1C46     		mov	r4, r3
 7186 0048 EAE7     		b	.L697
 7187              	.L717:
3689:Middlewares/Third_Party/FatFs/src/ff.c **** 			res = FR_OK;
 7188              		.loc 1 3689 0
 7189 004a 0021     		movs	r1, #0
 7190 004c 0698     		ldr	r0, [sp, #24]
 7191 004e FFF7FEFF 		bl	create_chain
 7192              	.LVL1058:
3691:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 1) res = FR_INT_ERR;
ARM GAS  /tmp/cckAXl85.s 			page 222


 7193              		.loc 1 3691 0
 7194 0052 8146     		mov	r9, r0
 7195 0054 00B9     		cbnz	r0, .L699
 7196 0056 0724     		movs	r4, #7
 7197              	.L699:
 7198              	.LVL1059:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7199              		.loc 1 3692 0
 7200 0058 B9F1010F 		cmp	r9, #1
 7201 005c 1FD0     		beq	.L718
 7202              	.LVL1060:
 7203              	.L700:
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
 7204              		.loc 1 3693 0
 7205 005e B9F1FF3F 		cmp	r9, #-1
 7206 0062 1ED0     		beq	.L719
 7207              	.LVL1061:
 7208              	.L701:
3694:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_window(dj.fs);
 7209              		.loc 1 3694 0
 7210 0064 FCB1     		cbz	r4, .L720
 7211              	.LVL1062:
 7212              	.L702:
3696:Middlewares/Third_Party/FatFs/src/ff.c **** 				dsc = clust2sect(dj.fs, dcl);
 7213              		.loc 1 3696 0
 7214 0066 1CB3     		cbz	r4, .L721
 7215              	.LVL1063:
 7216              	.L703:
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
 7217              		.loc 1 3718 0
 7218 0068 002C     		cmp	r4, #0
 7219 006a 7AD0     		beq	.L722
 7220              	.L707:
3719:Middlewares/Third_Party/FatFs/src/ff.c **** 				remove_chain(dj.fs, dcl);			/* Could not register, remove cluster chain */
 7221              		.loc 1 3719 0
 7222 006c 002C     		cmp	r4, #0
 7223 006e 7DD1     		bne	.L723
3722:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;				/* Attribute */
 7224              		.loc 1 3722 0
 7225 0070 0B98     		ldr	r0, [sp, #44]
 7226              	.LVL1064:
3723:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);	/* Created time */
 7227              		.loc 1 3723 0
 7228 0072 1023     		movs	r3, #16
 7229 0074 C372     		strb	r3, [r0, #11]
3724:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);					/* Table start cluster */
 7230              		.loc 1 3724 0
 7231 0076 8575     		strb	r5, [r0, #22]
 7232 0078 C5F30723 		ubfx	r3, r5, #8, #8
 7233 007c C375     		strb	r3, [r0, #23]
 7234 007e C5F30743 		ubfx	r3, r5, #16, #8
 7235 0082 0376     		strb	r3, [r0, #24]
 7236 0084 2D0E     		lsrs	r5, r5, #24
 7237              	.LVL1065:
 7238 0086 4576     		strb	r5, [r0, #25]
3725:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 7239              		.loc 1 3725 0
ARM GAS  /tmp/cckAXl85.s 			page 223


 7240 0088 4946     		mov	r1, r9
 7241 008a FFF7FEFF 		bl	st_clust
 7242              	.LVL1066:
3726:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 7243              		.loc 1 3726 0
 7244 008e 0698     		ldr	r0, [sp, #24]
 7245 0090 0123     		movs	r3, #1
 7246 0092 80F80432 		strb	r3, [r0, #516]
3727:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7247              		.loc 1 3727 0
 7248 0096 FFF7FEFF 		bl	sync_fs
 7249              	.LVL1067:
 7250 009a 0446     		mov	r4, r0
 7251              	.LVL1068:
 7252 009c C0E7     		b	.L697
 7253              	.LVL1069:
 7254              	.L718:
3692:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (dcl == 0xFFFFFFFF) res = FR_DISK_ERR;
 7255              		.loc 1 3692 0
 7256 009e 0224     		movs	r4, #2
 7257              	.LVL1070:
 7258 00a0 DDE7     		b	.L700
 7259              	.LVL1071:
 7260              	.L719:
3693:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK)					/* Flush FAT */
 7261              		.loc 1 3693 0
 7262 00a2 0124     		movs	r4, #1
 7263              	.LVL1072:
 7264 00a4 DEE7     		b	.L701
 7265              	.LVL1073:
 7266              	.L720:
3695:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res == FR_OK) {					/* Initialize the new directory table */
 7267              		.loc 1 3695 0
 7268 00a6 0698     		ldr	r0, [sp, #24]
 7269              	.LVL1074:
 7270 00a8 FFF7FEFF 		bl	sync_window
 7271              	.LVL1075:
 7272 00ac 0446     		mov	r4, r0
 7273              	.LVL1076:
 7274 00ae DAE7     		b	.L702
 7275              	.L721:
3697:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir = dj.fs->win.d8;
 7276              		.loc 1 3697 0
 7277 00b0 069E     		ldr	r6, [sp, #24]
 7278 00b2 4946     		mov	r1, r9
 7279 00b4 3046     		mov	r0, r6
 7280 00b6 FFF7FEFF 		bl	clust2sect
 7281              	.LVL1077:
 7282 00ba 0746     		mov	r7, r0
 7283              	.LVL1078:
3698:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir, 0, SS(dj.fs));
 7284              		.loc 1 3698 0
 7285 00bc B246     		mov	r10, r6
 7286              	.LVL1079:
3699:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_set(dir + DIR_Name, ' ', 11);	/* Create "." entry */
 7287              		.loc 1 3699 0
 7288 00be 4FF40072 		mov	r2, #512
ARM GAS  /tmp/cckAXl85.s 			page 224


 7289 00c2 0021     		movs	r1, #0
 7290 00c4 3046     		mov	r0, r6
 7291              	.LVL1080:
 7292 00c6 FFF7FEFF 		bl	mem_set
 7293              	.LVL1081:
3700:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Name] = '.';
 7294              		.loc 1 3700 0
 7295 00ca 0B22     		movs	r2, #11
 7296 00cc 2021     		movs	r1, #32
 7297 00ce 3046     		mov	r0, r6
 7298 00d0 FFF7FEFF 		bl	mem_set
 7299              	.LVL1082:
3701:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = AM_DIR;
 7300              		.loc 1 3701 0
 7301 00d4 4FF02E0B 		mov	fp, #46
 7302 00d8 86F800B0 		strb	fp, [r6]
3702:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_DWORD(dir + DIR_WrtTime, tm);
 7303              		.loc 1 3702 0
 7304 00dc 1023     		movs	r3, #16
 7305 00de F372     		strb	r3, [r6, #11]
3703:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir, dcl);
 7306              		.loc 1 3703 0
 7307 00e0 B575     		strb	r5, [r6, #22]
 7308 00e2 C5F30723 		ubfx	r3, r5, #8, #8
 7309 00e6 F375     		strb	r3, [r6, #23]
 7310 00e8 C5F30743 		ubfx	r3, r5, #16, #8
 7311 00ec 3376     		strb	r3, [r6, #24]
 7312 00ee 2B0E     		lsrs	r3, r5, #24
 7313 00f0 7376     		strb	r3, [r6, #25]
3704:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(dir + SZ_DIRE, dir, SZ_DIRE); 	/* Create ".." entry */
 7314              		.loc 1 3704 0
 7315 00f2 4946     		mov	r1, r9
 7316 00f4 3046     		mov	r0, r6
 7317 00f6 FFF7FEFF 		bl	st_clust
 7318              	.LVL1083:
3705:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[SZ_DIRE + 1] = '.'; pcl = dj.sclust;
 7319              		.loc 1 3705 0
 7320 00fa 06F12008 		add	r8, r6, #32
 7321 00fe 2022     		movs	r2, #32
 7322 0100 3146     		mov	r1, r6
 7323 0102 4046     		mov	r0, r8
 7324 0104 FFF7FEFF 		bl	mem_cpy
 7325              	.LVL1084:
3706:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (dj.fs->fs_type == FS_FAT32 && pcl == dj.fs->dirbase)
 7326              		.loc 1 3706 0
 7327 0108 86F821B0 		strb	fp, [r6, #33]
 7328 010c 0899     		ldr	r1, [sp, #32]
 7329              	.LVL1085:
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 7330              		.loc 1 3707 0
 7331 010e 069B     		ldr	r3, [sp, #24]
 7332 0110 93F80022 		ldrb	r2, [r3, #512]	@ zero_extendqisi2
 7333 0114 032A     		cmp	r2, #3
 7334 0116 1ED0     		beq	.L724
 7335              	.LVL1086:
 7336              	.L704:
3709:Middlewares/Third_Party/FatFs/src/ff.c **** 				for (n = dj.fs->csize; n; n--) {	/* Write dot entries and clear following sectors */
ARM GAS  /tmp/cckAXl85.s 			page 225


 7337              		.loc 1 3709 0
 7338 0118 4046     		mov	r0, r8
 7339 011a FFF7FEFF 		bl	st_clust
 7340              	.LVL1087:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 7341              		.loc 1 3710 0
 7342 011e 069B     		ldr	r3, [sp, #24]
 7343 0120 93F80262 		ldrb	r6, [r3, #514]	@ zero_extendqisi2
 7344              	.LVL1088:
 7345              	.L705:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 7346              		.loc 1 3710 0 is_stmt 0 discriminator 1
 7347 0124 002E     		cmp	r6, #0
 7348 0126 9FD0     		beq	.L703
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 7349              		.loc 1 3711 0 is_stmt 1
 7350 0128 0698     		ldr	r0, [sp, #24]
 7351 012a 07F10108 		add	r8, r7, #1
 7352              	.LVL1089:
 7353 012e C0F83072 		str	r7, [r0, #560]
3712:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = sync_window(dj.fs);
 7354              		.loc 1 3712 0
 7355 0132 0123     		movs	r3, #1
 7356 0134 80F80432 		strb	r3, [r0, #516]
3713:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res != FR_OK) break;
 7357              		.loc 1 3713 0
 7358 0138 FFF7FEFF 		bl	sync_window
 7359              	.LVL1090:
3714:Middlewares/Third_Party/FatFs/src/ff.c **** 					mem_set(dir, 0, SS(dj.fs));
 7360              		.loc 1 3714 0
 7361 013c 0446     		mov	r4, r0
 7362 013e 0028     		cmp	r0, #0
 7363 0140 92D1     		bne	.L703
3715:Middlewares/Third_Party/FatFs/src/ff.c **** 				}
 7364              		.loc 1 3715 0 discriminator 2
 7365 0142 4FF40072 		mov	r2, #512
 7366 0146 0021     		movs	r1, #0
 7367 0148 5046     		mov	r0, r10
 7368              	.LVL1091:
 7369 014a FFF7FEFF 		bl	mem_set
 7370              	.LVL1092:
3710:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->winsect = dsc++;
 7371              		.loc 1 3710 0 discriminator 2
 7372 014e 013E     		subs	r6, r6, #1
 7373              	.LVL1093:
 7374 0150 F6B2     		uxtb	r6, r6
 7375              	.LVL1094:
3711:Middlewares/Third_Party/FatFs/src/ff.c **** 					dj.fs->wflag = 1;
 7376              		.loc 1 3711 0 discriminator 2
 7377 0152 4746     		mov	r7, r8
 7378 0154 E6E7     		b	.L705
 7379              	.LVL1095:
 7380              	.L724:
3707:Middlewares/Third_Party/FatFs/src/ff.c **** 					pcl = 0;
 7381              		.loc 1 3707 0 discriminator 1
 7382 0156 D3F82832 		ldr	r3, [r3, #552]
 7383 015a 9942     		cmp	r1, r3
ARM GAS  /tmp/cckAXl85.s 			page 226


 7384 015c DCD1     		bne	.L704
3708:Middlewares/Third_Party/FatFs/src/ff.c **** 				st_clust(dir + SZ_DIRE, pcl);
 7385              		.loc 1 3708 0
 7386 015e 0021     		movs	r1, #0
 7387              	.LVL1096:
 7388 0160 DAE7     		b	.L704
 7389              	.LVL1097:
 7390              	.L722:
3718:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (res != FR_OK) {
 7391              		.loc 1 3718 0 discriminator 1
 7392 0162 06A8     		add	r0, sp, #24
 7393 0164 FFF7FEFF 		bl	dir_register
 7394              	.LVL1098:
 7395 0168 0446     		mov	r4, r0
 7396              	.LVL1099:
 7397 016a 7FE7     		b	.L707
 7398              	.L723:
3720:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7399              		.loc 1 3720 0
 7400 016c 4946     		mov	r1, r9
 7401 016e 0698     		ldr	r0, [sp, #24]
 7402 0170 FFF7FEFF 		bl	remove_chain
 7403              	.LVL1100:
 7404 0174 54E7     		b	.L697
 7405              		.cfi_endproc
 7406              	.LFE119:
 7408              		.section	.text.f_chmod,"ax",%progbits
 7409              		.align	1
 7410              		.global	f_chmod
 7411              		.syntax unified
 7412              		.thumb
 7413              		.thumb_func
 7414              		.fpu softvfp
 7416              	f_chmod:
 7417              	.LFB120:
3748:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7418              		.loc 1 3748 0
 7419              		.cfi_startproc
 7420              		@ args = 0, pretend = 0, frame = 56
 7421              		@ frame_needed = 0, uses_anonymous_args = 0
 7422              	.LVL1101:
 7423 0000 70B5     		push	{r4, r5, r6, lr}
 7424              	.LCFI99:
 7425              		.cfi_def_cfa_offset 16
 7426              		.cfi_offset 4, -16
 7427              		.cfi_offset 5, -12
 7428              		.cfi_offset 6, -8
 7429              		.cfi_offset 14, -4
 7430 0002 8EB0     		sub	sp, sp, #56
 7431              	.LCFI100:
 7432              		.cfi_def_cfa_offset 72
 7433 0004 0EAB     		add	r3, sp, #56
 7434 0006 43F8340D 		str	r0, [r3, #-52]!
 7435 000a 0E46     		mov	r6, r1
 7436 000c 1546     		mov	r5, r2
3756:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7437              		.loc 1 3756 0
ARM GAS  /tmp/cckAXl85.s 			page 227


 7438 000e 0122     		movs	r2, #1
 7439              	.LVL1102:
 7440 0010 1946     		mov	r1, r3
 7441              	.LVL1103:
 7442 0012 06A8     		add	r0, sp, #24
 7443              	.LVL1104:
 7444 0014 FFF7FEFF 		bl	find_volume
 7445              	.LVL1105:
3757:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 7446              		.loc 1 3757 0
 7447 0018 0446     		mov	r4, r0
 7448 001a 30B1     		cbz	r0, .L729
 7449              	.LVL1106:
 7450              	.L726:
3776:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7451              		.loc 1 3776 0
 7452 001c 2146     		mov	r1, r4
 7453 001e 0698     		ldr	r0, [sp, #24]
 7454 0020 FFF7FEFF 		bl	unlock_fs
 7455              	.LVL1107:
3777:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7456              		.loc 1 3777 0
 7457 0024 2046     		mov	r0, r4
 7458 0026 0EB0     		add	sp, sp, #56
 7459              	.LCFI101:
 7460              		.cfi_remember_state
 7461              		.cfi_def_cfa_offset 16
 7462              		@ sp needed
 7463 0028 70BD     		pop	{r4, r5, r6, pc}
 7464              	.LVL1108:
 7465              	.L729:
 7466              	.LCFI102:
 7467              		.cfi_restore_state
3758:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);		/* Follow the file path */
 7468              		.loc 1 3758 0
 7469 002a 03AB     		add	r3, sp, #12
 7470 002c 0C93     		str	r3, [sp, #48]
3759:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 7471              		.loc 1 3759 0
 7472 002e 0199     		ldr	r1, [sp, #4]
 7473 0030 06A8     		add	r0, sp, #24
 7474              	.LVL1109:
 7475 0032 FFF7FEFF 		bl	follow_path
 7476              	.LVL1110:
3763:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 7477              		.loc 1 3763 0
 7478 0036 0446     		mov	r4, r0
 7479 0038 0028     		cmp	r0, #0
 7480 003a EFD1     		bne	.L726
3764:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {						/* Is it a root directory? */
 7481              		.loc 1 3764 0
 7482 003c 0B9B     		ldr	r3, [sp, #44]
 7483              	.LVL1111:
3765:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 7484              		.loc 1 3765 0
 7485 003e 73B1     		cbz	r3, .L727
3768:Middlewares/Third_Party/FatFs/src/ff.c **** 				dir[DIR_Attr] = (attr & mask) | (dir[DIR_Attr] & (BYTE)~mask);	/* Apply attribute change */
ARM GAS  /tmp/cckAXl85.s 			page 228


 7486              		.loc 1 3768 0
 7487 0040 05F02705 		and	r5, r5, #39
 7488              	.LVL1112:
3769:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 7489              		.loc 1 3769 0
 7490 0044 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 7491 0046 5640     		eors	r6, r6, r2
 7492 0048 3540     		ands	r5, r5, r6
 7493              	.LVL1113:
 7494 004a 5540     		eors	r5, r5, r2
 7495 004c DD72     		strb	r5, [r3, #11]
3770:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 7496              		.loc 1 3770 0
 7497 004e 0698     		ldr	r0, [sp, #24]
 7498              	.LVL1114:
 7499 0050 0123     		movs	r3, #1
 7500              	.LVL1115:
 7501 0052 80F80432 		strb	r3, [r0, #516]
3771:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7502              		.loc 1 3771 0
 7503 0056 FFF7FEFF 		bl	sync_fs
 7504              	.LVL1116:
 7505 005a 0446     		mov	r4, r0
 7506              	.LVL1117:
 7507 005c DEE7     		b	.L726
 7508              	.LVL1118:
 7509              	.L727:
3766:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {						/* File or sub directory */
 7510              		.loc 1 3766 0
 7511 005e 0624     		movs	r4, #6
 7512 0060 DCE7     		b	.L726
 7513              		.cfi_endproc
 7514              	.LFE120:
 7516              		.section	.text.f_rename,"ax",%progbits
 7517              		.align	1
 7518              		.global	f_rename
 7519              		.syntax unified
 7520              		.thumb
 7521              		.thumb_func
 7522              		.fpu softvfp
 7524              	f_rename:
 7525              	.LFB121:
3790:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7526              		.loc 1 3790 0
 7527              		.cfi_startproc
 7528              		@ args = 0, pretend = 0, frame = 112
 7529              		@ frame_needed = 0, uses_anonymous_args = 0
 7530              	.LVL1119:
 7531 0000 70B5     		push	{r4, r5, r6, lr}
 7532              	.LCFI103:
 7533              		.cfi_def_cfa_offset 16
 7534              		.cfi_offset 4, -16
 7535              		.cfi_offset 5, -12
 7536              		.cfi_offset 6, -8
 7537              		.cfi_offset 14, -4
 7538 0002 9CB0     		sub	sp, sp, #112
 7539              	.LCFI104:
ARM GAS  /tmp/cckAXl85.s 			page 229


 7540              		.cfi_def_cfa_offset 128
 7541 0004 0190     		str	r0, [sp, #4]
 7542 0006 0091     		str	r1, [sp]
3799:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7543              		.loc 1 3799 0
 7544 0008 0122     		movs	r2, #1
 7545 000a 01A9     		add	r1, sp, #4
 7546              	.LVL1120:
 7547 000c 14A8     		add	r0, sp, #80
 7548              	.LVL1121:
 7549 000e FFF7FEFF 		bl	find_volume
 7550              	.LVL1122:
3800:Middlewares/Third_Party/FatFs/src/ff.c **** 		djn.fs = djo.fs;
 7551              		.loc 1 3800 0
 7552 0012 0446     		mov	r4, r0
 7553 0014 30B1     		cbz	r0, .L741
 7554              	.LVL1123:
 7555              	.L731:
3854:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7556              		.loc 1 3854 0
 7557 0016 2146     		mov	r1, r4
 7558 0018 1498     		ldr	r0, [sp, #80]
 7559 001a FFF7FEFF 		bl	unlock_fs
 7560              	.LVL1124:
3855:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7561              		.loc 1 3855 0
 7562 001e 2046     		mov	r0, r4
 7563 0020 1CB0     		add	sp, sp, #112
 7564              	.LCFI105:
 7565              		.cfi_remember_state
 7566              		.cfi_def_cfa_offset 16
 7567              		@ sp needed
 7568 0022 70BD     		pop	{r4, r5, r6, pc}
 7569              	.LVL1125:
 7570              	.L741:
 7571              	.LCFI106:
 7572              		.cfi_restore_state
3801:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(djo);
 7573              		.loc 1 3801 0
 7574 0024 149B     		ldr	r3, [sp, #80]
 7575 0026 0C93     		str	r3, [sp, #48]
3802:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&djo, path_old);		/* Check old object */
 7576              		.loc 1 3802 0
 7577 0028 03AB     		add	r3, sp, #12
 7578 002a 1A93     		str	r3, [sp, #104]
3803:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (_FS_RPATH && res == FR_OK && (djo.fn[NSFLAG] & NS_DOT))
 7579              		.loc 1 3803 0
 7580 002c 0199     		ldr	r1, [sp, #4]
 7581 002e 14A8     		add	r0, sp, #80
 7582              	.LVL1126:
 7583 0030 FFF7FEFF 		bl	follow_path
 7584              	.LVL1127:
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 7585              		.loc 1 3807 0
 7586 0034 0446     		mov	r4, r0
 7587 0036 20B9     		cbnz	r0, .L732
3807:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
ARM GAS  /tmp/cckAXl85.s 			page 230


 7588              		.loc 1 3807 0 is_stmt 0 discriminator 1
 7589 0038 0221     		movs	r1, #2
 7590 003a 14A8     		add	r0, sp, #80
 7591              	.LVL1128:
 7592 003c FFF7FEFF 		bl	chk_lock
 7593              	.LVL1129:
 7594 0040 0446     		mov	r4, r0
 7595              	.LVL1130:
 7596              	.L732:
3809:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!djo.dir) {						/* Is root dir? */
 7597              		.loc 1 3809 0 is_stmt 1
 7598 0042 002C     		cmp	r4, #0
 7599 0044 E7D1     		bne	.L731
3810:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_NO_FILE;
 7600              		.loc 1 3810 0
 7601 0046 1999     		ldr	r1, [sp, #100]
 7602 0048 0029     		cmp	r1, #0
 7603 004a 66D0     		beq	.L736
3813:Middlewares/Third_Party/FatFs/src/ff.c **** 				mem_cpy(&djn, &djo, sizeof (DIR));		/* Duplicate the directory object */
 7604              		.loc 1 3813 0
 7605 004c 1522     		movs	r2, #21
 7606 004e 0B31     		adds	r1, r1, #11
 7607 0050 06A8     		add	r0, sp, #24
 7608 0052 FFF7FEFF 		bl	mem_cpy
 7609              	.LVL1131:
3814:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (get_ldnumber(&path_new) >= 0)		/* Snip drive number off and ignore it */
 7610              		.loc 1 3814 0
 7611 0056 2022     		movs	r2, #32
 7612 0058 14A9     		add	r1, sp, #80
 7613 005a 0CA8     		add	r0, sp, #48
 7614 005c FFF7FEFF 		bl	mem_cpy
 7615              	.LVL1132:
3815:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = follow_path(&djn, path_new);	/* and make sure if new object name is not conflicting */
 7616              		.loc 1 3815 0
 7617 0060 6846     		mov	r0, sp
 7618 0062 FFF7FEFF 		bl	get_ldnumber
 7619              	.LVL1133:
 7620 0066 0028     		cmp	r0, #0
 7621 0068 3FDB     		blt	.L737
3816:Middlewares/Third_Party/FatFs/src/ff.c **** 				else
 7622              		.loc 1 3816 0
 7623 006a 0099     		ldr	r1, [sp]
 7624 006c 0CA8     		add	r0, sp, #48
 7625 006e FFF7FEFF 		bl	follow_path
 7626              	.LVL1134:
 7627 0072 0446     		mov	r4, r0
 7628              	.LVL1135:
 7629              	.L733:
3819:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_NO_FILE) { 				/* It is a valid path and no name collision */
 7630              		.loc 1 3819 0
 7631 0074 04B9     		cbnz	r4, .L734
 7632 0076 0824     		movs	r4, #8
 7633              	.LVL1136:
 7634              	.L734:
3820:Middlewares/Third_Party/FatFs/src/ff.c **** 					res = dir_register(&djn);			/* Register the new entry */
 7635              		.loc 1 3820 0
 7636 0078 042C     		cmp	r4, #4
ARM GAS  /tmp/cckAXl85.s 			page 231


 7637 007a CCD1     		bne	.L731
3821:Middlewares/Third_Party/FatFs/src/ff.c **** 					if (res == FR_OK) {
 7638              		.loc 1 3821 0
 7639 007c 0CA8     		add	r0, sp, #48
 7640 007e FFF7FEFF 		bl	dir_register
 7641              	.LVL1137:
3822:Middlewares/Third_Party/FatFs/src/ff.c **** /* Start of critical section where any interruption can cause a cross-link */
 7642              		.loc 1 3822 0
 7643 0082 0446     		mov	r4, r0
 7644 0084 0028     		cmp	r0, #0
 7645 0086 C6D1     		bne	.L731
3824:Middlewares/Third_Party/FatFs/src/ff.c **** 						mem_cpy(dir + 13, buf + 2, 19);
 7646              		.loc 1 3824 0
 7647 0088 119D     		ldr	r5, [sp, #68]
 7648              	.LVL1138:
3825:Middlewares/Third_Party/FatFs/src/ff.c **** 						dir[DIR_Attr] = buf[0] | AM_ARC;
 7649              		.loc 1 3825 0
 7650 008a 1322     		movs	r2, #19
 7651 008c 0DF11A01 		add	r1, sp, #26
 7652 0090 05F10D00 		add	r0, r5, #13
 7653              	.LVL1139:
 7654 0094 FFF7FEFF 		bl	mem_cpy
 7655              	.LVL1140:
3826:Middlewares/Third_Party/FatFs/src/ff.c **** 						djo.fs->wflag = 1;
 7656              		.loc 1 3826 0
 7657 0098 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 7658 009c 43F02003 		orr	r3, r3, #32
 7659 00a0 EB72     		strb	r3, [r5, #11]
3827:Middlewares/Third_Party/FatFs/src/ff.c **** 						if ((dir[DIR_Attr] & AM_DIR) && djo.sclust != djn.sclust) {	/* Update .. entry in the sub-dir
 7660              		.loc 1 3827 0
 7661 00a2 149E     		ldr	r6, [sp, #80]
 7662 00a4 0123     		movs	r3, #1
 7663 00a6 86F80432 		strb	r3, [r6, #516]
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 7664              		.loc 1 3828 0
 7665 00aa EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
 7666 00ac 13F0100F 		tst	r3, #16
 7667 00b0 0ED0     		beq	.L735
3828:Middlewares/Third_Party/FatFs/src/ff.c **** 							dw = clust2sect(djo.fs, ld_clust(djo.fs, dir));
 7668              		.loc 1 3828 0 is_stmt 0 discriminator 1
 7669 00b2 0E9B     		ldr	r3, [sp, #56]
 7670 00b4 169A     		ldr	r2, [sp, #88]
 7671 00b6 9A42     		cmp	r2, r3
 7672 00b8 0AD0     		beq	.L735
3829:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (!dw) {
 7673              		.loc 1 3829 0 is_stmt 1
 7674 00ba 2946     		mov	r1, r5
 7675 00bc 3046     		mov	r0, r6
 7676 00be FFF7FEFF 		bl	ld_clust
 7677              	.LVL1141:
 7678 00c2 0146     		mov	r1, r0
 7679 00c4 3046     		mov	r0, r6
 7680 00c6 FFF7FEFF 		bl	clust2sect
 7681              	.LVL1142:
3830:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = FR_INT_ERR;
 7682              		.loc 1 3830 0
 7683 00ca 0146     		mov	r1, r0
ARM GAS  /tmp/cckAXl85.s 			page 232


 7684 00cc 78B9     		cbnz	r0, .L742
3831:Middlewares/Third_Party/FatFs/src/ff.c **** 							} else {
 7685              		.loc 1 3831 0
 7686 00ce 0224     		movs	r4, #2
 7687              	.LVL1143:
 7688              	.L735:
3841:Middlewares/Third_Party/FatFs/src/ff.c **** 							res = dir_remove(&djo);		/* Remove old entry */
 7689              		.loc 1 3841 0
 7690 00d0 002C     		cmp	r4, #0
 7691 00d2 A0D1     		bne	.L731
3842:Middlewares/Third_Party/FatFs/src/ff.c **** 							if (res == FR_OK)
 7692              		.loc 1 3842 0
 7693 00d4 14A8     		add	r0, sp, #80
 7694 00d6 FFF7FEFF 		bl	dir_remove
 7695              	.LVL1144:
3843:Middlewares/Third_Party/FatFs/src/ff.c **** 								res = sync_fs(djo.fs);
 7696              		.loc 1 3843 0
 7697 00da 0446     		mov	r4, r0
 7698 00dc 0028     		cmp	r0, #0
 7699 00de 9AD1     		bne	.L731
3844:Middlewares/Third_Party/FatFs/src/ff.c **** 						}
 7700              		.loc 1 3844 0
 7701 00e0 1498     		ldr	r0, [sp, #80]
 7702              	.LVL1145:
 7703 00e2 FFF7FEFF 		bl	sync_fs
 7704              	.LVL1146:
 7705 00e6 0446     		mov	r4, r0
 7706              	.LVL1147:
 7707 00e8 95E7     		b	.L731
 7708              	.L737:
3818:Middlewares/Third_Party/FatFs/src/ff.c **** 				if (res == FR_OK) res = FR_EXIST;		/* The new object name is already existing */
 7709              		.loc 1 3818 0
 7710 00ea 0B24     		movs	r4, #11
 7711              	.LVL1148:
 7712 00ec C2E7     		b	.L733
 7713              	.LVL1149:
 7714              	.L742:
3833:Middlewares/Third_Party/FatFs/src/ff.c **** 								dir = djo.fs->win.d8 + SZ_DIRE * 1;	/* Ptr to .. entry */
 7715              		.loc 1 3833 0
 7716 00ee 3046     		mov	r0, r6
 7717              	.LVL1150:
 7718 00f0 FFF7FEFF 		bl	move_window
 7719              	.LVL1151:
3834:Middlewares/Third_Party/FatFs/src/ff.c **** 								if (res == FR_OK && dir[1] == '.') {
 7720              		.loc 1 3834 0
 7721 00f4 149B     		ldr	r3, [sp, #80]
 7722 00f6 03F12002 		add	r2, r3, #32
 7723              	.LVL1152:
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 7724              		.loc 1 3835 0
 7725 00fa 0446     		mov	r4, r0
 7726 00fc 0028     		cmp	r0, #0
 7727 00fe E7D1     		bne	.L735
3835:Middlewares/Third_Party/FatFs/src/ff.c **** 									st_clust(dir, djn.sclust);
 7728              		.loc 1 3835 0 is_stmt 0 discriminator 1
 7729 0100 93F82130 		ldrb	r3, [r3, #33]	@ zero_extendqisi2
 7730 0104 2E2B     		cmp	r3, #46
ARM GAS  /tmp/cckAXl85.s 			page 233


 7731 0106 E3D1     		bne	.L735
3836:Middlewares/Third_Party/FatFs/src/ff.c **** 									djo.fs->wflag = 1;
 7732              		.loc 1 3836 0 is_stmt 1
 7733 0108 0E99     		ldr	r1, [sp, #56]
 7734 010a 1046     		mov	r0, r2
 7735              	.LVL1153:
 7736 010c FFF7FEFF 		bl	st_clust
 7737              	.LVL1154:
3837:Middlewares/Third_Party/FatFs/src/ff.c **** 								}
 7738              		.loc 1 3837 0
 7739 0110 0122     		movs	r2, #1
 7740 0112 149B     		ldr	r3, [sp, #80]
 7741 0114 83F80422 		strb	r2, [r3, #516]
 7742 0118 DAE7     		b	.L735
 7743              	.LVL1155:
 7744              	.L736:
3811:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {
 7745              		.loc 1 3811 0
 7746 011a 0424     		movs	r4, #4
 7747              	.LVL1156:
 7748 011c 7BE7     		b	.L731
 7749              		.cfi_endproc
 7750              	.LFE121:
 7752              		.section	.text.f_utime,"ax",%progbits
 7753              		.align	1
 7754              		.global	f_utime
 7755              		.syntax unified
 7756              		.thumb
 7757              		.thumb_func
 7758              		.fpu softvfp
 7760              	f_utime:
 7761              	.LFB122:
3868:Middlewares/Third_Party/FatFs/src/ff.c **** 	FRESULT res;
 7762              		.loc 1 3868 0
 7763              		.cfi_startproc
 7764              		@ args = 0, pretend = 0, frame = 56
 7765              		@ frame_needed = 0, uses_anonymous_args = 0
 7766              	.LVL1157:
 7767 0000 30B5     		push	{r4, r5, lr}
 7768              	.LCFI107:
 7769              		.cfi_def_cfa_offset 12
 7770              		.cfi_offset 4, -12
 7771              		.cfi_offset 5, -8
 7772              		.cfi_offset 14, -4
 7773 0002 8FB0     		sub	sp, sp, #60
 7774              	.LCFI108:
 7775              		.cfi_def_cfa_offset 72
 7776 0004 0EAB     		add	r3, sp, #56
 7777 0006 43F8340D 		str	r0, [r3, #-52]!
 7778 000a 0D46     		mov	r5, r1
3876:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (res == FR_OK) {
 7779              		.loc 1 3876 0
 7780 000c 0122     		movs	r2, #1
 7781 000e 1946     		mov	r1, r3
 7782              	.LVL1158:
 7783 0010 06A8     		add	r0, sp, #24
 7784              	.LVL1159:
ARM GAS  /tmp/cckAXl85.s 			page 234


 7785 0012 FFF7FEFF 		bl	find_volume
 7786              	.LVL1160:
3877:Middlewares/Third_Party/FatFs/src/ff.c **** 		INIT_BUF(dj);
 7787              		.loc 1 3877 0
 7788 0016 0446     		mov	r4, r0
 7789 0018 30B1     		cbz	r0, .L747
 7790              	.LVL1161:
 7791              	.L744:
3896:Middlewares/Third_Party/FatFs/src/ff.c **** }
 7792              		.loc 1 3896 0
 7793 001a 2146     		mov	r1, r4
 7794 001c 0698     		ldr	r0, [sp, #24]
 7795 001e FFF7FEFF 		bl	unlock_fs
 7796              	.LVL1162:
3897:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7797              		.loc 1 3897 0
 7798 0022 2046     		mov	r0, r4
 7799 0024 0FB0     		add	sp, sp, #60
 7800              	.LCFI109:
 7801              		.cfi_remember_state
 7802              		.cfi_def_cfa_offset 12
 7803              		@ sp needed
 7804 0026 30BD     		pop	{r4, r5, pc}
 7805              	.LVL1163:
 7806              	.L747:
 7807              	.LCFI110:
 7808              		.cfi_restore_state
3878:Middlewares/Third_Party/FatFs/src/ff.c **** 		res = follow_path(&dj, path);	/* Follow the file path */
 7809              		.loc 1 3878 0
 7810 0028 03AB     		add	r3, sp, #12
 7811 002a 0C93     		str	r3, [sp, #48]
3879:Middlewares/Third_Party/FatFs/src/ff.c **** 		FREE_BUF();
 7812              		.loc 1 3879 0
 7813 002c 0199     		ldr	r1, [sp, #4]
 7814 002e 06A8     		add	r0, sp, #24
 7815              	.LVL1164:
 7816 0030 FFF7FEFF 		bl	follow_path
 7817              	.LVL1165:
3883:Middlewares/Third_Party/FatFs/src/ff.c **** 			dir = dj.dir;
 7818              		.loc 1 3883 0
 7819 0034 0446     		mov	r4, r0
 7820 0036 0028     		cmp	r0, #0
 7821 0038 EFD1     		bne	.L744
3884:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!dir) {					/* Root directory */
 7822              		.loc 1 3884 0
 7823 003a 0B9B     		ldr	r3, [sp, #44]
 7824              	.LVL1166:
3885:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = FR_INVALID_NAME;
 7825              		.loc 1 3885 0
 7826 003c 8BB1     		cbz	r3, .L745
3888:Middlewares/Third_Party/FatFs/src/ff.c **** 				ST_WORD(dir + DIR_WrtDate, fno->fdate);
 7827              		.loc 1 3888 0
 7828 003e AA79     		ldrb	r2, [r5, #6]	@ zero_extendqisi2
 7829 0040 9A75     		strb	r2, [r3, #22]
 7830 0042 EA88     		ldrh	r2, [r5, #6]
 7831 0044 120A     		lsrs	r2, r2, #8
 7832 0046 DA75     		strb	r2, [r3, #23]
ARM GAS  /tmp/cckAXl85.s 			page 235


3889:Middlewares/Third_Party/FatFs/src/ff.c **** 				dj.fs->wflag = 1;
 7833              		.loc 1 3889 0
 7834 0048 2A79     		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 7835 004a 1A76     		strb	r2, [r3, #24]
 7836 004c AA88     		ldrh	r2, [r5, #4]
 7837 004e 120A     		lsrs	r2, r2, #8
 7838 0050 5A76     		strb	r2, [r3, #25]
3890:Middlewares/Third_Party/FatFs/src/ff.c **** 				res = sync_fs(dj.fs);
 7839              		.loc 1 3890 0
 7840 0052 0698     		ldr	r0, [sp, #24]
 7841              	.LVL1167:
 7842 0054 0123     		movs	r3, #1
 7843              	.LVL1168:
 7844 0056 80F80432 		strb	r3, [r0, #516]
3891:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
 7845              		.loc 1 3891 0
 7846 005a FFF7FEFF 		bl	sync_fs
 7847              	.LVL1169:
 7848 005e 0446     		mov	r4, r0
 7849              	.LVL1170:
 7850 0060 DBE7     		b	.L744
 7851              	.LVL1171:
 7852              	.L745:
3886:Middlewares/Third_Party/FatFs/src/ff.c **** 			} else {					/* File or sub-directory */
 7853              		.loc 1 3886 0
 7854 0062 0624     		movs	r4, #6
 7855 0064 D9E7     		b	.L744
 7856              		.cfi_endproc
 7857              	.LFE122:
 7859              		.section	.text.f_mkfs,"ax",%progbits
 7860              		.align	1
 7861              		.global	f_mkfs
 7862              		.syntax unified
 7863              		.thumb
 7864              		.thumb_func
 7865              		.fpu softvfp
 7867              	f_mkfs:
 7868              	.LFB123:
4143:Middlewares/Third_Party/FatFs/src/ff.c **** 	static const WORD vst[] = { 1024,   512,  256,  128,   64,    32,   16,    8,    4,    2,   0};
 7869              		.loc 1 4143 0
 7870              		.cfi_startproc
 7871              		@ args = 0, pretend = 0, frame = 32
 7872              		@ frame_needed = 0, uses_anonymous_args = 0
 7873              	.LVL1172:
 7874 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 7875              	.LCFI111:
 7876              		.cfi_def_cfa_offset 36
 7877              		.cfi_offset 4, -36
 7878              		.cfi_offset 5, -32
 7879              		.cfi_offset 6, -28
 7880              		.cfi_offset 7, -24
 7881              		.cfi_offset 8, -20
 7882              		.cfi_offset 9, -16
 7883              		.cfi_offset 10, -12
 7884              		.cfi_offset 11, -8
 7885              		.cfi_offset 14, -4
 7886 0004 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/cckAXl85.s 			page 236


 7887              	.LCFI112:
 7888              		.cfi_def_cfa_offset 72
 7889 0006 0590     		str	r0, [sp, #20]
4160:Middlewares/Third_Party/FatFs/src/ff.c **** 	vol = get_ldnumber(&path);
 7890              		.loc 1 4160 0
 7891 0008 0129     		cmp	r1, #1
 7892 000a 03D9     		bls	.L819
 7893 000c 1320     		movs	r0, #19
 7894              	.LVL1173:
 7895              	.L749:
4375:Middlewares/Third_Party/FatFs/src/ff.c **** 
 7896              		.loc 1 4375 0
 7897 000e 09B0     		add	sp, sp, #36
 7898              	.LCFI113:
 7899              		.cfi_remember_state
 7900              		.cfi_def_cfa_offset 36
 7901              		@ sp needed
 7902 0010 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 7903              	.LVL1174:
 7904              	.L819:
 7905              	.LCFI114:
 7906              		.cfi_restore_state
 7907 0014 0C46     		mov	r4, r1
 7908 0016 1546     		mov	r5, r2
4161:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (vol < 0) return FR_INVALID_DRIVE;
 7909              		.loc 1 4161 0
 7910 0018 05A8     		add	r0, sp, #20
 7911              	.LVL1175:
 7912 001a FFF7FEFF 		bl	get_ldnumber
 7913              	.LVL1176:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 7914              		.loc 1 4162 0
 7915 001e 0028     		cmp	r0, #0
 7916 0020 C0F2C182 		blt	.L790
4163:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!fs) return FR_NOT_ENABLED;
 7917              		.loc 1 4163 0
 7918 0024 434B     		ldr	r3, .L829
 7919 0026 53F82060 		ldr	r6, [r3, r0, lsl #2]
 7920              	.LVL1177:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 7921              		.loc 1 4164 0
 7922 002a 002E     		cmp	r6, #0
 7923 002c 00F0BD82 		beq	.L791
4165:Middlewares/Third_Party/FatFs/src/ff.c **** 	pdrv = LD2PD(vol);	/* Physical drive */
 7924              		.loc 1 4165 0
 7925 0030 0023     		movs	r3, #0
 7926 0032 86F80032 		strb	r3, [r6, #512]
4166:Middlewares/Third_Party/FatFs/src/ff.c **** 	part = LD2PT(vol);	/* Partition (0:auto detect, 1-4:get from partition table)*/
 7927              		.loc 1 4166 0
 7928 0036 C7B2     		uxtb	r7, r0
 7929              	.LVL1178:
4170:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_NOINIT) return FR_NOT_READY;
 7930              		.loc 1 4170 0
 7931 0038 3846     		mov	r0, r7
 7932              	.LVL1179:
 7933 003a FFF7FEFF 		bl	disk_initialize
 7934              	.LVL1180:
ARM GAS  /tmp/cckAXl85.s 			page 237


4171:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (stat & STA_PROTECT) return FR_WRITE_PROTECTED;
 7935              		.loc 1 4171 0
 7936 003e 10F0010F 		tst	r0, #1
 7937 0042 01D0     		beq	.L820
 7938 0044 0320     		movs	r0, #3
 7939              	.LVL1181:
 7940 0046 E2E7     		b	.L749
 7941              	.LVL1182:
 7942              	.L820:
4172:Middlewares/Third_Party/FatFs/src/ff.c **** #if _MAX_SS != _MIN_SS		/* Get disk sector size */
 7943              		.loc 1 4172 0
 7944 0048 10F0040F 		tst	r0, #4
 7945 004c 01D0     		beq	.L821
 7946 004e 0A20     		movs	r0, #10
 7947              	.LVL1183:
 7948 0050 DDE7     		b	.L749
 7949              	.LVL1184:
 7950              	.L821:
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7951              		.loc 1 4187 0
 7952 0052 06AA     		add	r2, sp, #24
 7953 0054 0121     		movs	r1, #1
 7954 0056 3846     		mov	r0, r7
 7955              	.LVL1185:
 7956 0058 FFF7FEFF 		bl	disk_ioctl
 7957              	.LVL1186:
 7958 005c 0028     		cmp	r0, #0
 7959 005e 40F0A682 		bne	.L794
4187:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 7960              		.loc 1 4187 0 is_stmt 0 discriminator 1
 7961 0062 069A     		ldr	r2, [sp, #24]
 7962 0064 7F2A     		cmp	r2, #127
 7963 0066 40F2A482 		bls	.L795
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
 7964              		.loc 1 4189 0 is_stmt 1
 7965 006a 74B1     		cbz	r4, .L796
 7966 006c 0023     		movs	r3, #0
 7967 006e 0193     		str	r3, [sp, #4]
 7968              	.L750:
 7969              	.LVL1187:
4190:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 7970              		.loc 1 4190 0 discriminator 4
 7971 0070 019B     		ldr	r3, [sp, #4]
 7972 0072 D21A     		subs	r2, r2, r3
 7973 0074 0692     		str	r2, [sp, #24]
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
 7974              		.loc 1 4193 0 discriminator 4
 7975 0076 6B1E     		subs	r3, r5, #1
 7976 0078 1D42     		tst	r5, r3
 7977 007a 00D0     		beq	.L751
4193:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) {						/* AU auto selection */
 7978              		.loc 1 4193 0 is_stmt 0
 7979 007c 0025     		movs	r5, #0
 7980              	.LVL1188:
 7981              	.L751:
4194:Middlewares/Third_Party/FatFs/src/ff.c **** 		vs = n_vol / (2000 / (SS(fs) / 512));
 7982              		.loc 1 4194 0 is_stmt 1
ARM GAS  /tmp/cckAXl85.s 			page 238


 7983 007e 85B9     		cbnz	r5, .L752
4195:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (i = 0; vs < vst[i]; i++) ;
 7984              		.loc 1 4195 0
 7985 0080 4FF4FA63 		mov	r3, #2000
 7986 0084 B2FBF3F3 		udiv	r3, r2, r3
 7987              	.LVL1189:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 7988              		.loc 1 4196 0
 7989 0088 03E0     		b	.L753
 7990              	.LVL1190:
 7991              	.L796:
4189:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_vol -= b_vol;				/* Volume size */
 7992              		.loc 1 4189 0
 7993 008a 3F23     		movs	r3, #63
 7994 008c 0193     		str	r3, [sp, #4]
 7995 008e EFE7     		b	.L750
 7996              	.LVL1191:
 7997              	.L754:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 7998              		.loc 1 4196 0 discriminator 3
 7999 0090 0135     		adds	r5, r5, #1
 8000              	.LVL1192:
 8001              	.L753:
4196:Middlewares/Third_Party/FatFs/src/ff.c **** 		au = cst[i];
 8002              		.loc 1 4196 0 is_stmt 0 discriminator 1
 8003 0092 2949     		ldr	r1, .L829+4
 8004 0094 31F81510 		ldrh	r1, [r1, r5, lsl #1]
 8005 0098 8B42     		cmp	r3, r1
 8006 009a F9D3     		bcc	.L754
4197:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8007              		.loc 1 4197 0 is_stmt 1
 8008 009c 274B     		ldr	r3, .L829+8
 8009              	.LVL1193:
 8010 009e 33F81550 		ldrh	r5, [r3, r5, lsl #1]
 8011              	.LVL1194:
 8012              	.L752:
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 8013              		.loc 1 4199 0
 8014 00a2 B5F5007F 		cmp	r5, #512
 8015 00a6 00D3     		bcc	.L755
4199:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (!au) au = 1;
 8016              		.loc 1 4199 0 is_stmt 0 discriminator 1
 8017 00a8 6D0A     		lsrs	r5, r5, #9
 8018              	.LVL1195:
 8019              	.L755:
4200:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (au > 128) au = 128;
 8020              		.loc 1 4200 0 is_stmt 1
 8021 00aa 05B9     		cbnz	r5, .L756
 8022 00ac 0125     		movs	r5, #1
 8023              	.LVL1196:
 8024              	.L756:
4201:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8025              		.loc 1 4201 0
 8026 00ae 802D     		cmp	r5, #128
 8027 00b0 00D9     		bls	.L757
 8028 00b2 8025     		movs	r5, #128
 8029              	.LVL1197:
ARM GAS  /tmp/cckAXl85.s 			page 239


 8030              	.L757:
4204:Middlewares/Third_Party/FatFs/src/ff.c **** 	fmt = FS_FAT12;
 8031              		.loc 1 4204 0
 8032 00b4 B2FBF5F3 		udiv	r3, r2, r5
 8033              	.LVL1198:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 8034              		.loc 1 4206 0
 8035 00b8 40F6F571 		movw	r1, #4085
 8036 00bc 8B42     		cmp	r3, r1
 8037 00be 26D8     		bhi	.L800
4205:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT16) fmt = FS_FAT16;
 8038              		.loc 1 4205 0
 8039 00c0 4FF00108 		mov	r8, #1
 8040              	.L758:
 8041              	.LVL1199:
4207:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8042              		.loc 1 4207 0
 8043 00c4 4FF6F571 		movw	r1, #65525
 8044 00c8 8B42     		cmp	r3, r1
 8045 00ca 01D9     		bls	.L759
 8046 00cc 4FF00308 		mov	r8, #3
 8047              	.LVL1200:
 8048              	.L759:
4210:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = ((n_clst * 4) + 8 + SS(fs) - 1) / SS(fs);
 8049              		.loc 1 4210 0
 8050 00d0 B8F1030F 		cmp	r8, #3
 8051 00d4 1ED0     		beq	.L822
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 8052              		.loc 1 4215 0
 8053 00d6 B8F1010F 		cmp	r8, #1
 8054 00da 25D0     		beq	.L823
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 8055              		.loc 1 4215 0 is_stmt 0 discriminator 2
 8056 00dc 0233     		adds	r3, r3, #2
 8057              	.LVL1201:
 8058 00de 5B00     		lsls	r3, r3, #1
 8059              	.LVL1202:
 8060              	.L763:
4216:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 1;
 8061              		.loc 1 4216 0 is_stmt 1 discriminator 4
 8062 00e0 03F2FF13 		addw	r3, r3, #511
 8063              	.LVL1203:
 8064 00e4 4FEA5329 		lsr	r9, r3, #9
 8065              	.LVL1204:
4218:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8066              		.loc 1 4218 0 discriminator 4
 8067 00e8 2023     		movs	r3, #32
 8068 00ea 0393     		str	r3, [sp, #12]
4217:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = (DWORD)N_ROOTDIR * SZ_DIRE / SS(fs);
 8069              		.loc 1 4217 0 discriminator 4
 8070 00ec 4FF0010A 		mov	r10, #1
 8071              	.LVL1205:
 8072              	.L761:
4220:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_dir = b_fat + n_fat * N_FATS;		/* Directory area start sector */
 8073              		.loc 1 4220 0
 8074 00f0 0199     		ldr	r1, [sp, #4]
 8075 00f2 0AEB0103 		add	r3, r10, r1
ARM GAS  /tmp/cckAXl85.s 			page 240


 8076 00f6 0093     		str	r3, [sp]
 8077              	.LVL1206:
4221:Middlewares/Third_Party/FatFs/src/ff.c **** 	b_data = b_dir + n_dir;				/* Data area start sector */
 8078              		.loc 1 4221 0
 8079 00f8 09EB030B 		add	fp, r9, r3
 8080              	.LVL1207:
4222:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < b_data + au - b_vol) return FR_MKFS_ABORTED;	/* Too small volume */
 8081              		.loc 1 4222 0
 8082 00fc 039B     		ldr	r3, [sp, #12]
 8083              	.LVL1208:
 8084 00fe 9B44     		add	fp, fp, r3
 8085              	.LVL1209:
4223:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8086              		.loc 1 4223 0
 8087 0100 05EB0B03 		add	r3, r5, fp
 8088 0104 5B1A     		subs	r3, r3, r1
 8089 0106 9A42     		cmp	r2, r3
 8090 0108 1AD2     		bcs	.L824
 8091 010a 0E20     		movs	r0, #14
 8092 010c 7FE7     		b	.L749
 8093              	.LVL1210:
 8094              	.L800:
4206:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_clst >= MIN_FAT32) fmt = FS_FAT32;
 8095              		.loc 1 4206 0
 8096 010e 4FF00208 		mov	r8, #2
 8097 0112 D7E7     		b	.L758
 8098              	.LVL1211:
 8099              	.L822:
4211:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv = 32;
 8100              		.loc 1 4211 0
 8101 0114 8233     		adds	r3, r3, #130
 8102              	.LVL1212:
 8103 0116 9B00     		lsls	r3, r3, #2
 8104              	.LVL1213:
 8105 0118 013B     		subs	r3, r3, #1
 8106 011a 4FEA5329 		lsr	r9, r3, #9
 8107              	.LVL1214:
4213:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 8108              		.loc 1 4213 0
 8109 011e 0023     		movs	r3, #0
 8110 0120 0393     		str	r3, [sp, #12]
4212:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_dir = 0;
 8111              		.loc 1 4212 0
 8112 0122 4FF0200A 		mov	r10, #32
 8113 0126 E3E7     		b	.L761
 8114              	.LVL1215:
 8115              	.L823:
4215:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_fat = (n_fat + SS(fs) - 1) / SS(fs);
 8116              		.loc 1 4215 0 discriminator 1
 8117 0128 03EB4303 		add	r3, r3, r3, lsl #1
 8118              	.LVL1216:
 8119 012c 0133     		adds	r3, r3, #1
 8120 012e 5B08     		lsrs	r3, r3, #1
 8121 0130 0333     		adds	r3, r3, #3
 8122 0132 D5E7     		b	.L763
 8123              	.L830:
 8124              		.align	2
ARM GAS  /tmp/cckAXl85.s 			page 241


 8125              	.L829:
 8126 0134 00000000 		.word	.LANCHOR2
 8127 0138 00000000 		.word	.LANCHOR4
 8128 013c 00000000 		.word	.LANCHOR5
 8129              	.LVL1217:
 8130              	.L824:
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 8131              		.loc 1 4226 0
 8132 0140 07AA     		add	r2, sp, #28
 8133              	.LVL1218:
 8134 0142 0321     		movs	r1, #3
 8135 0144 3846     		mov	r0, r7
 8136 0146 FFF7FEFF 		bl	disk_ioctl
 8137              	.LVL1219:
 8138 014a 20B9     		cbnz	r0, .L764
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 8139              		.loc 1 4226 0 is_stmt 0 discriminator 2
 8140 014c 079B     		ldr	r3, [sp, #28]
 8141 014e 13B1     		cbz	r3, .L764
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 8142              		.loc 1 4226 0 discriminator 4
 8143 0150 B3F5004F 		cmp	r3, #32768
 8144 0154 01D9     		bls	.L765
 8145              	.L764:
4226:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (b_data + n - 1) & ~(n - 1);	/* Next nearest erase block from current data start */
 8146              		.loc 1 4226 0 discriminator 5
 8147 0156 0123     		movs	r3, #1
 8148 0158 0793     		str	r3, [sp, #28]
 8149              	.L765:
4227:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = (n - b_data) / N_FATS;
 8150              		.loc 1 4227 0 is_stmt 1
 8151 015a 079A     		ldr	r2, [sp, #28]
 8152 015c 0BEB0203 		add	r3, fp, r2
 8153 0160 013B     		subs	r3, r3, #1
 8154 0162 5242     		negs	r2, r2
 8155 0164 1340     		ands	r3, r3, r2
4228:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {		/* FAT32: Move FAT offset */
 8156              		.loc 1 4228 0
 8157 0166 A3EB0B03 		sub	r3, r3, fp
 8158 016a 0793     		str	r3, [sp, #28]
4229:Middlewares/Third_Party/FatFs/src/ff.c **** 		n_rsv += n;
 8159              		.loc 1 4229 0
 8160 016c B8F1030F 		cmp	r8, #3
 8161 0170 00F06B81 		beq	.L825
4233:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8162              		.loc 1 4233 0
 8163 0174 9944     		add	r9, r9, r3
 8164              	.LVL1220:
 8165              	.L767:
4237:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   (fmt == FS_FAT16 && n_clst < MIN_FAT16)
 8166              		.loc 1 4237 0
 8167 0176 069A     		ldr	r2, [sp, #24]
 8168 0178 A2EB0A03 		sub	r3, r2, r10
 8169 017c A3EB0903 		sub	r3, r3, r9
 8170 0180 0399     		ldr	r1, [sp, #12]
 8171 0182 5B1A     		subs	r3, r3, r1
 8172 0184 B3FBF5FB 		udiv	fp, r3, r5
ARM GAS  /tmp/cckAXl85.s 			page 242


 8173              	.LVL1221:
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 8174              		.loc 1 4238 0
 8175 0188 B8F1020F 		cmp	r8, #2
 8176 018c 00F06281 		beq	.L826
 8177              	.L768:
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
 8178              		.loc 1 4239 0
 8179 0190 B8F1030F 		cmp	r8, #3
 8180 0194 00F06581 		beq	.L827
 8181              	.L769:
4243:Middlewares/Third_Party/FatFs/src/ff.c **** 		sys = 0x0C;		/* FAT32X */
 8182              		.loc 1 4243 0
 8183 0198 B8F1030F 		cmp	r8, #3
 8184 019c 00F06881 		beq	.L805
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
 8185              		.loc 1 4246 0
 8186 01a0 B8F1010F 		cmp	r8, #1
 8187 01a4 03D1     		bne	.L771
4246:Middlewares/Third_Party/FatFs/src/ff.c **** 			sys = 0x01;	/* FAT12(<65536) */
 8188              		.loc 1 4246 0 is_stmt 0 discriminator 1
 8189 01a6 B2F5803F 		cmp	r2, #65536
 8190 01aa C0F06481 		bcc	.L806
 8191              	.L771:
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8192              		.loc 1 4249 0 is_stmt 1
 8193 01ae B2F5803F 		cmp	r2, #65536
 8194 01b2 80F06381 		bcs	.L807
 8195 01b6 0423     		movs	r3, #4
 8196 01b8 0293     		str	r3, [sp, #8]
 8197              	.L770:
 8198              	.LVL1222:
4261:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF0;
 8199              		.loc 1 4261 0
 8200 01ba 002C     		cmp	r4, #0
 8201 01bc 40F06181 		bne	.L808
4264:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl = fs->win.d8 + MBR_Table;	/* Create partition table for single partition in the drive */
 8202              		.loc 1 4264 0
 8203 01c0 4FF40072 		mov	r2, #512
 8204 01c4 0021     		movs	r1, #0
 8205 01c6 3046     		mov	r0, r6
 8206 01c8 FFF7FEFF 		bl	mem_set
 8207              	.LVL1223:
4266:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[2] = 1;						/* Partition start sector */
 8208              		.loc 1 4266 0
 8209 01cc 0123     		movs	r3, #1
 8210 01ce 86F8BF31 		strb	r3, [r6, #447]
4267:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[3] = 0;						/* Partition start cylinder */
 8211              		.loc 1 4267 0
 8212 01d2 86F8C031 		strb	r3, [r6, #448]
4268:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[4] = sys;					/* System type */
 8213              		.loc 1 4268 0
 8214 01d6 0022     		movs	r2, #0
 8215 01d8 86F8C121 		strb	r2, [r6, #449]
4269:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[5] = 254;					/* Partition end head */
 8216              		.loc 1 4269 0
 8217 01dc 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
ARM GAS  /tmp/cckAXl85.s 			page 243


 8218 01e0 86F8C211 		strb	r1, [r6, #450]
4270:Middlewares/Third_Party/FatFs/src/ff.c **** 			n = (b_vol + n_vol) / 63 / 255;
 8219              		.loc 1 4270 0
 8220 01e4 FE21     		movs	r1, #254
 8221 01e6 86F8C311 		strb	r1, [r6, #451]
4271:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[6] = (BYTE)(n >> 2 | 63);	/* Partition end sector */
 8222              		.loc 1 4271 0
 8223 01ea 0699     		ldr	r1, [sp, #24]
 8224 01ec 0198     		ldr	r0, [sp, #4]
 8225 01ee 0844     		add	r0, r0, r1
 8226 01f0 43F6C164 		movw	r4, #16065
 8227 01f4 B0FBF4F0 		udiv	r0, r0, r4
 8228 01f8 0790     		str	r0, [sp, #28]
4272:Middlewares/Third_Party/FatFs/src/ff.c **** 			tbl[7] = (BYTE)n;				/* End cylinder */
 8229              		.loc 1 4272 0
 8230 01fa 8408     		lsrs	r4, r0, #2
 8231 01fc 44F03F04 		orr	r4, r4, #63
 8232 0200 86F8C441 		strb	r4, [r6, #452]
4273:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 63);			/* Partition start in LBA */
 8233              		.loc 1 4273 0
 8234 0204 86F8C501 		strb	r0, [r6, #453]
4274:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 12, n_vol);		/* Partition size in LBA */
 8235              		.loc 1 4274 0
 8236 0208 3F20     		movs	r0, #63
 8237 020a 86F8C601 		strb	r0, [r6, #454]
 8238 020e 86F8C721 		strb	r2, [r6, #455]
 8239 0212 86F8C821 		strb	r2, [r6, #456]
 8240 0216 86F8C921 		strb	r2, [r6, #457]
4275:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_WORD(fs->win.d8 + BS_55AA, 0xAA55);	/* MBR signature */
 8241              		.loc 1 4275 0
 8242 021a 86F8CA11 		strb	r1, [r6, #458]
 8243 021e C1F30720 		ubfx	r0, r1, #8, #8
 8244 0222 86F8CB01 		strb	r0, [r6, #459]
 8245 0226 C1F30740 		ubfx	r0, r1, #16, #8
 8246 022a 86F8CC01 		strb	r0, [r6, #460]
 8247 022e 090E     		lsrs	r1, r1, #24
 8248 0230 86F8CD11 		strb	r1, [r6, #461]
4276:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, fs->win.d8, 0, 1) != RES_OK)	/* Write it to the MBR */
 8249              		.loc 1 4276 0
 8250 0234 5521     		movs	r1, #85
 8251 0236 86F8FE11 		strb	r1, [r6, #510]
 8252 023a AA21     		movs	r1, #170
 8253 023c 86F8FF11 		strb	r1, [r6, #511]
4277:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 8254              		.loc 1 4277 0
 8255 0240 3146     		mov	r1, r6
 8256 0242 3846     		mov	r0, r7
 8257 0244 FFF7FEFF 		bl	disk_write
 8258              	.LVL1224:
 8259 0248 0028     		cmp	r0, #0
 8260 024a 40F0B481 		bne	.L809
4279:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8261              		.loc 1 4279 0
 8262 024e F824     		movs	r4, #248
 8263              	.LVL1225:
 8264              	.L772:
4284:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_set(tbl, 0, SS(fs));
ARM GAS  /tmp/cckAXl85.s 			page 244


 8265              		.loc 1 4284 0
 8266 0250 0296     		str	r6, [sp, #8]
 8267              	.LVL1226:
4285:Middlewares/Third_Party/FatFs/src/ff.c **** 	mem_cpy(tbl, "\xEB\xFE\x90" "MSDOS5.0", 11);/* Boot jump code, OEM name */
 8268              		.loc 1 4285 0
 8269 0252 4FF40072 		mov	r2, #512
 8270 0256 0021     		movs	r1, #0
 8271 0258 3046     		mov	r0, r6
 8272 025a FFF7FEFF 		bl	mem_set
 8273              	.LVL1227:
4286:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = SS(fs);								/* Sector size */
 8274              		.loc 1 4286 0
 8275 025e 0B22     		movs	r2, #11
 8276 0260 DA49     		ldr	r1, .L831
 8277 0262 3046     		mov	r0, r6
 8278 0264 FFF7FEFF 		bl	mem_cpy
 8279              	.LVL1228:
4288:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_SecPerClus] = (BYTE)au;			/* Sectors per cluster */
 8280              		.loc 1 4288 0
 8281 0268 0023     		movs	r3, #0
 8282 026a F372     		strb	r3, [r6, #11]
 8283 026c 0223     		movs	r3, #2
 8284 026e 3373     		strb	r3, [r6, #12]
4289:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RsvdSecCnt, n_rsv);	/* Reserved sectors */
 8285              		.loc 1 4289 0
 8286 0270 7573     		strb	r5, [r6, #13]
4290:Middlewares/Third_Party/FatFs/src/ff.c **** 	tbl[BPB_NumFATs] = N_FATS;				/* Number of FATs */
 8287              		.loc 1 4290 0
 8288 0272 86F80EA0 		strb	r10, [r6, #14]
 8289 0276 CAF3072A 		ubfx	r10, r10, #8, #8
 8290              	.LVL1229:
 8291 027a 86F80FA0 		strb	r10, [r6, #15]
4291:Middlewares/Third_Party/FatFs/src/ff.c **** 	i = (fmt == FS_FAT32) ? 0 : N_ROOTDIR;	/* Number of root directory entries */
 8292              		.loc 1 4291 0
 8293 027e 0123     		movs	r3, #1
 8294 0280 3374     		strb	r3, [r6, #16]
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
 8295              		.loc 1 4292 0
 8296 0282 B8F1030F 		cmp	r8, #3
 8297 0286 40F0FE80 		bne	.L810
 8298              	.LVL1230:
 8299 028a 0023     		movs	r3, #0
 8300              	.L773:
 8301              	.LVL1231:
4293:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (n_vol < 0x10000) {					/* Number of total sectors */
 8302              		.loc 1 4293 0 discriminator 4
 8303 028c DAB2     		uxtb	r2, r3
 8304 028e 7274     		strb	r2, [r6, #17]
 8305 0290 9BB2     		uxth	r3, r3
 8306              	.LVL1232:
 8307 0292 1B0A     		lsrs	r3, r3, #8
 8308 0294 B374     		strb	r3, [r6, #18]
4294:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_TotSec16, n_vol);
 8309              		.loc 1 4294 0 discriminator 4
 8310 0296 069B     		ldr	r3, [sp, #24]
 8311 0298 B3F5803F 		cmp	r3, #65536
 8312 029c 80F0F680 		bcs	.L774
ARM GAS  /tmp/cckAXl85.s 			page 245


4295:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 8313              		.loc 1 4295 0
 8314 02a0 F374     		strb	r3, [r6, #19]
 8315 02a2 C3F30723 		ubfx	r3, r3, #8, #8
 8316 02a6 3375     		strb	r3, [r6, #20]
 8317              	.L775:
4299:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_SecPerTrk, 63);		/* Number of sectors per track */
 8318              		.loc 1 4299 0
 8319 02a8 7475     		strb	r4, [r6, #21]
4300:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_NumHeads, 255);		/* Number of heads */
 8320              		.loc 1 4300 0
 8321 02aa 3F23     		movs	r3, #63
 8322 02ac 3376     		strb	r3, [r6, #24]
 8323 02ae 0023     		movs	r3, #0
 8324 02b0 7376     		strb	r3, [r6, #25]
4301:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_DWORD(tbl + BPB_HiddSec, b_vol);		/* Hidden sectors */
 8325              		.loc 1 4301 0
 8326 02b2 FF22     		movs	r2, #255
 8327 02b4 B276     		strb	r2, [r6, #26]
 8328 02b6 F376     		strb	r3, [r6, #27]
4302:Middlewares/Third_Party/FatFs/src/ff.c **** 	n = GET_FATTIME();						/* Use current time as VSN */
 8329              		.loc 1 4302 0
 8330 02b8 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 8331 02bc 3377     		strb	r3, [r6, #28]
 8332 02be 0023     		movs	r3, #0
 8333 02c0 7377     		strb	r3, [r6, #29]
 8334 02c2 B377     		strb	r3, [r6, #30]
 8335 02c4 F377     		strb	r3, [r6, #31]
4303:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32) {
 8336              		.loc 1 4303 0
 8337 02c6 FFF7FEFF 		bl	get_fattime
 8338              	.LVL1233:
 8339 02ca 0790     		str	r0, [sp, #28]
4304:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BS_VolID32, n);		/* VSN */
 8340              		.loc 1 4304 0
 8341 02cc B8F1030F 		cmp	r8, #3
 8342 02d0 40F0EA80 		bne	.L776
4305:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_FATSz32, n_fat);	/* Number of sectors per FAT */
 8343              		.loc 1 4305 0
 8344 02d4 86F84300 		strb	r0, [r6, #67]
 8345 02d8 C0F30723 		ubfx	r3, r0, #8, #8
 8346 02dc 86F84430 		strb	r3, [r6, #68]
 8347 02e0 C0F30743 		ubfx	r3, r0, #16, #8
 8348 02e4 86F84530 		strb	r3, [r6, #69]
 8349 02e8 000E     		lsrs	r0, r0, #24
 8350 02ea 86F84600 		strb	r0, [r6, #70]
4306:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + BPB_RootClus, 2);	/* Root directory start cluster (2) */
 8351              		.loc 1 4306 0
 8352 02ee 86F82490 		strb	r9, [r6, #36]
 8353 02f2 C9F30723 		ubfx	r3, r9, #8, #8
 8354 02f6 86F82530 		strb	r3, [r6, #37]
 8355 02fa C9F30743 		ubfx	r3, r9, #16, #8
 8356 02fe 86F82630 		strb	r3, [r6, #38]
 8357 0302 4FEA1963 		lsr	r3, r9, #24
 8358 0306 86F82730 		strb	r3, [r6, #39]
4307:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FSInfo, 1);		/* FSINFO record offset (VBR + 1) */
 8359              		.loc 1 4307 0
ARM GAS  /tmp/cckAXl85.s 			page 246


 8360 030a 0223     		movs	r3, #2
 8361 030c 86F82C30 		strb	r3, [r6, #44]
 8362 0310 0023     		movs	r3, #0
 8363 0312 86F82D30 		strb	r3, [r6, #45]
 8364 0316 86F82E30 		strb	r3, [r6, #46]
 8365 031a 86F82F30 		strb	r3, [r6, #47]
4308:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_BkBootSec, 6);	/* Backup boot record offset (VBR + 6) */
 8366              		.loc 1 4308 0
 8367 031e 0122     		movs	r2, #1
 8368 0320 86F83020 		strb	r2, [r6, #48]
 8369 0324 86F83130 		strb	r3, [r6, #49]
4309:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum32] = 0x80;			/* Drive number */
 8370              		.loc 1 4309 0
 8371 0328 0622     		movs	r2, #6
 8372 032a 86F83220 		strb	r2, [r6, #50]
 8373 032e 86F83330 		strb	r3, [r6, #51]
4310:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig32] = 0x29;			/* Extended boot signature */
 8374              		.loc 1 4310 0
 8375 0332 8023     		movs	r3, #128
 8376 0334 86F84030 		strb	r3, [r6, #64]
4311:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab32, "NO NAME    " "FAT32   ", 19);	/* Volume label, FAT signature */
 8377              		.loc 1 4311 0
 8378 0338 2923     		movs	r3, #41
 8379 033a 86F84230 		strb	r3, [r6, #66]
4312:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 8380              		.loc 1 4312 0
 8381 033e 1322     		movs	r2, #19
 8382 0340 A349     		ldr	r1, .L831+4
 8383 0342 06F14700 		add	r0, r6, #71
 8384 0346 FFF7FEFF 		bl	mem_cpy
 8385              	.LVL1234:
 8386              	.L777:
4320:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (disk_write(pdrv, tbl, b_vol, 1) != RES_OK)	/* Write it to the VBR sector */
 8387              		.loc 1 4320 0
 8388 034a 5523     		movs	r3, #85
 8389 034c 86F8FE31 		strb	r3, [r6, #510]
 8390 0350 AA23     		movs	r3, #170
 8391 0352 86F8FF31 		strb	r3, [r6, #511]
4321:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_DISK_ERR;
 8392              		.loc 1 4321 0
 8393 0356 0123     		movs	r3, #1
 8394 0358 019A     		ldr	r2, [sp, #4]
 8395 035a 3146     		mov	r1, r6
 8396 035c 3846     		mov	r0, r7
 8397 035e FFF7FEFF 		bl	disk_write
 8398              	.LVL1235:
 8399 0362 0028     		cmp	r0, #0
 8400 0364 40F02981 		bne	.L811
4323:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 6, 1);
 8401              		.loc 1 4323 0
 8402 0368 B8F1030F 		cmp	r8, #3
 8403 036c 06D1     		bne	.L778
4324:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8404              		.loc 1 4324 0
 8405 036e 0123     		movs	r3, #1
 8406 0370 019A     		ldr	r2, [sp, #4]
 8407 0372 0632     		adds	r2, r2, #6
ARM GAS  /tmp/cckAXl85.s 			page 247


 8408 0374 3146     		mov	r1, r6
 8409 0376 3846     		mov	r0, r7
 8410 0378 FFF7FEFF 		bl	disk_write
 8411              	.LVL1236:
 8412              	.L778:
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 8413              		.loc 1 4344 0 discriminator 1
 8414 037c 4FF0000A 		mov	r10, #0
 8415 0380 CDF810B0 		str	fp, [sp, #16]
 8416              	.LVL1237:
 8417              	.L779:
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 8418              		.loc 1 4328 0 discriminator 1
 8419 0384 BAF1000F 		cmp	r10, #0
 8420 0388 00F0AD80 		beq	.L785
 8421 038c DDF810B0 		ldr	fp, [sp, #16]
4350:Middlewares/Third_Party/FatFs/src/ff.c **** 	do {
 8422              		.loc 1 4350 0
 8423 0390 B8F1030F 		cmp	r8, #3
 8424 0394 00D0     		beq	.L787
 8425 0396 039D     		ldr	r5, [sp, #12]
 8426              	.LVL1238:
 8427              	.L787:
4352:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 8428              		.loc 1 4352 0
 8429 0398 009A     		ldr	r2, [sp]
 8430 039a 541C     		adds	r4, r2, #1
 8431              	.LVL1239:
 8432 039c 0123     		movs	r3, #1
 8433 039e 0299     		ldr	r1, [sp, #8]
 8434 03a0 3846     		mov	r0, r7
 8435 03a2 FFF7FEFF 		bl	disk_write
 8436              	.LVL1240:
 8437 03a6 0028     		cmp	r0, #0
 8438 03a8 40F00D81 		bne	.L816
 8439              	.LVL1241:
 8440 03ac 0094     		str	r4, [sp]
4354:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8441              		.loc 1 4354 0
 8442 03ae 013D     		subs	r5, r5, #1
 8443              	.LVL1242:
 8444 03b0 F2D1     		bne	.L787
4364:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_LeadSig, 0x41615252);
 8445              		.loc 1 4364 0
 8446 03b2 B8F1030F 		cmp	r8, #3
 8447 03b6 3FD1     		bne	.L788
4365:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_StrucSig, 0x61417272);
 8448              		.loc 1 4365 0
 8449 03b8 5223     		movs	r3, #82
 8450 03ba 3370     		strb	r3, [r6]
 8451 03bc 7370     		strb	r3, [r6, #1]
 8452 03be 6123     		movs	r3, #97
 8453 03c0 B370     		strb	r3, [r6, #2]
 8454 03c2 4122     		movs	r2, #65
 8455 03c4 F270     		strb	r2, [r6, #3]
4366:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Free_Count, n_clst - 1);	/* Number of free clusters */
 8456              		.loc 1 4366 0
ARM GAS  /tmp/cckAXl85.s 			page 248


 8457 03c6 7221     		movs	r1, #114
 8458 03c8 86F8E411 		strb	r1, [r6, #484]
 8459 03cc 86F8E511 		strb	r1, [r6, #485]
 8460 03d0 86F8E621 		strb	r2, [r6, #486]
 8461 03d4 86F8E731 		strb	r3, [r6, #487]
4367:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_DWORD(tbl + FSI_Nxt_Free, 2);			/* Last allocated cluster# */
 8462              		.loc 1 4367 0
 8463 03d8 0BF1FF33 		add	r3, fp, #-1
 8464 03dc 86F8E831 		strb	r3, [r6, #488]
 8465 03e0 C3F30723 		ubfx	r3, r3, #8, #8
 8466 03e4 86F8E931 		strb	r3, [r6, #489]
 8467 03e8 0BF1FF33 		add	r3, fp, #-1
 8468 03ec C3F30742 		ubfx	r2, r3, #16, #8
 8469 03f0 86F8EA21 		strb	r2, [r6, #490]
 8470 03f4 1B0E     		lsrs	r3, r3, #24
 8471 03f6 86F8EB31 		strb	r3, [r6, #491]
4368:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BS_55AA, 0xAA55);
 8472              		.loc 1 4368 0
 8473 03fa 0223     		movs	r3, #2
 8474 03fc 86F8EC31 		strb	r3, [r6, #492]
 8475 0400 0023     		movs	r3, #0
 8476 0402 86F8ED31 		strb	r3, [r6, #493]
 8477 0406 86F8EE31 		strb	r3, [r6, #494]
 8478 040a 86F8EF31 		strb	r3, [r6, #495]
4369:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 1, 1);	/* Write original (VBR + 1) */
 8479              		.loc 1 4369 0
 8480 040e 5523     		movs	r3, #85
 8481 0410 86F8FE31 		strb	r3, [r6, #510]
 8482 0414 AA23     		movs	r3, #170
 8483 0416 86F8FF31 		strb	r3, [r6, #511]
4370:Middlewares/Third_Party/FatFs/src/ff.c **** 		disk_write(pdrv, tbl, b_vol + 7, 1);	/* Write backup (VBR + 7) */
 8484              		.loc 1 4370 0
 8485 041a 0123     		movs	r3, #1
 8486 041c 019C     		ldr	r4, [sp, #4]
 8487              	.LVL1243:
 8488 041e 2246     		mov	r2, r4
 8489 0420 1A44     		add	r2, r2, r3
 8490 0422 3146     		mov	r1, r6
 8491 0424 3846     		mov	r0, r7
 8492 0426 FFF7FEFF 		bl	disk_write
 8493              	.LVL1244:
4371:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8494              		.loc 1 4371 0
 8495 042a 0123     		movs	r3, #1
 8496 042c 2246     		mov	r2, r4
 8497 042e 0732     		adds	r2, r2, #7
 8498 0430 3146     		mov	r1, r6
 8499 0432 3846     		mov	r0, r7
 8500 0434 FFF7FEFF 		bl	disk_write
 8501              	.LVL1245:
 8502              	.L788:
4374:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8503              		.loc 1 4374 0
 8504 0438 0022     		movs	r2, #0
 8505 043a 1146     		mov	r1, r2
 8506 043c 3846     		mov	r0, r7
 8507 043e FFF7FEFF 		bl	disk_ioctl
ARM GAS  /tmp/cckAXl85.s 			page 249


 8508              	.LVL1246:
 8509 0442 0030     		adds	r0, r0, #0
 8510 0444 18BF     		it	ne
 8511 0446 0120     		movne	r0, #1
 8512 0448 E1E5     		b	.L749
 8513              	.LVL1247:
 8514              	.L825:
4230:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_fat += n;
 8515              		.loc 1 4230 0
 8516 044a 9A44     		add	r10, r10, r3
 8517              	.LVL1248:
4231:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {					/* FAT12/16: Expand FAT size */
 8518              		.loc 1 4231 0
 8519 044c 009A     		ldr	r2, [sp]
 8520 044e 1A44     		add	r2, r2, r3
 8521 0450 0092     		str	r2, [sp]
 8522              	.LVL1249:
 8523 0452 90E6     		b	.L767
 8524              	.LVL1250:
 8525              	.L826:
4238:Middlewares/Third_Party/FatFs/src/ff.c **** 		|| (fmt == FS_FAT32 && n_clst < MIN_FAT32))
 8526              		.loc 1 4238 0 discriminator 1
 8527 0454 40F6F573 		movw	r3, #4085
 8528 0458 9B45     		cmp	fp, r3
 8529 045a 3FF699AE 		bhi	.L768
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8530              		.loc 1 4240 0
 8531 045e 0E20     		movs	r0, #14
 8532 0460 D5E5     		b	.L749
 8533              	.L827:
4239:Middlewares/Third_Party/FatFs/src/ff.c **** 		return FR_MKFS_ABORTED;
 8534              		.loc 1 4239 0 discriminator 1
 8535 0462 4FF6F573 		movw	r3, #65525
 8536 0466 9B45     		cmp	fp, r3
 8537 0468 3FF696AE 		bhi	.L769
4240:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8538              		.loc 1 4240 0
 8539 046c 0E20     		movs	r0, #14
 8540 046e CEE5     		b	.L749
 8541              	.L805:
4244:Middlewares/Third_Party/FatFs/src/ff.c **** 	} else {
 8542              		.loc 1 4244 0
 8543 0470 0C23     		movs	r3, #12
 8544 0472 0293     		str	r3, [sp, #8]
 8545 0474 A1E6     		b	.L770
 8546              	.L806:
4247:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8547              		.loc 1 4247 0
 8548 0476 CDF80880 		str	r8, [sp, #8]
 8549 047a 9EE6     		b	.L770
 8550              	.L807:
4249:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8551              		.loc 1 4249 0
 8552 047c 0623     		movs	r3, #6
 8553 047e 0293     		str	r3, [sp, #8]
 8554 0480 9BE6     		b	.L770
 8555              	.LVL1251:
ARM GAS  /tmp/cckAXl85.s 			page 250


 8556              	.L808:
4262:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {	/* Create partition table (FDISK) */
 8557              		.loc 1 4262 0
 8558 0482 F024     		movs	r4, #240
 8559 0484 E4E6     		b	.L772
 8560              	.LVL1252:
 8561              	.L810:
4292:Middlewares/Third_Party/FatFs/src/ff.c **** 	ST_WORD(tbl + BPB_RootEntCnt, i);
 8562              		.loc 1 4292 0
 8563 0486 4FF40073 		mov	r3, #512
 8564 048a FFE6     		b	.L773
 8565              	.LVL1253:
 8566              	.L774:
4297:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8567              		.loc 1 4297 0
 8568 048c 86F82030 		strb	r3, [r6, #32]
 8569 0490 C3F30722 		ubfx	r2, r3, #8, #8
 8570 0494 86F82120 		strb	r2, [r6, #33]
 8571 0498 C3F30742 		ubfx	r2, r3, #16, #8
 8572 049c 86F82220 		strb	r2, [r6, #34]
 8573 04a0 1B0E     		lsrs	r3, r3, #24
 8574 04a2 86F82330 		strb	r3, [r6, #35]
 8575 04a6 FFE6     		b	.L775
 8576              	.L776:
4314:Middlewares/Third_Party/FatFs/src/ff.c **** 		ST_WORD(tbl + BPB_FATSz16, n_fat);	/* Number of sectors per FAT */
 8577              		.loc 1 4314 0
 8578 04a8 86F82700 		strb	r0, [r6, #39]
 8579 04ac C0F30723 		ubfx	r3, r0, #8, #8
 8580 04b0 86F82830 		strb	r3, [r6, #40]
 8581 04b4 C0F30743 		ubfx	r3, r0, #16, #8
 8582 04b8 86F82930 		strb	r3, [r6, #41]
 8583 04bc 000E     		lsrs	r0, r0, #24
 8584 04be 86F82A00 		strb	r0, [r6, #42]
4315:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_DrvNum] = 0x80;				/* Drive number */
 8585              		.loc 1 4315 0
 8586 04c2 86F81690 		strb	r9, [r6, #22]
 8587 04c6 C9F30723 		ubfx	r3, r9, #8, #8
 8588 04ca F375     		strb	r3, [r6, #23]
4316:Middlewares/Third_Party/FatFs/src/ff.c **** 		tbl[BS_BootSig] = 0x29;				/* Extended boot signature */
 8589              		.loc 1 4316 0
 8590 04cc 8023     		movs	r3, #128
 8591 04ce 86F82430 		strb	r3, [r6, #36]
4317:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_cpy(tbl + BS_VolLab, "NO NAME    " "FAT     ", 19);	/* Volume label, FAT signature */
 8592              		.loc 1 4317 0
 8593 04d2 2923     		movs	r3, #41
 8594 04d4 86F82630 		strb	r3, [r6, #38]
4318:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8595              		.loc 1 4318 0
 8596 04d8 1322     		movs	r2, #19
 8597 04da 3E49     		ldr	r1, .L831+8
 8598 04dc 06F12B00 		add	r0, r6, #43
 8599 04e0 FFF7FEFF 		bl	mem_cpy
 8600              	.LVL1254:
 8601 04e4 31E7     		b	.L777
 8602              	.LVL1255:
 8603              	.L785:
4329:Middlewares/Third_Party/FatFs/src/ff.c **** 		n = md;								/* Media descriptor byte */
ARM GAS  /tmp/cckAXl85.s 			page 251


 8604              		.loc 1 4329 0
 8605 04e6 4FF40072 		mov	r2, #512
 8606 04ea 0021     		movs	r1, #0
 8607 04ec 0298     		ldr	r0, [sp, #8]
 8608 04ee FFF7FEFF 		bl	mem_set
 8609              	.LVL1256:
4330:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (fmt != FS_FAT32) {
 8610              		.loc 1 4330 0
 8611 04f2 2246     		mov	r2, r4
4331:Middlewares/Third_Party/FatFs/src/ff.c **** 			n |= (fmt == FS_FAT12) ? 0x00FFFF00 : 0xFFFFFF00;
 8612              		.loc 1 4331 0
 8613 04f4 B8F1030F 		cmp	r8, #3
 8614 04f8 39D0     		beq	.L780
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 8615              		.loc 1 4332 0
 8616 04fa B8F1010F 		cmp	r8, #1
 8617 04fe 33D1     		bne	.L812
 8618 0500 354B     		ldr	r3, .L831+12
 8619              	.L781:
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 8620              		.loc 1 4332 0 is_stmt 0 discriminator 4
 8621 0502 1343     		orrs	r3, r3, r2
 8622 0504 0793     		str	r3, [sp, #28]
4333:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
 8623              		.loc 1 4333 0 is_stmt 1 discriminator 4
 8624 0506 3370     		strb	r3, [r6]
 8625 0508 BDF81C30 		ldrh	r3, [sp, #28]
 8626 050c 1B0A     		lsrs	r3, r3, #8
 8627 050e 7370     		strb	r3, [r6, #1]
 8628 0510 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 8629 0514 B370     		strb	r3, [r6, #2]
 8630 0516 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 8631 051a F370     		strb	r3, [r6, #3]
 8632              	.L782:
4340:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 8633              		.loc 1 4340 0
 8634 051c 009A     		ldr	r2, [sp]
 8635 051e 02F1010B 		add	fp, r2, #1
 8636              	.LVL1257:
 8637 0522 0123     		movs	r3, #1
 8638 0524 0299     		ldr	r1, [sp, #8]
 8639 0526 3846     		mov	r0, r7
 8640 0528 FFF7FEFF 		bl	disk_write
 8641              	.LVL1258:
 8642 052c 0028     		cmp	r0, #0
 8643 052e 46D1     		bne	.L813
4342:Middlewares/Third_Party/FatFs/src/ff.c **** 		for (n = 1; n < n_fat; n++) {		/* This loop may take a time on FAT32 volume due to many single se
 8644              		.loc 1 4342 0
 8645 0530 4FF40072 		mov	r2, #512
 8646 0534 0021     		movs	r1, #0
 8647 0536 0298     		ldr	r0, [sp, #8]
 8648 0538 FFF7FEFF 		bl	mem_set
 8649              	.LVL1259:
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 8650              		.loc 1 4343 0
 8651 053c 0123     		movs	r3, #1
 8652 053e 0793     		str	r3, [sp, #28]
ARM GAS  /tmp/cckAXl85.s 			page 252


4340:Middlewares/Third_Party/FatFs/src/ff.c **** 			return FR_DISK_ERR;
 8653              		.loc 1 4340 0
 8654 0540 CDF800B0 		str	fp, [sp]
 8655              	.L783:
 8656              	.LVL1260:
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 8657              		.loc 1 4343 0 discriminator 1
 8658 0544 079B     		ldr	r3, [sp, #28]
 8659 0546 9945     		cmp	r9, r3
 8660 0548 2AD9     		bls	.L828
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 8661              		.loc 1 4344 0
 8662 054a 009A     		ldr	r2, [sp]
 8663 054c 02F1010B 		add	fp, r2, #1
 8664              	.LVL1261:
 8665 0550 0123     		movs	r3, #1
 8666 0552 0299     		ldr	r1, [sp, #8]
 8667 0554 3846     		mov	r0, r7
 8668 0556 FFF7FEFF 		bl	disk_write
 8669              	.LVL1262:
 8670 055a 90BB     		cbnz	r0, .L814
4343:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (disk_write(pdrv, tbl, wsect++, 1) != RES_OK)
 8671              		.loc 1 4343 0 discriminator 2
 8672 055c 079B     		ldr	r3, [sp, #28]
 8673 055e 0133     		adds	r3, r3, #1
 8674 0560 0793     		str	r3, [sp, #28]
4344:Middlewares/Third_Party/FatFs/src/ff.c **** 				return FR_DISK_ERR;
 8675              		.loc 1 4344 0 discriminator 2
 8676 0562 CDF800B0 		str	fp, [sp]
 8677 0566 EDE7     		b	.L783
 8678              	.LVL1263:
 8679              	.L812:
4332:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT12/16) */
 8680              		.loc 1 4332 0
 8681 0568 6FF0FF03 		mvn	r3, #255
 8682 056c C9E7     		b	.L781
 8683              	.L780:
4335:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 0, n);			/* Reserve cluster #0-1 (FAT32) */
 8684              		.loc 1 4335 0
 8685 056e 64F0FF03 		orn	r3, r4, #255
 8686 0572 0793     		str	r3, [sp, #28]
4336:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 4, 0xFFFFFFFF);
 8687              		.loc 1 4336 0
 8688 0574 3370     		strb	r3, [r6]
 8689 0576 BDF81C30 		ldrh	r3, [sp, #28]
 8690 057a 1B0A     		lsrs	r3, r3, #8
 8691 057c 7370     		strb	r3, [r6, #1]
 8692 057e 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 8693 0582 B370     		strb	r3, [r6, #2]
 8694 0584 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 8695 0588 F370     		strb	r3, [r6, #3]
4337:Middlewares/Third_Party/FatFs/src/ff.c **** 			ST_DWORD(tbl + 8, 0x0FFFFFFF);	/* Reserve cluster #2 for root directory */
 8696              		.loc 1 4337 0
 8697 058a FF23     		movs	r3, #255
 8698 058c 3371     		strb	r3, [r6, #4]
 8699 058e 7371     		strb	r3, [r6, #5]
 8700 0590 B371     		strb	r3, [r6, #6]
ARM GAS  /tmp/cckAXl85.s 			page 253


 8701 0592 F371     		strb	r3, [r6, #7]
4338:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8702              		.loc 1 4338 0
 8703 0594 3372     		strb	r3, [r6, #8]
 8704 0596 7372     		strb	r3, [r6, #9]
 8705 0598 B372     		strb	r3, [r6, #10]
 8706 059a 0F23     		movs	r3, #15
 8707 059c F372     		strb	r3, [r6, #11]
 8708 059e BDE7     		b	.L782
 8709              	.L828:
4328:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* 1st sector of the FAT  */
 8710              		.loc 1 4328 0 discriminator 2
 8711 05a0 0AF1010A 		add	r10, r10, #1
 8712              	.LVL1264:
 8713 05a4 EEE6     		b	.L779
 8714              	.LVL1265:
 8715              	.L790:
4162:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs = FatFs[vol];
 8716              		.loc 1 4162 0
 8717 05a6 0B20     		movs	r0, #11
 8718              	.LVL1266:
 8719 05a8 31E5     		b	.L749
 8720              	.LVL1267:
 8721              	.L791:
4164:Middlewares/Third_Party/FatFs/src/ff.c **** 	fs->fs_type = 0;
 8722              		.loc 1 4164 0
 8723 05aa 0C20     		movs	r0, #12
 8724              	.LVL1268:
 8725 05ac 2FE5     		b	.L749
 8726              	.LVL1269:
 8727              	.L794:
4188:Middlewares/Third_Party/FatFs/src/ff.c **** 		b_vol = (sfd) ? 0 : 63;		/* Volume start sector */
 8728              		.loc 1 4188 0
 8729 05ae 0120     		movs	r0, #1
 8730 05b0 2DE5     		b	.L749
 8731              	.L795:
 8732 05b2 0120     		movs	r0, #1
 8733 05b4 2BE5     		b	.L749
 8734              	.LVL1270:
 8735              	.L809:
4278:Middlewares/Third_Party/FatFs/src/ff.c **** 			md = 0xF8;
 8736              		.loc 1 4278 0
 8737 05b6 0120     		movs	r0, #1
 8738 05b8 29E5     		b	.L749
 8739              	.LVL1271:
 8740              	.L811:
4322:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (fmt == FS_FAT32)					/* Write backup VBR if needed (VBR + 6) */
 8741              		.loc 1 4322 0
 8742 05ba 0120     		movs	r0, #1
 8743 05bc 27E5     		b	.L749
 8744              	.LVL1272:
 8745              	.L813:
4341:Middlewares/Third_Party/FatFs/src/ff.c **** 		mem_set(tbl, 0, SS(fs));			/* Fill following FAT entries with zero */
 8746              		.loc 1 4341 0
 8747 05be 0120     		movs	r0, #1
 8748 05c0 25E5     		b	.L749
 8749              	.L814:
ARM GAS  /tmp/cckAXl85.s 			page 254


4345:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 8750              		.loc 1 4345 0
 8751 05c2 0120     		movs	r0, #1
 8752 05c4 23E5     		b	.L749
 8753              	.LVL1273:
 8754              	.L816:
4353:Middlewares/Third_Party/FatFs/src/ff.c **** 	} while (--i);
 8755              		.loc 1 4353 0
 8756 05c6 0120     		movs	r0, #1
 8757 05c8 21E5     		b	.L749
 8758              	.L832:
 8759 05ca 00BF     		.align	2
 8760              	.L831:
 8761 05cc 00000000 		.word	.LC1
 8762 05d0 0C000000 		.word	.LC2
 8763 05d4 20000000 		.word	.LC3
 8764 05d8 00FFFF00 		.word	16776960
 8765              		.cfi_endproc
 8766              	.LFE123:
 8768              		.section	.text.f_gets,"ax",%progbits
 8769              		.align	1
 8770              		.global	f_gets
 8771              		.syntax unified
 8772              		.thumb
 8773              		.thumb_func
 8774              		.fpu softvfp
 8776              	f_gets:
 8777              	.LFB124:
4462:Middlewares/Third_Party/FatFs/src/ff.c **** 	int n = 0;
 8778              		.loc 1 4462 0
 8779              		.cfi_startproc
 8780              		@ args = 0, pretend = 0, frame = 8
 8781              		@ frame_needed = 0, uses_anonymous_args = 0
 8782              	.LVL1274:
 8783 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8784              	.LCFI115:
 8785              		.cfi_def_cfa_offset 24
 8786              		.cfi_offset 4, -24
 8787              		.cfi_offset 5, -20
 8788              		.cfi_offset 6, -16
 8789              		.cfi_offset 7, -12
 8790              		.cfi_offset 8, -8
 8791              		.cfi_offset 14, -4
 8792 0004 82B0     		sub	sp, sp, #8
 8793              	.LCFI116:
 8794              		.cfi_def_cfa_offset 32
 8795 0006 8046     		mov	r8, r0
 8796 0008 0E46     		mov	r6, r1
 8797 000a 1746     		mov	r7, r2
 8798              	.LVL1275:
4464:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE s[2];
 8799              		.loc 1 4464 0
 8800 000c 0546     		mov	r5, r0
4463:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, *p = buff;
 8801              		.loc 1 4463 0
 8802 000e 0024     		movs	r4, #0
 8803              	.LVL1276:
ARM GAS  /tmp/cckAXl85.s 			page 255


 8804              	.L834:
4469:Middlewares/Third_Party/FatFs/src/ff.c **** #if _USE_LFN && _LFN_UNICODE
 8805              		.loc 1 4469 0
 8806 0010 731E     		subs	r3, r6, #1
 8807 0012 9C42     		cmp	r4, r3
 8808 0014 14DA     		bge	.L835
4514:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (rc != 1) break;
 8809              		.loc 1 4514 0
 8810 0016 6B46     		mov	r3, sp
 8811 0018 0122     		movs	r2, #1
 8812 001a 01A9     		add	r1, sp, #4
 8813 001c 3846     		mov	r0, r7
 8814 001e FFF7FEFF 		bl	f_read
 8815              	.LVL1277:
4515:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = s[0];
 8816              		.loc 1 4515 0
 8817 0022 009B     		ldr	r3, [sp]
 8818 0024 012B     		cmp	r3, #1
 8819 0026 0BD1     		bne	.L835
4516:Middlewares/Third_Party/FatFs/src/ff.c **** #endif
 8820              		.loc 1 4516 0
 8821 0028 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 8822              	.LVL1278:
4518:Middlewares/Third_Party/FatFs/src/ff.c **** 		*p++ = c;
 8823              		.loc 1 4518 0
 8824 002c 0D2B     		cmp	r3, #13
 8825 002e EFD0     		beq	.L834
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8826              		.loc 1 4519 0
 8827 0030 6A1C     		adds	r2, r5, #1
 8828              	.LVL1279:
 8829 0032 2B70     		strb	r3, [r5]
4520:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '\n') break;		/* Break on EOL */
 8830              		.loc 1 4520 0
 8831 0034 0134     		adds	r4, r4, #1
 8832              	.LVL1280:
4521:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
 8833              		.loc 1 4521 0
 8834 0036 0A2B     		cmp	r3, #10
 8835 0038 01D0     		beq	.L839
4519:Middlewares/Third_Party/FatFs/src/ff.c **** 		n++;
 8836              		.loc 1 4519 0
 8837 003a 1546     		mov	r5, r2
 8838 003c E8E7     		b	.L834
 8839              	.L839:
 8840 003e 1546     		mov	r5, r2
 8841              	.LVL1281:
 8842              	.L835:
4523:Middlewares/Third_Party/FatFs/src/ff.c **** 	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
 8843              		.loc 1 4523 0
 8844 0040 0023     		movs	r3, #0
 8845 0042 2B70     		strb	r3, [r5]
4524:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8846              		.loc 1 4524 0
 8847 0044 1CB1     		cbz	r4, .L840
 8848 0046 4046     		mov	r0, r8
 8849              	.L833:
ARM GAS  /tmp/cckAXl85.s 			page 256


4525:Middlewares/Third_Party/FatFs/src/ff.c **** 
 8850              		.loc 1 4525 0
 8851 0048 02B0     		add	sp, sp, #8
 8852              	.LCFI117:
 8853              		.cfi_remember_state
 8854              		.cfi_def_cfa_offset 24
 8855              		@ sp needed
 8856 004a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8857              	.LVL1282:
 8858              	.L840:
 8859              	.LCFI118:
 8860              		.cfi_restore_state
4524:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8861              		.loc 1 4524 0
 8862 004e 0020     		movs	r0, #0
 8863 0050 FAE7     		b	.L833
 8864              		.cfi_endproc
 8865              	.LFE124:
 8867              		.section	.text.f_putc,"ax",%progbits
 8868              		.align	1
 8869              		.global	f_putc
 8870              		.syntax unified
 8871              		.thumb
 8872              		.thumb_func
 8873              		.fpu softvfp
 8875              	f_putc:
 8876              	.LFB126:
4596:Middlewares/Third_Party/FatFs/src/ff.c **** 
4597:Middlewares/Third_Party/FatFs/src/ff.c **** 
4598:Middlewares/Third_Party/FatFs/src/ff.c **** 
4599:Middlewares/Third_Party/FatFs/src/ff.c **** int f_putc (
4600:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c,	/* A character to be output */
4601:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp		/* Pointer to the file object */
4602:Middlewares/Third_Party/FatFs/src/ff.c **** )
4603:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8877              		.loc 1 4603 0
 8878              		.cfi_startproc
 8879              		@ args = 0, pretend = 0, frame = 80
 8880              		@ frame_needed = 0, uses_anonymous_args = 0
 8881              	.LVL1283:
 8882 0000 00B5     		push	{lr}
 8883              	.LCFI119:
 8884              		.cfi_def_cfa_offset 4
 8885              		.cfi_offset 14, -4
 8886 0002 95B0     		sub	sp, sp, #84
 8887              	.LCFI120:
 8888              		.cfi_def_cfa_offset 88
4604:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4605:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4606:Middlewares/Third_Party/FatFs/src/ff.c **** 
4607:Middlewares/Third_Party/FatFs/src/ff.c **** 
4608:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;			/* Initialize output buffer */
 8889              		.loc 1 4608 0
 8890 0004 0191     		str	r1, [sp, #4]
4609:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8891              		.loc 1 4609 0
 8892 0006 0023     		movs	r3, #0
ARM GAS  /tmp/cckAXl85.s 			page 257


 8893 0008 0293     		str	r3, [sp, #8]
 8894 000a 0393     		str	r3, [sp, #12]
4610:Middlewares/Third_Party/FatFs/src/ff.c **** 
4611:Middlewares/Third_Party/FatFs/src/ff.c **** 	putc_bfd(&pb, c);	/* Put a character */
 8895              		.loc 1 4611 0
 8896 000c 0146     		mov	r1, r0
 8897              	.LVL1284:
 8898 000e 01A8     		add	r0, sp, #4
 8899              	.LVL1285:
 8900 0010 FFF7FEFF 		bl	putc_bfd
 8901              	.LVL1286:
4612:Middlewares/Third_Party/FatFs/src/ff.c **** 
4613:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0	/* Flush buffered characters to the file */
 8902              		.loc 1 4613 0
 8903 0014 029A     		ldr	r2, [sp, #8]
 8904 0016 002A     		cmp	r2, #0
 8905 0018 0DDB     		blt	.L844
4614:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8906              		.loc 1 4614 0
 8907 001a 6B46     		mov	r3, sp
 8908 001c 04A9     		add	r1, sp, #16
 8909 001e 0198     		ldr	r0, [sp, #4]
 8910 0020 FFF7FEFF 		bl	f_write
 8911              	.LVL1287:
 8912 0024 50B9     		cbnz	r0, .L845
4615:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 8913              		.loc 1 4615 0
 8914 0026 009B     		ldr	r3, [sp]
 8915 0028 029A     		ldr	r2, [sp, #8]
 8916 002a 9A42     		cmp	r2, r3
 8917 002c 09D1     		bne	.L846
 8918              		.loc 1 4615 0 is_stmt 0 discriminator 1
 8919 002e 0398     		ldr	r0, [sp, #12]
 8920              	.L842:
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4617:Middlewares/Third_Party/FatFs/src/ff.c **** }
 8921              		.loc 1 4617 0 is_stmt 1
 8922 0030 15B0     		add	sp, sp, #84
 8923              	.LCFI121:
 8924              		.cfi_remember_state
 8925              		.cfi_def_cfa_offset 4
 8926              		@ sp needed
 8927 0032 5DF804FB 		ldr	pc, [sp], #4
 8928              	.L844:
 8929              	.LCFI122:
 8930              		.cfi_restore_state
4616:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 8931              		.loc 1 4616 0
 8932 0036 4FF0FF30 		mov	r0, #-1
 8933 003a F9E7     		b	.L842
 8934              	.L845:
 8935 003c 4FF0FF30 		mov	r0, #-1
 8936 0040 F6E7     		b	.L842
 8937              	.L846:
 8938 0042 4FF0FF30 		mov	r0, #-1
 8939 0046 F3E7     		b	.L842
 8940              		.cfi_endproc
ARM GAS  /tmp/cckAXl85.s 			page 258


 8941              	.LFE126:
 8943              		.section	.text.f_puts,"ax",%progbits
 8944              		.align	1
 8945              		.global	f_puts
 8946              		.syntax unified
 8947              		.thumb
 8948              		.thumb_func
 8949              		.fpu softvfp
 8951              	f_puts:
 8952              	.LFB127:
4618:Middlewares/Third_Party/FatFs/src/ff.c **** 
4619:Middlewares/Third_Party/FatFs/src/ff.c **** 
4620:Middlewares/Third_Party/FatFs/src/ff.c **** 
4621:Middlewares/Third_Party/FatFs/src/ff.c **** 
4622:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4623:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a string to the file                                              */
4624:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4625:Middlewares/Third_Party/FatFs/src/ff.c **** 
4626:Middlewares/Third_Party/FatFs/src/ff.c **** int f_puts (
4627:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* str,	/* Pointer to the string to be output */
4628:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp				/* Pointer to the file object */
4629:Middlewares/Third_Party/FatFs/src/ff.c **** )
4630:Middlewares/Third_Party/FatFs/src/ff.c **** {
 8953              		.loc 1 4630 0
 8954              		.cfi_startproc
 8955              		@ args = 0, pretend = 0, frame = 80
 8956              		@ frame_needed = 0, uses_anonymous_args = 0
 8957              	.LVL1288:
 8958 0000 10B5     		push	{r4, lr}
 8959              	.LCFI123:
 8960              		.cfi_def_cfa_offset 8
 8961              		.cfi_offset 4, -8
 8962              		.cfi_offset 14, -4
 8963 0002 94B0     		sub	sp, sp, #80
 8964              	.LCFI124:
 8965              		.cfi_def_cfa_offset 88
 8966 0004 0446     		mov	r4, r0
4631:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4632:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw;
4633:Middlewares/Third_Party/FatFs/src/ff.c **** 
4634:Middlewares/Third_Party/FatFs/src/ff.c **** 
4635:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 8967              		.loc 1 4635 0
 8968 0006 0191     		str	r1, [sp, #4]
4636:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 8969              		.loc 1 4636 0
 8970 0008 0023     		movs	r3, #0
 8971 000a 0293     		str	r3, [sp, #8]
 8972 000c 0393     		str	r3, [sp, #12]
4637:Middlewares/Third_Party/FatFs/src/ff.c **** 
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 	while (*str)			/* Put the string */
 8973              		.loc 1 4638 0
 8974 000e 03E0     		b	.L849
 8975              	.LVL1289:
 8976              	.L850:
4639:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 8977              		.loc 1 4639 0
ARM GAS  /tmp/cckAXl85.s 			page 259


 8978 0010 0134     		adds	r4, r4, #1
 8979              	.LVL1290:
 8980 0012 01A8     		add	r0, sp, #4
 8981 0014 FFF7FEFF 		bl	putc_bfd
 8982              	.LVL1291:
 8983              	.L849:
4638:Middlewares/Third_Party/FatFs/src/ff.c **** 		putc_bfd(&pb, *str++);
 8984              		.loc 1 4638 0
 8985 0018 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 8986 001a 0029     		cmp	r1, #0
 8987 001c F8D1     		bne	.L850
4640:Middlewares/Third_Party/FatFs/src/ff.c **** 
4641:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 8988              		.loc 1 4641 0
 8989 001e 029A     		ldr	r2, [sp, #8]
 8990 0020 002A     		cmp	r2, #0
 8991 0022 0CDB     		blt	.L852
4642:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 8992              		.loc 1 4642 0
 8993 0024 6B46     		mov	r3, sp
 8994 0026 04A9     		add	r1, sp, #16
 8995 0028 0198     		ldr	r0, [sp, #4]
 8996 002a FFF7FEFF 		bl	f_write
 8997              	.LVL1292:
 8998 002e 48B9     		cbnz	r0, .L853
4643:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 8999              		.loc 1 4643 0
 9000 0030 009B     		ldr	r3, [sp]
 9001 0032 029A     		ldr	r2, [sp, #8]
 9002 0034 9A42     		cmp	r2, r3
 9003 0036 08D1     		bne	.L854
 9004              		.loc 1 4643 0 is_stmt 0 discriminator 1
 9005 0038 0398     		ldr	r0, [sp, #12]
 9006              	.L848:
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4645:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9007              		.loc 1 4645 0 is_stmt 1
 9008 003a 14B0     		add	sp, sp, #80
 9009              	.LCFI125:
 9010              		.cfi_remember_state
 9011              		.cfi_def_cfa_offset 8
 9012              		@ sp needed
 9013 003c 10BD     		pop	{r4, pc}
 9014              	.LVL1293:
 9015              	.L852:
 9016              	.LCFI126:
 9017              		.cfi_restore_state
4644:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 9018              		.loc 1 4644 0
 9019 003e 4FF0FF30 		mov	r0, #-1
 9020 0042 FAE7     		b	.L848
 9021              	.L853:
 9022 0044 4FF0FF30 		mov	r0, #-1
 9023 0048 F7E7     		b	.L848
 9024              	.L854:
 9025 004a 4FF0FF30 		mov	r0, #-1
 9026 004e F4E7     		b	.L848
ARM GAS  /tmp/cckAXl85.s 			page 260


 9027              		.cfi_endproc
 9028              	.LFE127:
 9030              		.section	.text.f_printf,"ax",%progbits
 9031              		.align	1
 9032              		.global	f_printf
 9033              		.syntax unified
 9034              		.thumb
 9035              		.thumb_func
 9036              		.fpu softvfp
 9038              	f_printf:
 9039              	.LFB128:
4646:Middlewares/Third_Party/FatFs/src/ff.c **** 
4647:Middlewares/Third_Party/FatFs/src/ff.c **** 
4648:Middlewares/Third_Party/FatFs/src/ff.c **** 
4649:Middlewares/Third_Party/FatFs/src/ff.c **** 
4650:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4651:Middlewares/Third_Party/FatFs/src/ff.c **** /* Put a formatted string to the file                                    */
4652:Middlewares/Third_Party/FatFs/src/ff.c **** /*-----------------------------------------------------------------------*/
4653:Middlewares/Third_Party/FatFs/src/ff.c **** 
4654:Middlewares/Third_Party/FatFs/src/ff.c **** int f_printf (
4655:Middlewares/Third_Party/FatFs/src/ff.c **** 	FIL* fp,			/* Pointer to the file object */
4656:Middlewares/Third_Party/FatFs/src/ff.c **** 	const TCHAR* fmt,	/* Pointer to the format string */
4657:Middlewares/Third_Party/FatFs/src/ff.c **** 	...					/* Optional arguments... */
4658:Middlewares/Third_Party/FatFs/src/ff.c **** )
4659:Middlewares/Third_Party/FatFs/src/ff.c **** {
 9040              		.loc 1 4659 0
 9041              		.cfi_startproc
 9042              		@ args = 4, pretend = 12, frame = 104
 9043              		@ frame_needed = 0, uses_anonymous_args = 1
 9044              	.LVL1294:
 9045 0000 0EB4     		push	{r1, r2, r3}
 9046              	.LCFI127:
 9047              		.cfi_def_cfa_offset 12
 9048              		.cfi_offset 1, -12
 9049              		.cfi_offset 2, -8
 9050              		.cfi_offset 3, -4
 9051 0002 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 9052              	.LCFI128:
 9053              		.cfi_def_cfa_offset 44
 9054              		.cfi_offset 4, -44
 9055              		.cfi_offset 5, -40
 9056              		.cfi_offset 6, -36
 9057              		.cfi_offset 7, -32
 9058              		.cfi_offset 8, -28
 9059              		.cfi_offset 9, -24
 9060              		.cfi_offset 10, -20
 9061              		.cfi_offset 14, -16
 9062 0006 9BB0     		sub	sp, sp, #108
 9063              	.LCFI129:
 9064              		.cfi_def_cfa_offset 152
 9065 0008 23AB     		add	r3, sp, #140
 9066 000a 53F8046B 		ldr	r6, [r3], #4
4660:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_list arp;
4661:Middlewares/Third_Party/FatFs/src/ff.c **** 	BYTE f, r;
4662:Middlewares/Third_Party/FatFs/src/ff.c **** 	UINT nw, i, j, w;
4663:Middlewares/Third_Party/FatFs/src/ff.c **** 	DWORD v;
4664:Middlewares/Third_Party/FatFs/src/ff.c **** 	TCHAR c, d, s[16], *p;
ARM GAS  /tmp/cckAXl85.s 			page 261


4665:Middlewares/Third_Party/FatFs/src/ff.c **** 	putbuff pb;
4666:Middlewares/Third_Party/FatFs/src/ff.c **** 
4667:Middlewares/Third_Party/FatFs/src/ff.c **** 
4668:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.fp = fp;				/* Initialize output buffer */
 9067              		.loc 1 4668 0
 9068 000e 0190     		str	r0, [sp, #4]
4669:Middlewares/Third_Party/FatFs/src/ff.c **** 	pb.nchr = pb.idx = 0;
 9069              		.loc 1 4669 0
 9070 0010 0022     		movs	r2, #0
 9071 0012 0292     		str	r2, [sp, #8]
 9072 0014 0392     		str	r2, [sp, #12]
4670:Middlewares/Third_Party/FatFs/src/ff.c **** 
4671:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_start(arp, fmt);
 9073              		.loc 1 4671 0
 9074 0016 1993     		str	r3, [sp, #100]
 9075              	.LVL1295:
 9076              	.L857:
4672:Middlewares/Third_Party/FatFs/src/ff.c **** 
4673:Middlewares/Third_Party/FatFs/src/ff.c **** 	for (;;) {
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9077              		.loc 1 4674 0
 9078 0018 741C     		adds	r4, r6, #1
 9079              	.LVL1296:
 9080 001a 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9081              	.LVL1297:
4675:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9082              		.loc 1 4675 0
 9083 001c 0029     		cmp	r1, #0
 9084 001e 00F0FF80 		beq	.L858
4676:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c != '%') {				/* Non escape character */
 9085              		.loc 1 4676 0
 9086 0022 2529     		cmp	r1, #37
 9087 0024 04D0     		beq	.L859
4677:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c);
 9088              		.loc 1 4677 0
 9089 0026 01A8     		add	r0, sp, #4
 9090 0028 FFF7FEFF 		bl	putc_bfd
 9091              	.LVL1298:
4674:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 0) break;			/* End of string */
 9092              		.loc 1 4674 0
 9093 002c 2646     		mov	r6, r4
4678:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
 9094              		.loc 1 4678 0
 9095 002e F3E7     		b	.L857
 9096              	.LVL1299:
 9097              	.L859:
4679:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		w = f = 0;
4681:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9098              		.loc 1 4681 0
 9099 0030 0236     		adds	r6, r6, #2
 9100              	.LVL1300:
 9101 0032 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 9102              	.LVL1301:
4682:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == '0') {				/* Flag: '0' padding */
 9103              		.loc 1 4682 0
 9104 0034 3029     		cmp	r1, #48
ARM GAS  /tmp/cckAXl85.s 			page 262


 9105 0036 04D0     		beq	.L912
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
4684:Middlewares/Third_Party/FatFs/src/ff.c **** 		} else {
4685:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (c == '-') {			/* Flag: left justified */
 9106              		.loc 1 4685 0
 9107 0038 2D29     		cmp	r1, #45
 9108 003a 06D0     		beq	.L913
4680:Middlewares/Third_Party/FatFs/src/ff.c **** 		c = *fmt++;
 9109              		.loc 1 4680 0
 9110 003c 0027     		movs	r7, #0
 9111              	.LVL1302:
 9112              	.L862:
4683:Middlewares/Third_Party/FatFs/src/ff.c **** 			f = 1; c = *fmt++;
 9113              		.loc 1 4683 0
 9114 003e 0024     		movs	r4, #0
 9115 0040 0EE0     		b	.L863
 9116              	.LVL1303:
 9117              	.L912:
 9118 0042 A61C     		adds	r6, r4, #2
 9119              	.LVL1304:
 9120 0044 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 9121              	.LVL1305:
 9122 0046 0127     		movs	r7, #1
 9123 0048 F9E7     		b	.L862
 9124              	.LVL1306:
 9125              	.L913:
4686:Middlewares/Third_Party/FatFs/src/ff.c **** 				f = 2; c = *fmt++;
 9126              		.loc 1 4686 0
 9127 004a A61C     		adds	r6, r4, #2
 9128              	.LVL1307:
 9129 004c 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 9130              	.LVL1308:
 9131 004e 0227     		movs	r7, #2
 9132 0050 F5E7     		b	.L862
 9133              	.LVL1309:
 9134              	.L864:
4687:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4688:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (IsDigit(c)) {		/* Precision */
4690:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9135              		.loc 1 4690 0
 9136 0052 04EB8404 		add	r4, r4, r4, lsl #2
 9137              	.LVL1310:
 9138 0056 6300     		lsls	r3, r4, #1
 9139 0058 CC18     		adds	r4, r1, r3
 9140 005a 303C     		subs	r4, r4, #48
 9141              	.LVL1311:
4691:Middlewares/Third_Party/FatFs/src/ff.c **** 			c = *fmt++;
 9142              		.loc 1 4691 0
 9143 005c 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9144              	.LVL1312:
 9145 005e 0136     		adds	r6, r6, #1
 9146              	.LVL1313:
 9147              	.L863:
4689:Middlewares/Third_Party/FatFs/src/ff.c **** 			w = w * 10 + c - '0';
 9148              		.loc 1 4689 0
 9149 0060 A1F13002 		sub	r2, r1, #48
ARM GAS  /tmp/cckAXl85.s 			page 263


 9150 0064 D2B2     		uxtb	r2, r2
 9151 0066 092A     		cmp	r2, #9
 9152 0068 F3D9     		bls	.L864
4692:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4693:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (c == 'l' || c == 'L') {	/* Prefix: Size is long int */
 9153              		.loc 1 4693 0
 9154 006a 6C29     		cmp	r1, #108
 9155 006c 1ED0     		beq	.L865
 9156              		.loc 1 4693 0 is_stmt 0 discriminator 1
 9157 006e 4C29     		cmp	r1, #76
 9158 0070 1CD0     		beq	.L865
 9159              	.L866:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
4695:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4696:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (!c) break;
 9160              		.loc 1 4696 0 is_stmt 1
 9161 0072 0029     		cmp	r1, #0
 9162 0074 00F0D480 		beq	.L858
 9163              	.LVL1314:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
4698:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (IsLower(d)) d -= 0x20;
 9164              		.loc 1 4698 0
 9165 0078 A1F16103 		sub	r3, r1, #97
 9166 007c DBB2     		uxtb	r3, r3
 9167 007e 192B     		cmp	r3, #25
 9168 0080 19D8     		bhi	.L903
 9169              		.loc 1 4698 0 is_stmt 0 discriminator 1
 9170 0082 A1F12003 		sub	r3, r1, #32
 9171 0086 DBB2     		uxtb	r3, r3
 9172              	.LVL1315:
 9173              	.L867:
4699:Middlewares/Third_Party/FatFs/src/ff.c **** 		switch (d) {				/* Type is... */
 9174              		.loc 1 4699 0 is_stmt 1
 9175 0088 A3F14202 		sub	r2, r3, #66
 9176 008c 162A     		cmp	r2, #22
 9177 008e 4FD8     		bhi	.L868
 9178 0090 DFE802F0 		tbb	[pc, r2]
 9179              	.L870:
 9180 0094 52       		.byte	(.L869-.L870)/2
 9181 0095 40       		.byte	(.L871-.L870)/2
 9182 0096 48       		.byte	(.L872-.L870)/2
 9183 0097 4E       		.byte	(.L868-.L870)/2
 9184 0098 4E       		.byte	(.L868-.L870)/2
 9185 0099 4E       		.byte	(.L868-.L870)/2
 9186 009a 4E       		.byte	(.L868-.L870)/2
 9187 009b 4E       		.byte	(.L868-.L870)/2
 9188 009c 4E       		.byte	(.L868-.L870)/2
 9189 009d 4E       		.byte	(.L868-.L870)/2
 9190 009e 4E       		.byte	(.L868-.L870)/2
 9191 009f 4E       		.byte	(.L868-.L870)/2
 9192 00a0 4E       		.byte	(.L868-.L870)/2
 9193 00a1 55       		.byte	(.L904-.L870)/2
 9194 00a2 4E       		.byte	(.L868-.L870)/2
 9195 00a3 4E       		.byte	(.L868-.L870)/2
 9196 00a4 4E       		.byte	(.L868-.L870)/2
 9197 00a5 13       		.byte	(.L874-.L870)/2
 9198 00a6 4E       		.byte	(.L868-.L870)/2
ARM GAS  /tmp/cckAXl85.s 			page 264


 9199 00a7 48       		.byte	(.L872-.L870)/2
 9200 00a8 4E       		.byte	(.L868-.L870)/2
 9201 00a9 4E       		.byte	(.L868-.L870)/2
 9202 00aa 4B       		.byte	(.L875-.L870)/2
 9203              	.LVL1316:
 9204 00ab 00       		.p2align 1
 9205              	.L865:
4694:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 4; c = *fmt++;
 9206              		.loc 1 4694 0
 9207 00ac 47F00407 		orr	r7, r7, #4
 9208              	.LVL1317:
 9209 00b0 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 9210              	.LVL1318:
 9211 00b2 0136     		adds	r6, r6, #1
 9212              	.LVL1319:
 9213 00b4 DDE7     		b	.L866
 9214              	.LVL1320:
 9215              	.L903:
4697:Middlewares/Third_Party/FatFs/src/ff.c **** 		d = c;
 9216              		.loc 1 4697 0
 9217 00b6 0B46     		mov	r3, r1
 9218 00b8 E6E7     		b	.L867
 9219              	.LVL1321:
 9220              	.L874:
4700:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'S' :					/* String */
4701:Middlewares/Third_Party/FatFs/src/ff.c **** 			p = va_arg(arp, TCHAR*);
 9221              		.loc 1 4701 0
 9222 00ba 199B     		ldr	r3, [sp, #100]
 9223              	.LVL1322:
 9224 00bc 1A1D     		adds	r2, r3, #4
 9225 00be 1992     		str	r2, [sp, #100]
 9226 00c0 D3F80080 		ldr	r8, [r3]
 9227              	.LVL1323:
4702:Middlewares/Third_Party/FatFs/src/ff.c **** 			for (j = 0; p[j]; j++) ;
 9228              		.loc 1 4702 0
 9229 00c4 0025     		movs	r5, #0
 9230 00c6 00E0     		b	.L876
 9231              	.LVL1324:
 9232              	.L877:
 9233              		.loc 1 4702 0 is_stmt 0 discriminator 3
 9234 00c8 0135     		adds	r5, r5, #1
 9235              	.LVL1325:
 9236              	.L876:
 9237              		.loc 1 4702 0 discriminator 1
 9238 00ca 18F80530 		ldrb	r3, [r8, r5]	@ zero_extendqisi2
 9239 00ce 002B     		cmp	r3, #0
 9240 00d0 FAD1     		bne	.L877
4703:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (!(f & 2)) {
 9241              		.loc 1 4703 0 is_stmt 1
 9242 00d2 17F0020F 		tst	r7, #2
 9243 00d6 05D0     		beq	.L878
 9244 00d8 0EE0     		b	.L881
 9245              	.LVL1326:
 9246              	.L880:
4704:Middlewares/Third_Party/FatFs/src/ff.c **** 				while (j++ < w) putc_bfd(&pb, ' ');
 9247              		.loc 1 4704 0 discriminator 2
 9248 00da 2021     		movs	r1, #32
ARM GAS  /tmp/cckAXl85.s 			page 265


 9249 00dc 01A8     		add	r0, sp, #4
 9250 00de FFF7FEFF 		bl	putc_bfd
 9251              	.LVL1327:
 9252 00e2 3D46     		mov	r5, r7
 9253              	.LVL1328:
 9254              	.L878:
 9255              		.loc 1 4704 0 is_stmt 0 discriminator 1
 9256 00e4 6F1C     		adds	r7, r5, #1
 9257              	.LVL1329:
 9258 00e6 A542     		cmp	r5, r4
 9259 00e8 F7D3     		bcc	.L880
 9260              		.loc 1 4704 0
 9261 00ea 3D46     		mov	r5, r7
 9262 00ec 04E0     		b	.L881
 9263              	.LVL1330:
 9264              	.L882:
4705:Middlewares/Third_Party/FatFs/src/ff.c **** 			}
4706:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (*p) putc_bfd(&pb, *p++);
 9265              		.loc 1 4706 0 is_stmt 1 discriminator 2
 9266 00ee 08F10108 		add	r8, r8, #1
 9267              	.LVL1331:
 9268 00f2 01A8     		add	r0, sp, #4
 9269 00f4 FFF7FEFF 		bl	putc_bfd
 9270              	.LVL1332:
 9271              	.L881:
 9272              		.loc 1 4706 0 is_stmt 0 discriminator 1
 9273 00f8 98F80010 		ldrb	r1, [r8]	@ zero_extendqisi2
 9274 00fc 0029     		cmp	r1, #0
 9275 00fe F6D1     		bne	.L882
 9276 0100 04E0     		b	.L883
 9277              	.LVL1333:
 9278              	.L884:
4707:Middlewares/Third_Party/FatFs/src/ff.c **** 			while (j++ < w) putc_bfd(&pb, ' ');
 9279              		.loc 1 4707 0 is_stmt 1 discriminator 2
 9280 0102 2021     		movs	r1, #32
 9281 0104 01A8     		add	r0, sp, #4
 9282 0106 FFF7FEFF 		bl	putc_bfd
 9283              	.LVL1334:
 9284 010a 3D46     		mov	r5, r7
 9285              	.LVL1335:
 9286              	.L883:
 9287              		.loc 1 4707 0 is_stmt 0 discriminator 1
 9288 010c 6F1C     		adds	r7, r5, #1
 9289              	.LVL1336:
 9290 010e A542     		cmp	r5, r4
 9291 0110 F7D3     		bcc	.L884
 9292 0112 81E7     		b	.L857
 9293              	.LVL1337:
 9294              	.L871:
4708:Middlewares/Third_Party/FatFs/src/ff.c **** 			continue;
4709:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'C' :					/* Character */
4710:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, (TCHAR)va_arg(arp, int)); continue;
 9295              		.loc 1 4710 0 is_stmt 1
 9296 0114 199B     		ldr	r3, [sp, #100]
 9297              	.LVL1338:
 9298 0116 1A1D     		adds	r2, r3, #4
 9299 0118 1992     		str	r2, [sp, #100]
ARM GAS  /tmp/cckAXl85.s 			page 266


 9300 011a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9301              	.LVL1339:
 9302 011c 01A8     		add	r0, sp, #4
 9303 011e FFF7FEFF 		bl	putc_bfd
 9304              	.LVL1340:
 9305 0122 79E7     		b	.L857
 9306              	.LVL1341:
 9307              	.L872:
4711:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'B' :					/* Binary */
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 2; break;
4713:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 8; break;
4715:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
4716:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'U' :					/* Unsigned decimal */
4717:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 10; break;
 9308              		.loc 1 4717 0
 9309 0124 4FF00A0C 		mov	ip, #10
 9310 0128 0BE0     		b	.L873
 9311              	.LVL1342:
 9312              	.L875:
4718:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'X' :					/* Hexdecimal */
4719:Middlewares/Third_Party/FatFs/src/ff.c **** 			r = 16; break;
 9313              		.loc 1 4719 0
 9314 012a 4FF0100C 		mov	ip, #16
 9315 012e 08E0     		b	.L873
 9316              	.LVL1343:
 9317              	.L868:
4720:Middlewares/Third_Party/FatFs/src/ff.c **** 		default:					/* Unknown type (pass-through) */
4721:Middlewares/Third_Party/FatFs/src/ff.c **** 			putc_bfd(&pb, c); continue;
 9318              		.loc 1 4721 0
 9319 0130 01A8     		add	r0, sp, #4
 9320 0132 FFF7FEFF 		bl	putc_bfd
 9321              	.LVL1344:
 9322 0136 6FE7     		b	.L857
 9323              	.LVL1345:
 9324              	.L869:
4712:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'O' :					/* Octal */
 9325              		.loc 1 4712 0
 9326 0138 4FF0020C 		mov	ip, #2
 9327 013c 01E0     		b	.L873
 9328              	.L904:
4714:Middlewares/Third_Party/FatFs/src/ff.c **** 		case 'D' :					/* Signed decimal */
 9329              		.loc 1 4714 0
 9330 013e 4FF0080C 		mov	ip, #8
 9331              	.L873:
 9332              	.LVL1346:
4722:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4723:Middlewares/Third_Party/FatFs/src/ff.c **** 
4724:Middlewares/Third_Party/FatFs/src/ff.c **** 		/* Get an argument and put it in numeral */
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		v = (f & 4) ? (DWORD)va_arg(arp, long) : ((d == 'D') ? (DWORD)(long)va_arg(arp, int) : (DWORD)va_
 9333              		.loc 1 4725 0
 9334 0142 17F0040F 		tst	r7, #4
 9335 0146 0AD1     		bne	.L914
 9336              		.loc 1 4725 0 is_stmt 0 discriminator 2
 9337 0148 442B     		cmp	r3, #68
 9338 014a 0DD0     		beq	.L915
 9339              		.loc 1 4725 0
ARM GAS  /tmp/cckAXl85.s 			page 267


 9340 014c 199A     		ldr	r2, [sp, #100]
 9341 014e 101D     		adds	r0, r2, #4
 9342 0150 1990     		str	r0, [sp, #100]
 9343 0152 1068     		ldr	r0, [r2]
 9344              	.L886:
 9345              	.LVL1347:
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9346              		.loc 1 4726 0 is_stmt 1 discriminator 8
 9347 0154 442B     		cmp	r3, #68
 9348 0156 0CD0     		beq	.L916
 9349              	.L888:
 9350              	.LVL1348:
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 			f |= 8;
4729:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
4730:Middlewares/Third_Party/FatFs/src/ff.c **** 		i = 0;
 9351              		.loc 1 4730 0
 9352 0158 4FF0000E 		mov	lr, #0
 9353 015c 1EE0     		b	.L892
 9354              	.LVL1349:
 9355              	.L914:
4725:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9356              		.loc 1 4725 0
 9357 015e 199A     		ldr	r2, [sp, #100]
 9358 0160 101D     		adds	r0, r2, #4
 9359 0162 1990     		str	r0, [sp, #100]
 9360 0164 1068     		ldr	r0, [r2]
 9361 0166 F5E7     		b	.L886
 9362              	.L915:
 9363 0168 199A     		ldr	r2, [sp, #100]
 9364 016a 101D     		adds	r0, r2, #4
 9365 016c 1990     		str	r0, [sp, #100]
 9366 016e 1068     		ldr	r0, [r2]
 9367 0170 F0E7     		b	.L886
 9368              	.LVL1350:
 9369              	.L916:
4726:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (d == 'D' && (v & 0x80000000)) {
 9370              		.loc 1 4726 0 discriminator 1
 9371 0172 0028     		cmp	r0, #0
 9372 0174 F0DA     		bge	.L888
4727:Middlewares/Third_Party/FatFs/src/ff.c **** 			v = 0 - v;
 9373              		.loc 1 4727 0
 9374 0176 4042     		negs	r0, r0
 9375              	.LVL1351:
4728:Middlewares/Third_Party/FatFs/src/ff.c **** 		}
 9376              		.loc 1 4728 0
 9377 0178 47F00807 		orr	r7, r7, #8
 9378              	.LVL1352:
 9379 017c ECE7     		b	.L888
 9380              	.LVL1353:
 9381              	.L917:
4731:Middlewares/Third_Party/FatFs/src/ff.c **** 		do {
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			d = (TCHAR)(v % r); v /= r;
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9382              		.loc 1 4733 0
 9383 017e 2725     		movs	r5, #39
 9384              	.L890:
ARM GAS  /tmp/cckAXl85.s 			page 268


 9385              		.loc 1 4733 0 is_stmt 0 discriminator 5
 9386 0180 2A44     		add	r2, r2, r5
 9387              	.LVL1354:
 9388 0182 D2B2     		uxtb	r2, r2
 9389              	.LVL1355:
 9390              	.L889:
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 9391              		.loc 1 4734 0 is_stmt 1
 9392 0184 0EF10105 		add	r5, lr, #1
 9393              	.LVL1356:
 9394 0188 3032     		adds	r2, r2, #48
 9395              	.LVL1357:
 9396 018a 0DF16808 		add	r8, sp, #104
 9397 018e F044     		add	r8, r8, lr
 9398 0190 08F8182C 		strb	r2, [r8, #-24]
4735:Middlewares/Third_Party/FatFs/src/ff.c **** 		} while (v && i < sizeof s / sizeof s[0]);
 9399              		.loc 1 4735 0
 9400 0194 73B1     		cbz	r3, .L891
 9401              		.loc 1 4735 0 is_stmt 0 discriminator 1
 9402 0196 0F2D     		cmp	r5, #15
 9403 0198 0CD8     		bhi	.L891
4734:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 9404              		.loc 1 4734 0 is_stmt 1
 9405 019a AE46     		mov	lr, r5
 9406              	.LVL1358:
 9407              	.L892:
4732:Middlewares/Third_Party/FatFs/src/ff.c **** 			if (d > 9) d += (c == 'x') ? 0x27 : 0x07;
 9408              		.loc 1 4732 0
 9409 019c B0FBFCF3 		udiv	r3, r0, ip
 9410 01a0 0CFB1302 		mls	r2, ip, r3, r0
 9411 01a4 D2B2     		uxtb	r2, r2
 9412              	.LVL1359:
 9413 01a6 1846     		mov	r0, r3
 9414              	.LVL1360:
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 9415              		.loc 1 4733 0
 9416 01a8 092A     		cmp	r2, #9
 9417 01aa EBD9     		bls	.L889
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 9418              		.loc 1 4733 0 is_stmt 0 discriminator 1
 9419 01ac 7829     		cmp	r1, #120
 9420 01ae E6D0     		beq	.L917
4733:Middlewares/Third_Party/FatFs/src/ff.c **** 			s[i++] = d + '0';
 9421              		.loc 1 4733 0
 9422 01b0 0725     		movs	r5, #7
 9423 01b2 E5E7     		b	.L890
 9424              	.LVL1361:
 9425              	.L891:
4736:Middlewares/Third_Party/FatFs/src/ff.c **** 		if (f & 8) s[i++] = '-';
 9426              		.loc 1 4736 0 is_stmt 1
 9427 01b4 17F0080F 		tst	r7, #8
 9428 01b8 06D0     		beq	.L893
 9429              	.LVL1362:
 9430              		.loc 1 4736 0 is_stmt 0 discriminator 1
 9431 01ba 1AAB     		add	r3, sp, #104
 9432 01bc 1D44     		add	r5, r5, r3
 9433 01be 2D23     		movs	r3, #45
ARM GAS  /tmp/cckAXl85.s 			page 269


 9434 01c0 05F8183C 		strb	r3, [r5, #-24]
 9435 01c4 0EF10205 		add	r5, lr, #2
 9436              	.LVL1363:
 9437              	.L893:
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9438              		.loc 1 4737 0 is_stmt 1
 9439 01c8 17F0010F 		tst	r7, #1
 9440 01cc 03D0     		beq	.L907
 9441 01ce 4FF0300A 		mov	r10, #48
 9442              	.L894:
 9443              	.LVL1364:
 9444              		.loc 1 4737 0 is_stmt 0 discriminator 4
 9445 01d2 A846     		mov	r8, r5
4738:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (!(f & 2) && j++ < w) putc_bfd(&pb, d);
 9446              		.loc 1 4738 0 is_stmt 1 discriminator 4
 9447 01d4 07E0     		b	.L895
 9448              	.LVL1365:
 9449              	.L907:
4737:Middlewares/Third_Party/FatFs/src/ff.c **** 		j = i; d = (f & 1) ? '0' : ' ';
 9450              		.loc 1 4737 0
 9451 01d6 4FF0200A 		mov	r10, #32
 9452 01da FAE7     		b	.L894
 9453              	.LVL1366:
 9454              	.L897:
 9455              		.loc 1 4738 0 discriminator 3
 9456 01dc 5146     		mov	r1, r10
 9457 01de 01A8     		add	r0, sp, #4
 9458 01e0 FFF7FEFF 		bl	putc_bfd
 9459              	.LVL1367:
 9460 01e4 C846     		mov	r8, r9
 9461              	.LVL1368:
 9462              	.L895:
 9463              		.loc 1 4738 0 is_stmt 0 discriminator 1
 9464 01e6 17F0020F 		tst	r7, #2
 9465 01ea 04D1     		bne	.L898
 9466              		.loc 1 4738 0 discriminator 2
 9467 01ec 08F10109 		add	r9, r8, #1
 9468              	.LVL1369:
 9469 01f0 A045     		cmp	r8, r4
 9470 01f2 F3D3     		bcc	.L897
 9471              		.loc 1 4738 0
 9472 01f4 C846     		mov	r8, r9
 9473              	.LVL1370:
 9474              	.L898:
4739:Middlewares/Third_Party/FatFs/src/ff.c **** 		do putc_bfd(&pb, s[--i]); while (i);
 9475              		.loc 1 4739 0 is_stmt 1 discriminator 1
 9476 01f6 013D     		subs	r5, r5, #1
 9477              	.LVL1371:
 9478 01f8 1AAB     		add	r3, sp, #104
 9479 01fa 2B44     		add	r3, r3, r5
 9480 01fc 13F8181C 		ldrb	r1, [r3, #-24]	@ zero_extendqisi2
 9481 0200 01A8     		add	r0, sp, #4
 9482 0202 FFF7FEFF 		bl	putc_bfd
 9483              	.LVL1372:
 9484 0206 002D     		cmp	r5, #0
 9485 0208 F5D1     		bne	.L898
 9486              	.LVL1373:
ARM GAS  /tmp/cckAXl85.s 			page 270


 9487              	.L899:
4740:Middlewares/Third_Party/FatFs/src/ff.c **** 		while (j++ < w) putc_bfd(&pb, d);
 9488              		.loc 1 4740 0 discriminator 1
 9489 020a 08F10105 		add	r5, r8, #1
 9490              	.LVL1374:
 9491 020e A045     		cmp	r8, r4
 9492 0210 BFF402AF 		bcs	.L857
 9493              		.loc 1 4740 0 is_stmt 0 discriminator 2
 9494 0214 5146     		mov	r1, r10
 9495 0216 01A8     		add	r0, sp, #4
 9496 0218 FFF7FEFF 		bl	putc_bfd
 9497              	.LVL1375:
 9498 021c A846     		mov	r8, r5
 9499 021e F4E7     		b	.L899
 9500              	.LVL1376:
 9501              	.L858:
4741:Middlewares/Third_Party/FatFs/src/ff.c **** 	}
4742:Middlewares/Third_Party/FatFs/src/ff.c **** 
4743:Middlewares/Third_Party/FatFs/src/ff.c **** 	va_end(arp);
4744:Middlewares/Third_Party/FatFs/src/ff.c **** 
4745:Middlewares/Third_Party/FatFs/src/ff.c **** 	if (   pb.idx >= 0		/* Flush buffered characters to the file */
 9502              		.loc 1 4745 0 is_stmt 1
 9503 0220 029A     		ldr	r2, [sp, #8]
 9504 0222 002A     		cmp	r2, #0
 9505 0224 0FDB     		blt	.L908
4746:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
 9506              		.loc 1 4746 0
 9507 0226 18AB     		add	r3, sp, #96
 9508 0228 04A9     		add	r1, sp, #16
 9509              	.LVL1377:
 9510 022a 0198     		ldr	r0, [sp, #4]
 9511 022c FFF7FEFF 		bl	f_write
 9512              	.LVL1378:
 9513 0230 60B9     		cbnz	r0, .L909
4747:Middlewares/Third_Party/FatFs/src/ff.c **** 		&& (UINT)pb.idx == nw) return pb.nchr;
 9514              		.loc 1 4747 0
 9515 0232 189B     		ldr	r3, [sp, #96]
 9516 0234 029A     		ldr	r2, [sp, #8]
 9517 0236 9A42     		cmp	r2, r3
 9518 0238 0BD1     		bne	.L910
 9519              		.loc 1 4747 0 is_stmt 0 discriminator 1
 9520 023a 0398     		ldr	r0, [sp, #12]
 9521              	.L856:
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
4749:Middlewares/Third_Party/FatFs/src/ff.c **** }
 9522              		.loc 1 4749 0 is_stmt 1
 9523 023c 1BB0     		add	sp, sp, #108
 9524              	.LCFI130:
 9525              		.cfi_remember_state
 9526              		.cfi_def_cfa_offset 44
 9527              		@ sp needed
 9528 023e BDE8F047 		pop	{r4, r5, r6, r7, r8, r9, r10, lr}
 9529              	.LCFI131:
 9530              		.cfi_restore 14
 9531              		.cfi_restore 10
 9532              		.cfi_restore 9
 9533              		.cfi_restore 8
ARM GAS  /tmp/cckAXl85.s 			page 271


 9534              		.cfi_restore 7
 9535              		.cfi_restore 6
 9536              		.cfi_restore 5
 9537              		.cfi_restore 4
 9538              		.cfi_def_cfa_offset 12
 9539 0242 03B0     		add	sp, sp, #12
 9540              	.LCFI132:
 9541              		.cfi_restore 3
 9542              		.cfi_restore 2
 9543              		.cfi_restore 1
 9544              		.cfi_def_cfa_offset 0
 9545 0244 7047     		bx	lr
 9546              	.LVL1379:
 9547              	.L908:
 9548              	.LCFI133:
 9549              		.cfi_restore_state
4748:Middlewares/Third_Party/FatFs/src/ff.c **** 	return EOF;
 9550              		.loc 1 4748 0
 9551 0246 4FF0FF30 		mov	r0, #-1
 9552 024a F7E7     		b	.L856
 9553              	.LVL1380:
 9554              	.L909:
 9555 024c 4FF0FF30 		mov	r0, #-1
 9556 0250 F4E7     		b	.L856
 9557              	.L910:
 9558 0252 4FF0FF30 		mov	r0, #-1
 9559 0256 F1E7     		b	.L856
 9560              		.cfi_endproc
 9561              	.LFE128:
 9563              		.section	.bss.FatFs,"aw",%nobits
 9564              		.align	2
 9565              		.set	.LANCHOR2,. + 0
 9568              	FatFs:
 9569 0000 00000000 		.space	4
 9570              		.section	.bss.Files,"aw",%nobits
 9571              		.align	2
 9572              		.set	.LANCHOR0,. + 0
 9575              	Files:
 9576 0000 00000000 		.space	24
 9576      00000000 
 9576      00000000 
 9576      00000000 
 9576      00000000 
 9577              		.section	.bss.Fsid,"aw",%nobits
 9578              		.align	1
 9579              		.set	.LANCHOR3,. + 0
 9582              	Fsid:
 9583 0000 0000     		.space	2
 9584              		.section	.rodata.ExCvt,"a",%progbits
 9585              		.align	2
 9586              		.set	.LANCHOR1,. + 0
 9589              	ExCvt:
 9590 0000 80       		.byte	-128
 9591 0001 9A       		.byte	-102
 9592 0002 90       		.byte	-112
 9593 0003 B6       		.byte	-74
 9594 0004 8E       		.byte	-114
ARM GAS  /tmp/cckAXl85.s 			page 272


 9595 0005 B7       		.byte	-73
 9596 0006 8F       		.byte	-113
 9597 0007 80       		.byte	-128
 9598 0008 D2       		.byte	-46
 9599 0009 D3       		.byte	-45
 9600 000a D4       		.byte	-44
 9601 000b D8       		.byte	-40
 9602 000c D7       		.byte	-41
 9603 000d DE       		.byte	-34
 9604 000e 8E       		.byte	-114
 9605 000f 8F       		.byte	-113
 9606 0010 90       		.byte	-112
 9607 0011 92       		.byte	-110
 9608 0012 92       		.byte	-110
 9609 0013 E2       		.byte	-30
 9610 0014 99       		.byte	-103
 9611 0015 E3       		.byte	-29
 9612 0016 EA       		.byte	-22
 9613 0017 EB       		.byte	-21
 9614 0018 59       		.byte	89
 9615 0019 99       		.byte	-103
 9616 001a 9A       		.byte	-102
 9617 001b 9D       		.byte	-99
 9618 001c 9C       		.byte	-100
 9619 001d 9D       		.byte	-99
 9620 001e 9E       		.byte	-98
 9621 001f 9F       		.byte	-97
 9622 0020 B5       		.byte	-75
 9623 0021 D6       		.byte	-42
 9624 0022 E0       		.byte	-32
 9625 0023 E9       		.byte	-23
 9626 0024 A5       		.byte	-91
 9627 0025 A5       		.byte	-91
 9628 0026 A6       		.byte	-90
 9629 0027 A7       		.byte	-89
 9630 0028 A8       		.byte	-88
 9631 0029 A9       		.byte	-87
 9632 002a AA       		.byte	-86
 9633 002b AB       		.byte	-85
 9634 002c AC       		.byte	-84
 9635 002d 21       		.byte	33
 9636 002e AE       		.byte	-82
 9637 002f AF       		.byte	-81
 9638 0030 B0       		.byte	-80
 9639 0031 B1       		.byte	-79
 9640 0032 B2       		.byte	-78
 9641 0033 B3       		.byte	-77
 9642 0034 B4       		.byte	-76
 9643 0035 B5       		.byte	-75
 9644 0036 B6       		.byte	-74
 9645 0037 B7       		.byte	-73
 9646 0038 B8       		.byte	-72
 9647 0039 B9       		.byte	-71
 9648 003a BA       		.byte	-70
 9649 003b BB       		.byte	-69
 9650 003c BC       		.byte	-68
 9651 003d BD       		.byte	-67
ARM GAS  /tmp/cckAXl85.s 			page 273


 9652 003e BE       		.byte	-66
 9653 003f BF       		.byte	-65
 9654 0040 C0       		.byte	-64
 9655 0041 C1       		.byte	-63
 9656 0042 C2       		.byte	-62
 9657 0043 C3       		.byte	-61
 9658 0044 C4       		.byte	-60
 9659 0045 C5       		.byte	-59
 9660 0046 C7       		.byte	-57
 9661 0047 C7       		.byte	-57
 9662 0048 C8       		.byte	-56
 9663 0049 C9       		.byte	-55
 9664 004a CA       		.byte	-54
 9665 004b CB       		.byte	-53
 9666 004c CC       		.byte	-52
 9667 004d CD       		.byte	-51
 9668 004e CE       		.byte	-50
 9669 004f CF       		.byte	-49
 9670 0050 D0       		.byte	-48
 9671 0051 D1       		.byte	-47
 9672 0052 D2       		.byte	-46
 9673 0053 D3       		.byte	-45
 9674 0054 D4       		.byte	-44
 9675 0055 D5       		.byte	-43
 9676 0056 D6       		.byte	-42
 9677 0057 D7       		.byte	-41
 9678 0058 D8       		.byte	-40
 9679 0059 D9       		.byte	-39
 9680 005a DA       		.byte	-38
 9681 005b DB       		.byte	-37
 9682 005c DC       		.byte	-36
 9683 005d DD       		.byte	-35
 9684 005e DE       		.byte	-34
 9685 005f DF       		.byte	-33
 9686 0060 E0       		.byte	-32
 9687 0061 E1       		.byte	-31
 9688 0062 E2       		.byte	-30
 9689 0063 E3       		.byte	-29
 9690 0064 E5       		.byte	-27
 9691 0065 E5       		.byte	-27
 9692 0066 E6       		.byte	-26
 9693 0067 E7       		.byte	-25
 9694 0068 E7       		.byte	-25
 9695 0069 E9       		.byte	-23
 9696 006a EA       		.byte	-22
 9697 006b EB       		.byte	-21
 9698 006c ED       		.byte	-19
 9699 006d ED       		.byte	-19
 9700 006e EE       		.byte	-18
 9701 006f EF       		.byte	-17
 9702 0070 F0       		.byte	-16
 9703 0071 F1       		.byte	-15
 9704 0072 F2       		.byte	-14
 9705 0073 F3       		.byte	-13
 9706 0074 F4       		.byte	-12
 9707 0075 F5       		.byte	-11
 9708 0076 F6       		.byte	-10
ARM GAS  /tmp/cckAXl85.s 			page 274


 9709 0077 F7       		.byte	-9
 9710 0078 F8       		.byte	-8
 9711 0079 F9       		.byte	-7
 9712 007a FA       		.byte	-6
 9713 007b FB       		.byte	-5
 9714 007c FC       		.byte	-4
 9715 007d FD       		.byte	-3
 9716 007e FE       		.byte	-2
 9717 007f FF       		.byte	-1
 9718              		.section	.rodata.create_name.str1.4,"aMS",%progbits,1
 9719              		.align	2
 9720              	.LC0:
 9721 0000 222A2B2C 		.ascii	"\"*+,:;<=>?[]|\177\000"
 9721      3A3B3C3D 
 9721      3E3F5B5D 
 9721      7C7F00
 9722              		.section	.rodata.cst.7701,"a",%progbits
 9723              		.align	2
 9724              		.set	.LANCHOR5,. + 0
 9727              	cst.7701:
 9728 0000 0080     		.short	-32768
 9729 0002 0040     		.short	16384
 9730 0004 0020     		.short	8192
 9731 0006 0010     		.short	4096
 9732 0008 0008     		.short	2048
 9733 000a 0040     		.short	16384
 9734 000c 0020     		.short	8192
 9735 000e 0010     		.short	4096
 9736 0010 0008     		.short	2048
 9737 0012 0004     		.short	1024
 9738 0014 0002     		.short	512
 9739              		.section	.rodata.f_mkfs.str1.4,"aMS",%progbits,1
 9740              		.align	2
 9741              	.LC1:
 9742 0000 EBFE904D 		.ascii	"\353\376\220MSDOS5.0\000"
 9742      53444F53 
 9742      352E3000 
 9743              	.LC2:
 9744 000c 4E4F204E 		.ascii	"NO NAME    FAT32   \000"
 9744      414D4520 
 9744      20202046 
 9744      41543332 
 9744      20202000 
 9745              	.LC3:
 9746 0020 4E4F204E 		.ascii	"NO NAME    FAT     \000"
 9746      414D4520 
 9746      20202046 
 9746      41542020 
 9746      20202000 
 9747              		.section	.rodata.vst.7700,"a",%progbits
 9748              		.align	2
 9749              		.set	.LANCHOR4,. + 0
 9752              	vst.7700:
 9753 0000 0004     		.short	1024
 9754 0002 0002     		.short	512
 9755 0004 0001     		.short	256
 9756 0006 8000     		.short	128
ARM GAS  /tmp/cckAXl85.s 			page 275


 9757 0008 4000     		.short	64
 9758 000a 2000     		.short	32
 9759 000c 1000     		.short	16
 9760 000e 0800     		.short	8
 9761 0010 0400     		.short	4
 9762 0012 0200     		.short	2
 9763 0014 0000     		.short	0
 9764              		.text
 9765              	.Letext0:
 9766              		.file 2 "Middlewares/Third_Party/FatFs/src/integer.h"
 9767              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 9768              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 9769              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 9770              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 9771              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 9772              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 9773              		.file 9 "Middlewares/Third_Party/FatFs/src/ff.h"
 9774              		.file 10 "Middlewares/Third_Party/FatFs/src/diskio.h"
 9775              		.file 11 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stdarg.h"
 9776              		.file 12 "<built-in>"
ARM GAS  /tmp/cckAXl85.s 			page 276


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ff.c
     /tmp/cckAXl85.s:16     .text.mem_cpy:0000000000000000 $t
     /tmp/cckAXl85.s:22     .text.mem_cpy:0000000000000000 mem_cpy
     /tmp/cckAXl85.s:56     .text.mem_set:0000000000000000 $t
     /tmp/cckAXl85.s:62     .text.mem_set:0000000000000000 mem_set
     /tmp/cckAXl85.s:92     .text.mem_cmp:0000000000000000 $t
     /tmp/cckAXl85.s:98     .text.mem_cmp:0000000000000000 mem_cmp
     /tmp/cckAXl85.s:158    .text.chk_chr:0000000000000000 $t
     /tmp/cckAXl85.s:164    .text.chk_chr:0000000000000000 chk_chr
     /tmp/cckAXl85.s:194    .text.chk_lock:0000000000000000 $t
     /tmp/cckAXl85.s:200    .text.chk_lock:0000000000000000 chk_lock
     /tmp/cckAXl85.s:327    .text.chk_lock:0000000000000080 $d
     /tmp/cckAXl85.s:332    .text.enq_lock:0000000000000000 $t
     /tmp/cckAXl85.s:338    .text.enq_lock:0000000000000000 enq_lock
     /tmp/cckAXl85.s:376    .text.enq_lock:0000000000000020 $d
     /tmp/cckAXl85.s:381    .text.inc_lock:0000000000000000 $t
     /tmp/cckAXl85.s:387    .text.inc_lock:0000000000000000 inc_lock
     /tmp/cckAXl85.s:554    .text.inc_lock:00000000000000c0 $d
     /tmp/cckAXl85.s:559    .text.dec_lock:0000000000000000 $t
     /tmp/cckAXl85.s:565    .text.dec_lock:0000000000000000 dec_lock
     /tmp/cckAXl85.s:634    .text.dec_lock:0000000000000040 $d
     /tmp/cckAXl85.s:639    .text.clear_lock:0000000000000000 $t
     /tmp/cckAXl85.s:645    .text.clear_lock:0000000000000000 clear_lock
     /tmp/cckAXl85.s:702    .text.clear_lock:0000000000000030 $d
     /tmp/cckAXl85.s:707    .text.clmt_clust:0000000000000000 $t
     /tmp/cckAXl85.s:713    .text.clmt_clust:0000000000000000 clmt_clust
     /tmp/cckAXl85.s:761    .text.ld_clust:0000000000000000 $t
     /tmp/cckAXl85.s:767    .text.ld_clust:0000000000000000 ld_clust
     /tmp/cckAXl85.s:804    .text.st_clust:0000000000000000 $t
     /tmp/cckAXl85.s:810    .text.st_clust:0000000000000000 st_clust
     /tmp/cckAXl85.s:833    .text.get_fileinfo:0000000000000000 $t
     /tmp/cckAXl85.s:839    .text.get_fileinfo:0000000000000000 get_fileinfo
     /tmp/cckAXl85.s:948    .text.create_name:0000000000000000 $t
     /tmp/cckAXl85.s:954    .text.create_name:0000000000000000 create_name
     /tmp/cckAXl85.s:1193   .text.create_name:0000000000000118 $d
     /tmp/cckAXl85.s:1199   .text.get_ldnumber:0000000000000000 $t
     /tmp/cckAXl85.s:1205   .text.get_ldnumber:0000000000000000 get_ldnumber
     /tmp/cckAXl85.s:1308   .text.sync_window:0000000000000000 $t
     /tmp/cckAXl85.s:1314   .text.sync_window:0000000000000000 sync_window
     /tmp/cckAXl85.s:1405   .text.move_window:0000000000000000 $t
     /tmp/cckAXl85.s:1411   .text.move_window:0000000000000000 move_window
     /tmp/cckAXl85.s:1472   .text.check_fs:0000000000000000 $t
     /tmp/cckAXl85.s:1478   .text.check_fs:0000000000000000 check_fs
     /tmp/cckAXl85.s:1560   .text.check_fs:000000000000008c $d
     /tmp/cckAXl85.s:1566   .text.lock_fs:0000000000000000 $t
     /tmp/cckAXl85.s:1572   .text.lock_fs:0000000000000000 lock_fs
     /tmp/cckAXl85.s:1595   .text.find_volume:0000000000000000 $t
     /tmp/cckAXl85.s:1601   .text.find_volume:0000000000000000 find_volume
     /tmp/cckAXl85.s:2120   .text.find_volume:000000000000033c $d
     /tmp/cckAXl85.s:2130   .text.find_volume:0000000000000350 $t
     /tmp/cckAXl85.s:2191   .text.validate:0000000000000000 $t
     /tmp/cckAXl85.s:2197   .text.validate:0000000000000000 validate
     /tmp/cckAXl85.s:2283   .text.unlock_fs:0000000000000000 $t
     /tmp/cckAXl85.s:2289   .text.unlock_fs:0000000000000000 unlock_fs
     /tmp/cckAXl85.s:2334   .text.sync_fs:0000000000000000 $t
     /tmp/cckAXl85.s:2340   .text.sync_fs:0000000000000000 sync_fs
ARM GAS  /tmp/cckAXl85.s 			page 277


     /tmp/cckAXl85.s:2449   .text.clust2sect:0000000000000000 $t
     /tmp/cckAXl85.s:2456   .text.clust2sect:0000000000000000 clust2sect
     /tmp/cckAXl85.s:2489   .text.get_fat:0000000000000000 $t
     /tmp/cckAXl85.s:2496   .text.get_fat:0000000000000000 get_fat
     /tmp/cckAXl85.s:2680   .text.dir_sdi:0000000000000000 $t
     /tmp/cckAXl85.s:2686   .text.dir_sdi:0000000000000000 dir_sdi
     /tmp/cckAXl85.s:2841   .text.dir_remove:0000000000000000 $t
     /tmp/cckAXl85.s:2847   .text.dir_remove:0000000000000000 dir_remove
     /tmp/cckAXl85.s:2906   .text.put_fat:0000000000000000 $t
     /tmp/cckAXl85.s:2913   .text.put_fat:0000000000000000 put_fat
     /tmp/cckAXl85.s:3126   .text.create_chain:0000000000000000 $t
     /tmp/cckAXl85.s:3132   .text.create_chain:0000000000000000 create_chain
     /tmp/cckAXl85.s:3314   .text.dir_next:0000000000000000 $t
     /tmp/cckAXl85.s:3320   .text.dir_next:0000000000000000 dir_next
     /tmp/cckAXl85.s:3544   .text.dir_find:0000000000000000 $t
     /tmp/cckAXl85.s:3550   .text.dir_find:0000000000000000 dir_find
     /tmp/cckAXl85.s:3629   .text.follow_path:0000000000000000 $t
     /tmp/cckAXl85.s:3635   .text.follow_path:0000000000000000 follow_path
     /tmp/cckAXl85.s:3761   .text.dir_alloc:0000000000000000 $t
     /tmp/cckAXl85.s:3767   .text.dir_alloc:0000000000000000 dir_alloc
     /tmp/cckAXl85.s:3854   .text.dir_register:0000000000000000 $t
     /tmp/cckAXl85.s:3860   .text.dir_register:0000000000000000 dir_register
     /tmp/cckAXl85.s:3921   .text.dir_read:0000000000000000 $t
     /tmp/cckAXl85.s:3927   .text.dir_read:0000000000000000 dir_read
     /tmp/cckAXl85.s:4022   .text.remove_chain:0000000000000000 $t
     /tmp/cckAXl85.s:4028   .text.remove_chain:0000000000000000 remove_chain
     /tmp/cckAXl85.s:4129   .text.f_mount:0000000000000000 $t
     /tmp/cckAXl85.s:4136   .text.f_mount:0000000000000000 f_mount
     /tmp/cckAXl85.s:4263   .text.f_mount:0000000000000088 $d
     /tmp/cckAXl85.s:4268   .text.f_open:0000000000000000 $t
     /tmp/cckAXl85.s:4275   .text.f_open:0000000000000000 f_open
     /tmp/cckAXl85.s:4601   .text.f_read:0000000000000000 $t
     /tmp/cckAXl85.s:4608   .text.f_read:0000000000000000 f_read
     /tmp/cckAXl85.s:4931   .text.f_write:0000000000000000 $t
     /tmp/cckAXl85.s:4938   .text.f_write:0000000000000000 f_write
     /tmp/cckAXl85.s:5339   .text.putc_bfd:0000000000000000 $t
     /tmp/cckAXl85.s:5345   .text.putc_bfd:0000000000000000 putc_bfd
     /tmp/cckAXl85.s:5435   .text.f_sync:0000000000000000 $t
     /tmp/cckAXl85.s:5442   .text.f_sync:0000000000000000 f_sync
     /tmp/cckAXl85.s:5547   .text.f_close:0000000000000000 $t
     /tmp/cckAXl85.s:5554   .text.f_close:0000000000000000 f_close
     /tmp/cckAXl85.s:5619   .text.f_lseek:0000000000000000 $t
     /tmp/cckAXl85.s:5626   .text.f_lseek:0000000000000000 f_lseek
     /tmp/cckAXl85.s:6105   .text.f_opendir:0000000000000000 $t
     /tmp/cckAXl85.s:6112   .text.f_opendir:0000000000000000 f_opendir
     /tmp/cckAXl85.s:6260   .text.f_closedir:0000000000000000 $t
     /tmp/cckAXl85.s:6267   .text.f_closedir:0000000000000000 f_closedir
     /tmp/cckAXl85.s:6328   .text.f_readdir:0000000000000000 $t
     /tmp/cckAXl85.s:6335   .text.f_readdir:0000000000000000 f_readdir
     /tmp/cckAXl85.s:6447   .text.f_stat:0000000000000000 $t
     /tmp/cckAXl85.s:6454   .text.f_stat:0000000000000000 f_stat
     /tmp/cckAXl85.s:6538   .text.f_getfree:0000000000000000 $t
     /tmp/cckAXl85.s:6545   .text.f_getfree:0000000000000000 f_getfree
     /tmp/cckAXl85.s:6763   .text.f_truncate:0000000000000000 $t
     /tmp/cckAXl85.s:6770   .text.f_truncate:0000000000000000 f_truncate
     /tmp/cckAXl85.s:6907   .text.f_unlink:0000000000000000 $t
     /tmp/cckAXl85.s:6914   .text.f_unlink:0000000000000000 f_unlink
ARM GAS  /tmp/cckAXl85.s 			page 278


     /tmp/cckAXl85.s:7102   .text.f_mkdir:0000000000000000 $t
     /tmp/cckAXl85.s:7109   .text.f_mkdir:0000000000000000 f_mkdir
     /tmp/cckAXl85.s:7409   .text.f_chmod:0000000000000000 $t
     /tmp/cckAXl85.s:7416   .text.f_chmod:0000000000000000 f_chmod
     /tmp/cckAXl85.s:7517   .text.f_rename:0000000000000000 $t
     /tmp/cckAXl85.s:7524   .text.f_rename:0000000000000000 f_rename
     /tmp/cckAXl85.s:7753   .text.f_utime:0000000000000000 $t
     /tmp/cckAXl85.s:7760   .text.f_utime:0000000000000000 f_utime
     /tmp/cckAXl85.s:7860   .text.f_mkfs:0000000000000000 $t
     /tmp/cckAXl85.s:7867   .text.f_mkfs:0000000000000000 f_mkfs
     /tmp/cckAXl85.s:8126   .text.f_mkfs:0000000000000134 $d
     /tmp/cckAXl85.s:8132   .text.f_mkfs:0000000000000140 $t
     /tmp/cckAXl85.s:8761   .text.f_mkfs:00000000000005cc $d
     /tmp/cckAXl85.s:8769   .text.f_gets:0000000000000000 $t
     /tmp/cckAXl85.s:8776   .text.f_gets:0000000000000000 f_gets
     /tmp/cckAXl85.s:8868   .text.f_putc:0000000000000000 $t
     /tmp/cckAXl85.s:8875   .text.f_putc:0000000000000000 f_putc
     /tmp/cckAXl85.s:8944   .text.f_puts:0000000000000000 $t
     /tmp/cckAXl85.s:8951   .text.f_puts:0000000000000000 f_puts
     /tmp/cckAXl85.s:9031   .text.f_printf:0000000000000000 $t
     /tmp/cckAXl85.s:9038   .text.f_printf:0000000000000000 f_printf
     /tmp/cckAXl85.s:9180   .text.f_printf:0000000000000094 $d
     /tmp/cckAXl85.s:9564   .bss.FatFs:0000000000000000 $d
     /tmp/cckAXl85.s:9568   .bss.FatFs:0000000000000000 FatFs
     /tmp/cckAXl85.s:9571   .bss.Files:0000000000000000 $d
     /tmp/cckAXl85.s:9575   .bss.Files:0000000000000000 Files
     /tmp/cckAXl85.s:9578   .bss.Fsid:0000000000000000 $d
     /tmp/cckAXl85.s:9582   .bss.Fsid:0000000000000000 Fsid
     /tmp/cckAXl85.s:9585   .rodata.ExCvt:0000000000000000 $d
     /tmp/cckAXl85.s:9589   .rodata.ExCvt:0000000000000000 ExCvt
     /tmp/cckAXl85.s:9719   .rodata.create_name.str1.4:0000000000000000 $d
     /tmp/cckAXl85.s:9723   .rodata.cst.7701:0000000000000000 $d
     /tmp/cckAXl85.s:9727   .rodata.cst.7701:0000000000000000 cst.7701
     /tmp/cckAXl85.s:9740   .rodata.f_mkfs.str1.4:0000000000000000 $d
     /tmp/cckAXl85.s:9748   .rodata.vst.7700:0000000000000000 $d
     /tmp/cckAXl85.s:9752   .rodata.vst.7700:0000000000000000 vst.7700
                     .debug_frame:0000000000000010 $d
     /tmp/cckAXl85.s:9204   .text.f_printf:00000000000000ab $d
     /tmp/cckAXl85.s:9204   .text.f_printf:00000000000000ac $t

UNDEFINED SYMBOLS
disk_write
disk_read
ff_req_grant
disk_status
disk_initialize
ff_rel_grant
disk_ioctl
ff_del_syncobj
ff_cre_syncobj
get_fattime
