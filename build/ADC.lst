ARM GAS  /tmp/cclUIVjQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ADC.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Thread_ADC_LightSensor,"ax",%progbits
  16              		.align	1
  17              		.global	Thread_ADC_LightSensor
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	Thread_ADC_LightSensor:
  24              	.LFB70:
  25              		.file 1 "Src/ADC.c"
   1:Src/ADC.c     **** #include <stdio.h>
   2:Src/ADC.c     **** #include <string.h>
   3:Src/ADC.c     **** #include "main.h"
   4:Src/ADC.c     **** #include "cmsis_os.h"
   5:Src/ADC.c     **** 
   6:Src/ADC.c     **** extern void Error_Handler(void);
   7:Src/ADC.c     **** extern osMessageQueueId_t Queue_UART_TXHandle;
   8:Src/ADC.c     **** extern ADC_HandleTypeDef hadc1;
   9:Src/ADC.c     **** 
  10:Src/ADC.c     **** void
  11:Src/ADC.c     **** Thread_ADC_LightSensor( void )
  12:Src/ADC.c     **** {
  26              		.loc 1 12 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35              	.LVL0:
  13:Src/ADC.c     ****     static uint16_t lightVal = 0;
  14:Src/ADC.c     ****     static uint16_t ADC_delay = 1000;
  15:Src/ADC.c     ****     static char ADC_msg[MAX_LOG_MSG_SIZE] = "ADC start-up message.\n";
  16:Src/ADC.c     ****     uint8_t idx = 0;
  17:Src/ADC.c     ****     
  18:Src/ADC.c     ****     for (idx = 0; ADC_msg[idx]; idx++)
  36              		.loc 1 18 0
  37 0002 0024     		movs	r4, #0
  38              	.LVL1:
  39              	.L2:
  40              		.loc 1 18 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cclUIVjQ.s 			page 2


  41 0004 304B     		ldr	r3, .L13
  42 0006 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
  43 0008 63B9     		cbnz	r3, .L3
  19:Src/ADC.c     ****     {
  20:Src/ADC.c     ****         osMessageQueuePut(Queue_UART_TXHandle, &ADC_msg[idx], 0, 0);
  21:Src/ADC.c     ****     }
  22:Src/ADC.c     ****     memset(&ADC_msg[0], 0, MAX_LOG_MSG_SIZE);
  44              		.loc 1 22 0 is_stmt 1
  45 000a 4022     		movs	r2, #64
  46 000c 0021     		movs	r1, #0
  47 000e 2E48     		ldr	r0, .L13
  48 0010 FFF7FEFF 		bl	memset
  49              	.LVL2:
  23:Src/ADC.c     ****   
  24:Src/ADC.c     ****     if (HAL_ADCEx_Calibration_Start(&hadc1) != HAL_OK)
  50              		.loc 1 24 0
  51 0014 2D48     		ldr	r0, .L13+4
  52 0016 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
  53              	.LVL3:
  54 001a 0028     		cmp	r0, #0
  55 001c 48D0     		beq	.L11
  25:Src/ADC.c     ****     {
  26:Src/ADC.c     ****         Error_Handler();
  56              		.loc 1 26 0
  57 001e FFF7FEFF 		bl	Error_Handler
  58              	.LVL4:
  59 0022 45E0     		b	.L11
  60              	.L3:
  20:Src/ADC.c     ****     }
  61              		.loc 1 20 0 discriminator 3
  62 0024 0023     		movs	r3, #0
  63 0026 1A46     		mov	r2, r3
  64 0028 2749     		ldr	r1, .L13
  65 002a 2144     		add	r1, r1, r4
  66 002c 2848     		ldr	r0, .L13+8
  67 002e 0068     		ldr	r0, [r0]
  68 0030 FFF7FEFF 		bl	osMessageQueuePut
  69              	.LVL5:
  18:Src/ADC.c     ****     {
  70              		.loc 1 18 0 discriminator 3
  71 0034 0134     		adds	r4, r4, #1
  72              	.LVL6:
  73 0036 E4B2     		uxtb	r4, r4
  74              	.LVL7:
  75 0038 E4E7     		b	.L2
  76              	.L6:
  27:Src/ADC.c     ****     }
  28:Src/ADC.c     ****   
  29:Src/ADC.c     ****     /* Infinite loop */
  30:Src/ADC.c     ****     for(;;)
  31:Src/ADC.c     ****     {
  32:Src/ADC.c     ****         HAL_ADC_Start(&hadc1);
  33:Src/ADC.c     ****         while( HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) != HAL_OK )
  34:Src/ADC.c     ****         {
  35:Src/ADC.c     ****             osDelay(1);
  77              		.loc 1 35 0
  78 003a 0120     		movs	r0, #1
ARM GAS  /tmp/cclUIVjQ.s 			page 3


  79 003c FFF7FEFF 		bl	osDelay
  80              	.LVL8:
  81              	.L5:
  33:Src/ADC.c     ****         {
  82              		.loc 1 33 0
  83 0040 4FF0FF31 		mov	r1, #-1
  84 0044 2148     		ldr	r0, .L13+4
  85 0046 FFF7FEFF 		bl	HAL_ADC_PollForConversion
  86              	.LVL9:
  87 004a 0028     		cmp	r0, #0
  88 004c F5D1     		bne	.L6
  36:Src/ADC.c     ****         }
  37:Src/ADC.c     ****     
  38:Src/ADC.c     ****         lightVal = HAL_ADC_GetValue(&hadc1);
  89              		.loc 1 38 0
  90 004e 1F48     		ldr	r0, .L13+4
  91 0050 FFF7FEFF 		bl	HAL_ADC_GetValue
  92              	.LVL10:
  93 0054 1F4C     		ldr	r4, .L13+12
  94              	.LVL11:
  95 0056 2080     		strh	r0, [r4]	@ movhi
  39:Src/ADC.c     ****         sprintf(&ADC_msg[0], "%d: %d\n", HAL_GetTick(), lightVal);
  96              		.loc 1 39 0
  97 0058 FFF7FEFF 		bl	HAL_GetTick
  98              	.LVL12:
  99 005c 2388     		ldrh	r3, [r4]
 100 005e 0246     		mov	r2, r0
 101 0060 1D49     		ldr	r1, .L13+16
 102 0062 1948     		ldr	r0, .L13
 103 0064 FFF7FEFF 		bl	sprintf
 104              	.LVL13:
  40:Src/ADC.c     ****     
  41:Src/ADC.c     ****         for (idx = 0; ADC_msg[idx]; idx++)
 105              		.loc 1 41 0
 106 0068 0024     		movs	r4, #0
 107 006a 09E0     		b	.L7
 108              	.LVL14:
 109              	.L8:
  42:Src/ADC.c     ****         {
  43:Src/ADC.c     ****             osMessageQueuePut(Queue_UART_TXHandle, &ADC_msg[idx], 0, 0);
 110              		.loc 1 43 0 discriminator 3
 111 006c 0023     		movs	r3, #0
 112 006e 1A46     		mov	r2, r3
 113 0070 1549     		ldr	r1, .L13
 114 0072 2144     		add	r1, r1, r4
 115 0074 1648     		ldr	r0, .L13+8
 116 0076 0068     		ldr	r0, [r0]
 117 0078 FFF7FEFF 		bl	osMessageQueuePut
 118              	.LVL15:
  41:Src/ADC.c     ****         {
 119              		.loc 1 41 0 discriminator 3
 120 007c 0134     		adds	r4, r4, #1
 121              	.LVL16:
 122 007e E4B2     		uxtb	r4, r4
 123              	.LVL17:
 124              	.L7:
  41:Src/ADC.c     ****         {
ARM GAS  /tmp/cclUIVjQ.s 			page 4


 125              		.loc 1 41 0 is_stmt 0 discriminator 1
 126 0080 114B     		ldr	r3, .L13
 127 0082 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 128 0084 002B     		cmp	r3, #0
 129 0086 F1D1     		bne	.L8
  44:Src/ADC.c     ****         }
  45:Src/ADC.c     ****         memset(&ADC_msg[0], 0, MAX_LOG_MSG_SIZE);
 130              		.loc 1 45 0 is_stmt 1
 131 0088 4022     		movs	r2, #64
 132 008a 0021     		movs	r1, #0
 133 008c 0E48     		ldr	r0, .L13
 134 008e FFF7FEFF 		bl	memset
 135              	.LVL18:
  46:Src/ADC.c     ****     
  47:Src/ADC.c     ****         if (lightVal > 2000u)
 136              		.loc 1 47 0
 137 0092 104B     		ldr	r3, .L13+12
 138 0094 1B88     		ldrh	r3, [r3]
 139 0096 B3F5FA6F 		cmp	r3, #2000
 140 009a 0DD9     		bls	.L9
  48:Src/ADC.c     ****         {
  49:Src/ADC.c     ****             HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 141              		.loc 1 49 0
 142 009c 0022     		movs	r2, #0
 143 009e 4FF40051 		mov	r1, #8192
 144 00a2 0E48     		ldr	r0, .L13+20
 145 00a4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 146              	.LVL19:
 147              	.L10:
  50:Src/ADC.c     ****         }
  51:Src/ADC.c     ****         else
  52:Src/ADC.c     ****         {
  53:Src/ADC.c     ****             HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
  54:Src/ADC.c     ****         }
  55:Src/ADC.c     ****         osDelay(ADC_delay);
 148              		.loc 1 55 0
 149 00a8 4FF47A70 		mov	r0, #1000
 150 00ac FFF7FEFF 		bl	osDelay
 151              	.LVL20:
 152              	.L11:
  32:Src/ADC.c     ****         while( HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) != HAL_OK )
 153              		.loc 1 32 0
 154 00b0 0648     		ldr	r0, .L13+4
 155 00b2 FFF7FEFF 		bl	HAL_ADC_Start
 156              	.LVL21:
  33:Src/ADC.c     ****         {
 157              		.loc 1 33 0
 158 00b6 C3E7     		b	.L5
 159              	.L9:
  53:Src/ADC.c     ****         }
 160              		.loc 1 53 0
 161 00b8 0122     		movs	r2, #1
 162 00ba 4FF40051 		mov	r1, #8192
 163 00be 0748     		ldr	r0, .L13+20
 164 00c0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL22:
 166 00c4 F0E7     		b	.L10
ARM GAS  /tmp/cclUIVjQ.s 			page 5


 167              	.L14:
 168 00c6 00BF     		.align	2
 169              	.L13:
 170 00c8 00000000 		.word	.LANCHOR0
 171 00cc 00000000 		.word	hadc1
 172 00d0 00000000 		.word	Queue_UART_TXHandle
 173 00d4 00000000 		.word	.LANCHOR1
 174 00d8 00000000 		.word	.LC0
 175 00dc 00100140 		.word	1073811456
 176              		.cfi_endproc
 177              	.LFE70:
 179              		.section	.bss.lightVal.8079,"aw",%nobits
 180              		.align	1
 181              		.set	.LANCHOR1,. + 0
 184              	lightVal.8079:
 185 0000 0000     		.space	2
 186              		.section	.data.ADC_msg.8081,"aw",%progbits
 187              		.align	2
 188              		.set	.LANCHOR0,. + 0
 191              	ADC_msg.8081:
 192 0000 41444320 		.ascii	"ADC start-up message.\012\000"
 192      73746172 
 192      742D7570 
 192      206D6573 
 192      73616765 
 193 0017 00000000 		.space	41
 193      00000000 
 193      00000000 
 193      00000000 
 193      00000000 
 194              		.section	.rodata.Thread_ADC_LightSensor.str1.4,"aMS",%progbits,1
 195              		.align	2
 196              	.LC0:
 197 0000 25643A20 		.ascii	"%d: %d\012\000"
 197      25640A00 
 198              		.text
 199              	.Letext0:
 200              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 201              		.file 3 "/usr/include/newlib/sys/lock.h"
 202              		.file 4 "/usr/include/newlib/sys/_types.h"
 203              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 204              		.file 6 "/usr/include/newlib/sys/reent.h"
 205              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 206              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 207              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 208              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 209              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 210              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 211              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 212              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 213              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 214              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 215              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 216              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
 217              		.file 19 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/cclUIVjQ.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ADC.c
     /tmp/cclUIVjQ.s:16     .text.Thread_ADC_LightSensor:0000000000000000 $t
     /tmp/cclUIVjQ.s:23     .text.Thread_ADC_LightSensor:0000000000000000 Thread_ADC_LightSensor
     /tmp/cclUIVjQ.s:170    .text.Thread_ADC_LightSensor:00000000000000c8 $d
     /tmp/cclUIVjQ.s:180    .bss.lightVal.8079:0000000000000000 $d
     /tmp/cclUIVjQ.s:184    .bss.lightVal.8079:0000000000000000 lightVal.8079
     /tmp/cclUIVjQ.s:187    .data.ADC_msg.8081:0000000000000000 $d
     /tmp/cclUIVjQ.s:191    .data.ADC_msg.8081:0000000000000000 ADC_msg.8081
     /tmp/cclUIVjQ.s:195    .rodata.Thread_ADC_LightSensor.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_ADCEx_Calibration_Start
Error_Handler
osMessageQueuePut
osDelay
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_GetTick
sprintf
HAL_GPIO_WritePin
HAL_ADC_Start
hadc1
Queue_UART_TXHandle
