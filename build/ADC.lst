ARM GAS  /tmp/ccxHAPfo.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"ADC.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.Thread_ADC_LightSensor,"ax",%progbits
  16              		.align	1
  17              		.global	Thread_ADC_LightSensor
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	Thread_ADC_LightSensor:
  24              	.LFB70:
  25              		.file 1 "Src/ADC.c"
   1:Src/ADC.c     **** #include <stdio.h>
   2:Src/ADC.c     **** #include <string.h>
   3:Src/ADC.c     **** #include "main.h"
   4:Src/ADC.c     **** #include "cmsis_os.h"
   5:Src/ADC.c     **** 
   6:Src/ADC.c     **** extern void Error_Handler(void);
   7:Src/ADC.c     **** extern osThreadId_t ADC_LightSensorHandle;
   8:Src/ADC.c     **** extern osMessageQueueId_t Queue_UART_TXHandle;
   9:Src/ADC.c     **** extern ADC_HandleTypeDef hadc1;
  10:Src/ADC.c     **** 
  11:Src/ADC.c     **** static uint32_t Thread_ADC_LightSensor_max_stack_size = 0;
  12:Src/ADC.c     **** static uint16_t UART_TX_queue_full_count = 0;
  13:Src/ADC.c     **** 
  14:Src/ADC.c     **** void
  15:Src/ADC.c     **** Thread_ADC_LightSensor( void )
  16:Src/ADC.c     **** {
  26              		.loc 1 16 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
  34              		.cfi_offset 14, -4
  35              	.LVL0:
  17:Src/ADC.c     ****     static uint16_t lightVal = 0;
  18:Src/ADC.c     ****     static uint16_t ADC_delay = 1000;
  19:Src/ADC.c     ****     static char ADC_msg[MAX_LOG_MSG_SIZE] = "ADC start-up message.\n";
  20:Src/ADC.c     ****     uint8_t idx = 0;
  21:Src/ADC.c     ****     
  22:Src/ADC.c     ****     for (idx = 0; ADC_msg[idx]; idx++)
  36              		.loc 1 22 0
ARM GAS  /tmp/ccxHAPfo.s 			page 2


  37 0002 0024     		movs	r4, #0
  38              	.LVL1:
  39              	.L2:
  40              		.loc 1 22 0 is_stmt 0 discriminator 1
  41 0004 374B     		ldr	r3, .L16
  42 0006 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
  43 0008 63B9     		cbnz	r3, .L3
  23:Src/ADC.c     ****     {
  24:Src/ADC.c     ****         osMessageQueuePut(Queue_UART_TXHandle, &ADC_msg[idx], 0, 0);
  25:Src/ADC.c     ****     }
  26:Src/ADC.c     ****     memset(&ADC_msg[0], 0, MAX_LOG_MSG_SIZE);
  44              		.loc 1 26 0 is_stmt 1
  45 000a 4022     		movs	r2, #64
  46 000c 0021     		movs	r1, #0
  47 000e 3548     		ldr	r0, .L16
  48 0010 FFF7FEFF 		bl	memset
  49              	.LVL2:
  27:Src/ADC.c     ****   
  28:Src/ADC.c     ****     if (HAL_ADCEx_Calibration_Start(&hadc1) != HAL_OK)
  50              		.loc 1 28 0
  51 0014 3448     		ldr	r0, .L16+4
  52 0016 FFF7FEFF 		bl	HAL_ADCEx_Calibration_Start
  53              	.LVL3:
  54 001a 0028     		cmp	r0, #0
  55 001c 4DD0     		beq	.L13
  29:Src/ADC.c     ****     {
  30:Src/ADC.c     ****         Error_Handler();
  56              		.loc 1 30 0
  57 001e FFF7FEFF 		bl	Error_Handler
  58              	.LVL4:
  59 0022 4AE0     		b	.L13
  60              	.L3:
  24:Src/ADC.c     ****     }
  61              		.loc 1 24 0 discriminator 3
  62 0024 0023     		movs	r3, #0
  63 0026 1A46     		mov	r2, r3
  64 0028 2E49     		ldr	r1, .L16
  65 002a 2144     		add	r1, r1, r4
  66 002c 2F48     		ldr	r0, .L16+8
  67 002e 0068     		ldr	r0, [r0]
  68 0030 FFF7FEFF 		bl	osMessageQueuePut
  69              	.LVL5:
  22:Src/ADC.c     ****     {
  70              		.loc 1 22 0 discriminator 3
  71 0034 0134     		adds	r4, r4, #1
  72              	.LVL6:
  73 0036 E4B2     		uxtb	r4, r4
  74              	.LVL7:
  75 0038 E4E7     		b	.L2
  76              	.LVL8:
  77              	.L7:
  78              	.LBB2:
  31:Src/ADC.c     ****     }
  32:Src/ADC.c     ****   
  33:Src/ADC.c     ****     /* Infinite loop */
  34:Src/ADC.c     ****     for(;;)
  35:Src/ADC.c     ****     {
ARM GAS  /tmp/ccxHAPfo.s 			page 3


  36:Src/ADC.c     ****         uint32_t Thread_ADC_LightSensor_stack_size = osThreadGetStackSpace(ADC_LightSensorHandle);
  37:Src/ADC.c     ****         if ( Thread_ADC_LightSensor_stack_size > Thread_ADC_LightSensor_max_stack_size ) Thread_ADC
  38:Src/ADC.c     ****         HAL_ADC_Start(&hadc1);
  39:Src/ADC.c     ****         while( HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) != HAL_OK )
  40:Src/ADC.c     ****         {
  41:Src/ADC.c     ****             osThreadYield();
  79              		.loc 1 41 0
  80 003a FFF7FEFF 		bl	osThreadYield
  81              	.LVL9:
  82              	.L6:
  39:Src/ADC.c     ****         {
  83              		.loc 1 39 0
  84 003e 4FF0FF31 		mov	r1, #-1
  85 0042 2948     		ldr	r0, .L16+4
  86 0044 FFF7FEFF 		bl	HAL_ADC_PollForConversion
  87              	.LVL10:
  88 0048 0028     		cmp	r0, #0
  89 004a F6D1     		bne	.L7
  42:Src/ADC.c     ****         }
  43:Src/ADC.c     ****     
  44:Src/ADC.c     ****         lightVal = HAL_ADC_GetValue(&hadc1);
  90              		.loc 1 44 0
  91 004c 2648     		ldr	r0, .L16+4
  92 004e FFF7FEFF 		bl	HAL_ADC_GetValue
  93              	.LVL11:
  94 0052 274C     		ldr	r4, .L16+12
  95              	.LVL12:
  96 0054 2080     		strh	r0, [r4]	@ movhi
  45:Src/ADC.c     ****         sprintf(&ADC_msg[0], "%d: %d\n", HAL_GetTick(), lightVal);
  97              		.loc 1 45 0
  98 0056 FFF7FEFF 		bl	HAL_GetTick
  99              	.LVL13:
 100 005a 2388     		ldrh	r3, [r4]
 101 005c 0246     		mov	r2, r0
 102 005e 2549     		ldr	r1, .L16+16
 103 0060 2048     		ldr	r0, .L16
 104 0062 FFF7FEFF 		bl	sprintf
 105              	.LVL14:
  46:Src/ADC.c     ****     
  47:Src/ADC.c     ****         for (idx = 0; ADC_msg[idx]; idx++)
 106              		.loc 1 47 0
 107 0066 0024     		movs	r4, #0
 108 0068 01E0     		b	.L8
 109              	.LVL15:
 110              	.L9:
 111              		.loc 1 47 0 is_stmt 0 discriminator 2
 112 006a 0134     		adds	r4, r4, #1
 113              	.LVL16:
 114 006c E4B2     		uxtb	r4, r4
 115              	.LVL17:
 116              	.L8:
 117              		.loc 1 47 0 discriminator 1
 118 006e 1D4B     		ldr	r3, .L16
 119 0070 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 120 0072 73B1     		cbz	r3, .L15
  48:Src/ADC.c     ****         {
  49:Src/ADC.c     ****             if ( osMessageQueuePut(Queue_UART_TXHandle, &ADC_msg[idx], 0, 0) != osOK ) UART_TX_queu
ARM GAS  /tmp/ccxHAPfo.s 			page 4


 121              		.loc 1 49 0 is_stmt 1
 122 0074 0023     		movs	r3, #0
 123 0076 1A46     		mov	r2, r3
 124 0078 1A49     		ldr	r1, .L16
 125 007a 2144     		add	r1, r1, r4
 126 007c 1B48     		ldr	r0, .L16+8
 127 007e 0068     		ldr	r0, [r0]
 128 0080 FFF7FEFF 		bl	osMessageQueuePut
 129              	.LVL18:
 130 0084 0028     		cmp	r0, #0
 131 0086 F0D0     		beq	.L9
 132              		.loc 1 49 0 is_stmt 0 discriminator 1
 133 0088 1B4A     		ldr	r2, .L16+20
 134 008a 1388     		ldrh	r3, [r2]
 135 008c 0133     		adds	r3, r3, #1
 136 008e 1380     		strh	r3, [r2]	@ movhi
 137 0090 EBE7     		b	.L9
 138              	.L15:
  50:Src/ADC.c     ****         }
  51:Src/ADC.c     ****         memset(&ADC_msg[0], 0, MAX_LOG_MSG_SIZE);
 139              		.loc 1 51 0 is_stmt 1
 140 0092 4022     		movs	r2, #64
 141 0094 0021     		movs	r1, #0
 142 0096 1348     		ldr	r0, .L16
 143 0098 FFF7FEFF 		bl	memset
 144              	.LVL19:
  52:Src/ADC.c     ****     
  53:Src/ADC.c     ****         if (lightVal > 2000u)
 145              		.loc 1 53 0
 146 009c 144B     		ldr	r3, .L16+12
 147 009e 1B88     		ldrh	r3, [r3]
 148 00a0 B3F5FA6F 		cmp	r3, #2000
 149 00a4 17D9     		bls	.L11
  54:Src/ADC.c     ****         {
  55:Src/ADC.c     ****             HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 150              		.loc 1 55 0
 151 00a6 0022     		movs	r2, #0
 152 00a8 4FF40051 		mov	r1, #8192
 153 00ac 1348     		ldr	r0, .L16+24
 154 00ae FFF7FEFF 		bl	HAL_GPIO_WritePin
 155              	.LVL20:
 156              	.L12:
  56:Src/ADC.c     ****         }
  57:Src/ADC.c     ****         else
  58:Src/ADC.c     ****         {
  59:Src/ADC.c     ****             HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
  60:Src/ADC.c     ****         }
  61:Src/ADC.c     ****         osDelay(ADC_delay);
 157              		.loc 1 61 0
 158 00b2 4FF47A70 		mov	r0, #1000
 159 00b6 FFF7FEFF 		bl	osDelay
 160              	.LVL21:
 161              	.L13:
  36:Src/ADC.c     ****         if ( Thread_ADC_LightSensor_stack_size > Thread_ADC_LightSensor_max_stack_size ) Thread_ADC
 162              		.loc 1 36 0
 163 00ba 114B     		ldr	r3, .L16+28
 164 00bc 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccxHAPfo.s 			page 5


 165 00be FFF7FEFF 		bl	osThreadGetStackSpace
 166              	.LVL22:
  37:Src/ADC.c     ****         HAL_ADC_Start(&hadc1);
 167              		.loc 1 37 0
 168 00c2 104B     		ldr	r3, .L16+32
 169 00c4 1B68     		ldr	r3, [r3]
 170 00c6 9842     		cmp	r0, r3
 171 00c8 01D9     		bls	.L5
  37:Src/ADC.c     ****         HAL_ADC_Start(&hadc1);
 172              		.loc 1 37 0 is_stmt 0 discriminator 1
 173 00ca 0E4B     		ldr	r3, .L16+32
 174 00cc 1860     		str	r0, [r3]
 175              	.L5:
  38:Src/ADC.c     ****         while( HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY) != HAL_OK )
 176              		.loc 1 38 0 is_stmt 1
 177 00ce 0648     		ldr	r0, .L16+4
 178              	.LVL23:
 179 00d0 FFF7FEFF 		bl	HAL_ADC_Start
 180              	.LVL24:
  39:Src/ADC.c     ****         {
 181              		.loc 1 39 0
 182 00d4 B3E7     		b	.L6
 183              	.L11:
  59:Src/ADC.c     ****         }
 184              		.loc 1 59 0
 185 00d6 0122     		movs	r2, #1
 186 00d8 4FF40051 		mov	r1, #8192
 187 00dc 0748     		ldr	r0, .L16+24
 188 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 189              	.LVL25:
 190 00e2 E6E7     		b	.L12
 191              	.L17:
 192              		.align	2
 193              	.L16:
 194 00e4 00000000 		.word	.LANCHOR0
 195 00e8 00000000 		.word	hadc1
 196 00ec 00000000 		.word	Queue_UART_TXHandle
 197 00f0 00000000 		.word	.LANCHOR2
 198 00f4 00000000 		.word	.LC0
 199 00f8 00000000 		.word	.LANCHOR3
 200 00fc 00100140 		.word	1073811456
 201 0100 00000000 		.word	ADC_LightSensorHandle
 202 0104 00000000 		.word	.LANCHOR1
 203              	.LBE2:
 204              		.cfi_endproc
 205              	.LFE70:
 207              		.section	.bss.Thread_ADC_LightSensor_max_stack_size,"aw",%nobits
 208              		.align	2
 209              		.set	.LANCHOR1,. + 0
 212              	Thread_ADC_LightSensor_max_stack_size:
 213 0000 00000000 		.space	4
 214              		.section	.bss.UART_TX_queue_full_count,"aw",%nobits
 215              		.align	1
 216              		.set	.LANCHOR3,. + 0
 219              	UART_TX_queue_full_count:
 220 0000 0000     		.space	2
 221              		.section	.bss.lightVal.8082,"aw",%nobits
ARM GAS  /tmp/ccxHAPfo.s 			page 6


 222              		.align	1
 223              		.set	.LANCHOR2,. + 0
 226              	lightVal.8082:
 227 0000 0000     		.space	2
 228              		.section	.data.ADC_msg.8084,"aw",%progbits
 229              		.align	2
 230              		.set	.LANCHOR0,. + 0
 233              	ADC_msg.8084:
 234 0000 41444320 		.ascii	"ADC start-up message.\012\000"
 234      73746172 
 234      742D7570 
 234      206D6573 
 234      73616765 
 235 0017 00000000 		.space	41
 235      00000000 
 235      00000000 
 235      00000000 
 235      00000000 
 236              		.section	.rodata.Thread_ADC_LightSensor.str1.4,"aMS",%progbits,1
 237              		.align	2
 238              	.LC0:
 239 0000 25643A20 		.ascii	"%d: %d\012\000"
 239      25640A00 
 240              		.text
 241              	.Letext0:
 242              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 243              		.file 3 "/usr/include/newlib/sys/lock.h"
 244              		.file 4 "/usr/include/newlib/sys/_types.h"
 245              		.file 5 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 246              		.file 6 "/usr/include/newlib/sys/reent.h"
 247              		.file 7 "/usr/include/newlib/sys/_stdint.h"
 248              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 249              		.file 9 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 250              		.file 10 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 251              		.file 11 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 252              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 253              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 254              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 255              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 256              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 257              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 258              		.file 18 "/usr/include/newlib/stdio.h"
 259              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc_ex.h"
ARM GAS  /tmp/ccxHAPfo.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ADC.c
     /tmp/ccxHAPfo.s:16     .text.Thread_ADC_LightSensor:0000000000000000 $t
     /tmp/ccxHAPfo.s:23     .text.Thread_ADC_LightSensor:0000000000000000 Thread_ADC_LightSensor
     /tmp/ccxHAPfo.s:194    .text.Thread_ADC_LightSensor:00000000000000e4 $d
     /tmp/ccxHAPfo.s:208    .bss.Thread_ADC_LightSensor_max_stack_size:0000000000000000 $d
     /tmp/ccxHAPfo.s:212    .bss.Thread_ADC_LightSensor_max_stack_size:0000000000000000 Thread_ADC_LightSensor_max_stack_size
     /tmp/ccxHAPfo.s:215    .bss.UART_TX_queue_full_count:0000000000000000 $d
     /tmp/ccxHAPfo.s:219    .bss.UART_TX_queue_full_count:0000000000000000 UART_TX_queue_full_count
     /tmp/ccxHAPfo.s:222    .bss.lightVal.8082:0000000000000000 $d
     /tmp/ccxHAPfo.s:226    .bss.lightVal.8082:0000000000000000 lightVal.8082
     /tmp/ccxHAPfo.s:229    .data.ADC_msg.8084:0000000000000000 $d
     /tmp/ccxHAPfo.s:233    .data.ADC_msg.8084:0000000000000000 ADC_msg.8084
     /tmp/ccxHAPfo.s:237    .rodata.Thread_ADC_LightSensor.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memset
HAL_ADCEx_Calibration_Start
Error_Handler
osMessageQueuePut
osThreadYield
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_GetTick
sprintf
HAL_GPIO_WritePin
osDelay
osThreadGetStackSpace
HAL_ADC_Start
hadc1
Queue_UART_TXHandle
ADC_LightSensorHandle
